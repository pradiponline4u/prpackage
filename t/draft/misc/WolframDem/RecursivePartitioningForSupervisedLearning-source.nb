(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     69487,       1695]
NotebookOptionsPosition[     68068,       1643]
NotebookOutlinePosition[     68736,       1668]
CellTagsIndexPosition[     68693,       1665]
WindowTitle->Recursive Partitioning for Supervised Learning - Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Recursive Partitioning for Supervised Learning", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
FP/69esnAAAAAAAAAAAAwM74B4thROM=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Mu]", ",", "dists", ",", "s1", ",", "s2", ",", "res", ",", "rules", 
       ",", "d", ",", "t", ",", "svd", ",", "apts", ",", "bpts", ",", 
       "aregion", ",", "bregion", ",", "xmin", ",", "xmax", ",", "ymin", ",", 
       "ymax", ",", "zmin", ",", "zmax"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"\[Mu]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Mu]11", ",", "\[Mu]12", ",", "\[Mu]13"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Mu]21", ",", "\[Mu]22", ",", "\[Mu]23"}], "}"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dists", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"$VersionNumber", "<", "7.9"}], ",", 
            RowBox[{"MultivariateStatistics`MultinormalDistribution", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"5", ",", "3"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"System`MultinormalDistribution", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"5", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Mu]", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<A\>\""}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Mu]", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<B\>\""}], "}"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2"}], "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"LabelSample", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", "n", "}"}]}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"dists", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<A\>\""}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"dists", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<B\>\""}], "}"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"res", ",", "rules"}], "}"}], "=", 
       RowBox[{"Reap", "[", 
        RowBox[{"RecursiveBranch", "[", 
         RowBox[{"s1", ",", "s2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d", "=", 
       RowBox[{"GetDendrogram", "[", "res", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{"GetBranchText", "[", 
        RowBox[{"d", ",", "rules"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"apts", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<A\>\"", ",", "Red"}], "]"}], ",", "#"}], "]"}], 
            "&"}], ",", 
           RowBox[{"s1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bpts", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<B\>\"", ",", "Blue"}], "]"}], ",", "#"}], "]"}], 
            "&"}], ",", 
           RowBox[{"s2", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ymin", ",", "ymax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"zmin", ",", "zmax"}], "}"}]}], "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"s1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", 
            RowBox[{"s2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], "]"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aregion", ",", "bregion"}], "}"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RegionPlot3D", "[", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"Or", ",", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"PathToRule", "[", 
                  RowBox[{
                   RowBox[{"rules", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "#"}], "]"}], 
                 "&"}], ",", 
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "_"}], "]"}], 
                   "]"}]}], "]"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"xmin", "-", "1"}], ",", 
              RowBox[{"xmax", "+", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"ymin", "-", "1"}], ",", 
              RowBox[{"ymax", "+", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"zmin", "-", "1"}], ",", 
              RowBox[{"zmax", "+", "1"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"Opacity", "[", "0.25", "]"}]}], "]"}]}], ",", 
            RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<A\>\"", ",", "Red"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<B\>\"", ",", "Blue"}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{
            "aregion", ",", "bregion", ",", "apts", ",", "bpts", ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"200", ",", "200"}], "}"}]}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}], ",", 
           RowBox[{"BarChart", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "\[Mu]", "]"}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}]}], "}"}], ",", 
                "None"}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"200", ",", "200"}], "}"}]}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"25", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"25", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"d", ",", 
               RowBox[{"Graphics", "[", "t", "]"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"400", ",", "200"}], "}"}]}], ",", 
             RowBox[{"ImagePadding", "\[Rule]", "20"}]}], "]"}], ",", 
           "SpanFromLeft"}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}],
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<first distribution means\>\"", ",", "Bold"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]11", ",", "4.6", ",", "\"\<x\>\""}], "}"}], ",", "0", ",",
      "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]12", ",", ".8", ",", "\"\<y\>\""}], "}"}], ",", "0", ",", 
     "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]13", ",", "9.7", ",", "\"\<z\>\""}], "}"}], ",", "0", ",",
      "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<second distribution means\>\"", ",", "Bold"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]21", ",", "9.4", ",", "\"\<x\>\""}], "}"}], ",", "0", ",",
      "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]22", ",", "4.9", ",", "\"\<y\>\""}], "}"}], ",", "0", ",",
      "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]23", ",", "4.2", ",", "\"\<z\>\""}], "}"}], ",", "0", ",",
      "10", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<number of samples\>\"", ",", "Bold"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "30", ",", "\"\<n\>\""}], "}"}], ",", "10", ",", "50",
      ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Get", "[", "\"\<HierarchicalClustering`\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"$VersionNumber", "<", "7.9"}], ",", 
        RowBox[{"Get", "[", "\"\<MultivariateStatistics`\>\"", "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LabelSample", "[", 
        RowBox[{"sample_", ",", "label_"}], "]"}], ":=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "label", "}"}]}], "]"}], "&"}], ",", "sample"}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"SortColumn", "[", 
        RowBox[{"sample1_", ",", "sample2_", ",", "column_"}], "]"}], ":=", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"column", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"sample1", ",", "sample2"}], "}"}]}], "]"}], ",", "1"}],
           "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"CountPartition", "[", 
        RowBox[{"sortedcolumn_", ",", "point_", ",", "sym_"}], "]"}], ":=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"relation", ",", 
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"sortedcolumn", ",", 
               RowBox[{
                RowBox[{"relation", "[", 
                 RowBox[{
                  RowBox[{"First", "[", "#", "]"}], ",", "point"}], "]"}], 
                "&"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"_", ",", "sym"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"LessEqual", ",", "Greater"}], "}"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"GetPartition", "[", 
        RowBox[{"sortedcolumn_", ",", "point_"}], "]"}], ":=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"CountPartition", "[", 
            RowBox[{"sortedcolumn", ",", "point", ",", "#"}], "]"}], "&"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\"\<A\>\"", ",", "\"\<B\>\""}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GiniNode", "[", "node_", "]"}], ":=", 
       RowBox[{"1", "-", 
        RowBox[{"Total", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "/", 
               RowBox[{"Total", "[", "node", "]"}]}], ")"}], "^", "2"}], 
            "&"}], ",", "node"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Gini", "[", 
        RowBox[{"partition_", ",", "count_"}], "]"}], ":=", 
       RowBox[{"Total", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", "#", "]"}], "/", "count"}], "*", 
            RowBox[{"GiniNode", "[", "#", "]"}]}], "&"}], ",", "partition"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetSplitAndGini", "[", "sortedcolumn_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"bestsplit", ",", "midpoints"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"midpoints", "=", 
           RowBox[{"Mean", "/@", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"First", "/@", "sortedcolumn"}], ",", "2", ",", "1"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"bestsplit", "=", 
           RowBox[{"midpoints", "[", 
            RowBox[{"[", 
             RowBox[{"First", "@", 
              RowBox[{"Ordering", "@", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Gini", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"Length", "[", "sortedcolumn", "]"}]}], "]"}], 
                  "&"}], ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"GetPartition", "[", 
                    RowBox[{"sortedcolumn", ",", "#"}], "]"}], "&"}], ",", 
                   "midpoints"}], "]"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"bestsplit", ",", 
            RowBox[{
             RowBox[{"Gini", "[", 
              RowBox[{
               RowBox[{"GetPartition", "[", 
                RowBox[{"sortedcolumn", ",", "bestsplit"}], "]"}], ",", 
               RowBox[{"Length", "[", "sortedcolumn", "]"}]}], "]"}], "//", 
             "N"}]}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PartitionSample", "[", 
        RowBox[{"sample_", ",", "column_", ",", "split_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"sample", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "column", "]"}], "]"}], "\[LessEqual]", "split"}], 
            "&"}]}], "]"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"sample", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "column", "]"}], "]"}], ">", "split"}], "&"}]}], 
          "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ExtractRules", "[", "rules_", "]"}], ":=", 
       RowBox[{"Extract", "[", 
        RowBox[{"rules", ",", 
         RowBox[{"Position", "[", 
          RowBox[{"rules", ",", 
           RowBox[{"{", 
            RowBox[{"_", ",", 
             RowBox[{"{", 
              RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ExtractRulePositions", "[", "d_", "]"}], ":=", 
       RowBox[{
        RowBox[{"Extract", "[", 
         RowBox[{
          RowBox[{"FullForm", "[", "d", "]"}], ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"FullForm", "[", "d", "]"}], ",", 
            RowBox[{"Line", "[", "__", "]"}]}], "]"}]}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{"_", ",", "h_", ",", "i_", ",", "_"}], "}"}], "]"}], 
          "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"h", ",", "i"}], "}"}]}], "}"}]}]}], ";", 
      RowBox[{
       RowBox[{"GetDendrogram", "[", "res_", "]"}], ":=", 
       RowBox[{"HierarchicalClustering`DendrogramPlot", "[", 
        RowBox[{"res", ",", 
         RowBox[{"LeafLabels", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"#", "&"}], ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetBranchText", "[", 
        RowBox[{"d_", ",", "origrules_"}], "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "rules", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rules", "=", 
           RowBox[{"ExtractRules", "[", "origrules", "]"}]}], ";", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"pos", ",", "i"}], "}"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"First", "@", 
                   RowBox[{"rules", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "/", 
                    "2"}]}], ",", 
                  RowBox[{"pos", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Center", ",", "Top"}], "}"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"ExtractRulePositions", "[", "d", "]"}]}], "]"}]}]}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"Branch", "[", 
        RowBox[{"sample1_", ",", "sample2_"}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "split", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"split", "=", 
           RowBox[{"First", "@", 
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"GetSplitAndGini", "[", 
                    RowBox[{"SortColumn", "[", 
                    RowBox[{"sample1", ",", "sample2", ",", "#"}], "]"}], 
                    "]"}]}], "}"}], "&"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Dimensions", "[", "sample1", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], "]"}]}], "]"}],
               ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "&"}]}], "]"}]}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"split", ",", 
            RowBox[{"Transpose", "@", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"PartitionSample", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"split", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"split", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"sample1", ",", "sample2"}], "}"}]}], "]"}]}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Vote", "[", "c_", "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "l", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"l", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{"c", ",", 
              RowBox[{"{", 
               RowBox[{"__", ",", "\"\<A\>\""}], "}"}]}], "]"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"l", ">", 
             RowBox[{
              RowBox[{"Length", "[", "c", "]"}], "-", "l"}]}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<A\>\"", ",", "Red"}], "]"}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<B\>\"", ",", "Blue"}], "]"}], "]"}]}], "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RecursiveBranch", "[", 
        RowBox[{"sample1_", ",", " ", "sample2_"}], "]"}], ":=", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"branch", ",", "l", ",", "r", ",", "rules", ",", "reaped"}],
           "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "sample1", "]"}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"Length", "[", "sample2", "]"}], ">", "0"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"branch", "=", 
             RowBox[{"Branch", "[", 
              RowBox[{"sample1", ",", "sample2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"l", ",", "r"}], "}"}], ",", "reaped"}], "}"}], "=", 
             RowBox[{"Reap", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Apply", "[", 
                 RowBox[{"RecursiveBranch", ",", 
                  RowBox[{"branch", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"Apply", "[", 
                 RowBox[{"RecursiveBranch", ",", 
                  RowBox[{"branch", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "reaped", "]"}], ">", "3"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Sow", "[", 
                RowBox[{"branch", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", 
               RowBox[{"Sow", "[", 
                RowBox[{"reaped", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", 
               RowBox[{"Sow", "[", 
                RowBox[{"reaped", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Sow", "[", 
               RowBox[{"FlattenAt", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"branch", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"reaped", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "2"}], 
                "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"HierarchicalClustering`Cluster", "[", 
             RowBox[{"l", ",", "r", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"Head", "[", "l", "]"}], ",", 
                   "HierarchicalClustering`Cluster"}], "]"}], ",", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}], "+", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MatchQ", "[", 
                  RowBox[{
                   RowBox[{"Head", "[", "r", "]"}], ",", 
                   "HierarchicalClustering`Cluster"}], "]"}], ",", 
                 RowBox[{"r", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", "1"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"Head", "[", "l", "]"}], ",", 
                  "HierarchicalClustering`Cluster"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "+", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], ",", "1"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MatchQ", "[", 
                 RowBox[{
                  RowBox[{"Head", "[", "r", "]"}], ",", 
                  "HierarchicalClustering`Cluster"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"r", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "+", 
                 RowBox[{"r", "[", 
                  RowBox[{"[", "5", "]"}], "]"}]}], ",", "1"}], "]"}]}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "sample1", "]"}], ">", "0"}], ",", 
             RowBox[{"Sow", "[", 
              RowBox[{"Vote", "[", "sample1", "]"}], "]"}], ",", 
             RowBox[{"Sow", "[", 
              RowBox[{"Vote", "[", "sample2", "]"}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MakeRule", "[", "l_", "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"col", ",", "val", ",", "gini", ",", "left", ",", "right"}],
           "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{"l", ",", 
             RowBox[{"\"\<A\>\"", "|", "\"\<B\>\""}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Function", "[", 
            RowBox[{"x", ",", "l"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"{", 
                RowBox[{"val", ",", "gini"}], "}"}]}], "}"}], "=", 
             RowBox[{"l", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"left", "=", 
             RowBox[{"MakeRule", "[", 
              RowBox[{"l", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"right", "=", 
             RowBox[{"MakeRule", "[", 
              RowBox[{"l", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Function", "[", 
             RowBox[{"x", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "col", "]"}], "]"}], "<", "val"}], ",", 
                RowBox[{"left", "[", "x", "]"}], ",", 
                RowBox[{"right", "[", "x", "]"}]}], "]"}]}], "]"}]}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PathToRule", "[", 
        RowBox[{"rules_", ",", "p_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"col", ",", "val", ",", "gini", ",", "r"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"col", ",", 
             RowBox[{"{", 
              RowBox[{"val", ",", "gini"}], "}"}]}], "}"}], "=", 
           RowBox[{"rules", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"r", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "z"}], "}"}], "[", 
                RowBox[{"[", "col", "]"}], "]"}], "<", "val"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "p", "]"}], "<", "2"}], ",", 
               "\[IndentingNewLine]", "r", ",", "\[IndentingNewLine]", 
               RowBox[{"r", "&&", 
                RowBox[{"PathToRule", "[", 
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"Rest", "[", "p", "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"r", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "z"}], "}"}], "[", 
                RowBox[{"[", "col", "]"}], "]"}], ">", "val"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "p", "]"}], "<", "2"}], ",", 
               "\[IndentingNewLine]", "r", ",", "\[IndentingNewLine]", 
               RowBox[{"r", "&&", 
                RowBox[{"PathToRule", "[", 
                 RowBox[{
                  RowBox[{"rules", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], ",", 
                  RowBox[{"Rest", "[", "p", "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}]}]}], "]"}]}]}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, {3.4894312026569433`*^9, 3.489431205593727*^9}, {
   3.489431262409505*^9, 3.489431404742241*^9}, {3.489431439942663*^9, 
   3.489431442269899*^9}, {3.489431486615464*^9, 3.489431635240258*^9}, 
   3.489431752000087*^9, {3.4894317962767277`*^9, 3.489431807680193*^9}, {
   3.4894320059371967`*^9, 3.4894320392103167`*^9}, {3.489432543993764*^9, 
   3.489432553607924*^9}, {3.489432594261229*^9, 3.48943273706634*^9}, {
   3.489432838202959*^9, 3.489432841424333*^9}, {3.489432912375204*^9, 
   3.489432923617105*^9}, {3.489433394391795*^9, 3.489433404312003*^9}, {
   3.4894334772643137`*^9, 3.489433580341895*^9}, {3.4894336210418043`*^9, 
   3.489433636726304*^9}, {3.489570995715561*^9, 3.489571113738524*^9}, {
   3.489571273524159*^9, 3.489571317852639*^9}, {3.489571999622571*^9, 
   3.489572134337078*^9}, {3.489572168032649*^9, 3.489572179175263*^9}, {
   3.489572307725669*^9, 3.489572348889752*^9}, {3.489572387056386*^9, 
   3.489572391910742*^9}, {3.489572490990644*^9, 3.489572526317561*^9}, {
   3.489572602735598*^9, 3.489572604276174*^9}, {3.489572709111755*^9, 
   3.489572837100182*^9}, {3.4895728734960203`*^9, 3.489572999734891*^9}, {
   3.489573067979347*^9, 3.489573091688792*^9}, {3.4895732513161297`*^9, 
   3.489573294315127*^9}, {3.489574657820551*^9, 3.489574663956483*^9}, {
   3.4896013066737423`*^9, 3.4896014778662167`*^9}, {3.490877853513294*^9, 
   3.490877928862047*^9}, {3.490878016516631*^9, 3.490878042226534*^9}, {
   3.490878082737857*^9, 3.490878085992375*^9}, {3.490878371743181*^9, 
   3.490878429464943*^9}, {3.4908784609958982`*^9, 3.490878514426365*^9}, {
   3.4908785652075443`*^9, 3.490878582285326*^9}, {3.490878649274867*^9, 
   3.49087867710532*^9}, {3.490878774875527*^9, 3.490878818123624*^9}, {
   3.49087889637883*^9, 3.490879054116186*^9}, {3.490879136152486*^9, 
   3.490879240587903*^9}, {3.490879284339073*^9, 3.490879307945801*^9}, {
   3.490879375344699*^9, 3.490879376238785*^9}, {3.490879562337888*^9, 
   3.490879875501129*^9}, {3.490879956163746*^9, 3.490880038039591*^9}, {
   3.49088012310116*^9, 3.4908804497500563`*^9}, {3.490880480032254*^9, 
   3.490880555015869*^9}, {3.490894712708555*^9, 3.490894715082122*^9}, {
   3.490894912051791*^9, 3.490894950675469*^9}, {3.490895090941072*^9, 
   3.4908953062346087`*^9}, {3.4908953836342783`*^9, 3.490895575905982*^9}, {
   3.490895627300355*^9, 3.4908957193273478`*^9}, {3.490895767401067*^9, 
   3.490895803695876*^9}, {3.490895837113538*^9, 3.4908958962987747`*^9}, {
   3.4908959463327427`*^9, 3.4908960258404837`*^9}, {3.49089609320107*^9, 
   3.49089609691335*^9}, {3.490896140127142*^9, 3.490896247103077*^9}, {
   3.490896310158051*^9, 3.4908963102486258`*^9}, {3.490896377643306*^9, 
   3.4908964148213587`*^9}, {3.4915692329653263`*^9, 3.491569572191063*^9}, {
   3.49176468974374*^9, 3.491764691405178*^9}, {3.491773628551483*^9, 
   3.491773719083899*^9}, {3.491773983863659*^9, 3.491774099054373*^9}, {
   3.491774134739134*^9, 3.491774163556999*^9}, {3.491929131873539*^9, 
   3.491929178246176*^9}, {3.4992251496924334`*^9, 3.499225192051669*^9}},
 CellID->1939715889]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 30, $CellContext`\[Mu]11$$ = 
    4.6, $CellContext`\[Mu]12$$ = 0.8, $CellContext`\[Mu]13$$ = 
    9.7, $CellContext`\[Mu]21$$ = 9.4, $CellContext`\[Mu]22$$ = 
    4.9, $CellContext`\[Mu]23$$ = 4.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["first distribution means", Bold]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Mu]11$$], 4.6, "x"}, 0, 10, 0.01}, {{
       Hold[$CellContext`\[Mu]12$$], 0.8, "y"}, 0, 10, 0.01}, {{
       Hold[$CellContext`\[Mu]13$$], 9.7, "z"}, 0, 10, 0.01}, {
      Hold[
       Style["second distribution means", Bold]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Mu]21$$], 9.4, "x"}, 0, 10, 0.01}, {{
       Hold[$CellContext`\[Mu]22$$], 4.9, "y"}, 0, 10, 0.01}, {{
       Hold[$CellContext`\[Mu]23$$], 4.2, "z"}, 0, 10, 0.01}, {
      Hold[
       Style["number of samples", Bold]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`n$$], 30, "n"}, 10, 50, 1}}, Typeset`size$$ = {
    408., {200., 205.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`\[Mu]11$18582$$ = 
    0, $CellContext`\[Mu]12$18583$$ = 0, $CellContext`\[Mu]13$18584$$ = 
    0, $CellContext`\[Mu]21$18585$$ = 0, $CellContext`\[Mu]22$18586$$ = 
    0, $CellContext`\[Mu]23$18587$$ = 0, $CellContext`n$18588$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 30, $CellContext`\[Mu]11$$ = 
        4.6, $CellContext`\[Mu]12$$ = 0.8, $CellContext`\[Mu]13$$ = 
        9.7, $CellContext`\[Mu]21$$ = 9.4, $CellContext`\[Mu]22$$ = 
        4.9, $CellContext`\[Mu]23$$ = 4.2}, "ControllerVariables" :> {
        Hold[$CellContext`\[Mu]11$$, $CellContext`\[Mu]11$18582$$, 0], 
        Hold[$CellContext`\[Mu]12$$, $CellContext`\[Mu]12$18583$$, 0], 
        Hold[$CellContext`\[Mu]13$$, $CellContext`\[Mu]13$18584$$, 0], 
        Hold[$CellContext`\[Mu]21$$, $CellContext`\[Mu]21$18585$$, 0], 
        Hold[$CellContext`\[Mu]22$$, $CellContext`\[Mu]22$18586$$, 0], 
        Hold[$CellContext`\[Mu]23$$, $CellContext`\[Mu]23$18587$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$18588$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Mu]$, $CellContext`dists$, $CellContext`s1$, \
$CellContext`s2$, $CellContext`res$, $CellContext`rules$, $CellContext`d$, \
$CellContext`t$, $CellContext`svd$, $CellContext`apts$, $CellContext`bpts$, \
$CellContext`aregion$, $CellContext`bregion$, $CellContext`xmin$, \
$CellContext`xmax$, $CellContext`ymin$, $CellContext`ymax$, \
$CellContext`zmin$, $CellContext`zmax$}, $CellContext`\[Mu]$ = \
{{$CellContext`\[Mu]11$$, $CellContext`\[Mu]12$$, $CellContext`\[Mu]13$$}, \
{$CellContext`\[Mu]21$$, $CellContext`\[Mu]22$$, $CellContext`\[Mu]23$$}}; \
$CellContext`dists$ = Map[If[$VersionNumber < 7.9, 
            MultivariateStatistics`MultinormalDistribution[
             Part[#, 1], 
             DiagonalMatrix[
              RandomReal[5, 3]]], 
            MultinormalDistribution[
             Part[#, 1], 
             DiagonalMatrix[
              RandomReal[5, 3]]]]& , {{
             Part[$CellContext`\[Mu]$, 1], "A"}, {
             Part[$CellContext`\[Mu]$, 2], 
             "B"}}]; {$CellContext`s1$, $CellContext`s2$} = 
         Map[$CellContext`LabelSample[
            RandomReal[
             Part[#, 1], {$CellContext`n$$}], 
            Part[#, 2]]& , {{
             Part[$CellContext`dists$, 1], "A"}, {
             Part[$CellContext`dists$, 2], 
             "B"}}]; {$CellContext`res$, $CellContext`rules$} = Reap[
           $CellContext`RecursiveBranch[$CellContext`s1$, $CellContext`s2$]]; \
$CellContext`d$ = $CellContext`GetDendrogram[$CellContext`res$]; \
$CellContext`t$ = $CellContext`GetBranchText[$CellContext`d$, \
$CellContext`rules$]; $CellContext`apts$ = Graphics3D[
           Map[Text[
             Style["A", Red], #]& , 
            Part[$CellContext`s1$, All, 
             Span[1, 3]]], Axes -> True]; $CellContext`bpts$ = Graphics3D[
           Map[Text[
             Style["B", Blue], #]& , 
            Part[$CellContext`s2$, All, 
             Span[1, 3]]], Axes -> 
           True]; {{$CellContext`xmin$, $CellContext`xmax$}, \
{$CellContext`ymin$, $CellContext`ymax$}, {$CellContext`zmin$, \
$CellContext`zmax$}} = Map[{
            Min[#], 
            Max[#]}& , 
           Transpose[
            Join[
             Part[$CellContext`s1$, All, 
              Span[1, 3]], 
             Part[$CellContext`s2$, All, 
              Span[1, 3]]]]]; {$CellContext`aregion$, $CellContext`bregion$} = 
         Map[RegionPlot3D[
            Apply[Or, 
             Map[$CellContext`PathToRule[
               Part[$CellContext`rules$, 1, 1], #]& , 
              Position[
               Part[$CellContext`rules$, 1, 1], 
               Text[
                Style[
                 Part[#, 1], 
                 Blank[]]]]]], {$CellContext`x, $CellContext`xmin$ - 
             1, $CellContext`xmax$ + 1}, {$CellContext`y, $CellContext`ymin$ - 
             1, $CellContext`ymax$ + 1}, {$CellContext`z, $CellContext`zmin$ - 
             1, $CellContext`zmax$ + 1}, PlotStyle -> Directive[
              Part[#, 2], 
              Opacity[0.25]], Mesh -> None]& , {{"A", Red}, {"B", Blue}}]; 
        Grid[{{
            
            Show[$CellContext`aregion$, $CellContext`bregion$, \
$CellContext`apts$, $CellContext`bpts$, ImageSize -> {200, 200}, ImagePadding -> 
             20], 
            BarChart[
             Transpose[$CellContext`\[Mu]$], ChartLabels -> {{
                Style["x", Italic], 
                Style["y", Italic], 
                Style["z", Italic]}, None}, ImageSize -> {200, 200}, 
             ImagePadding -> {{25, 10}, {25, 10}}]}, {
            Show[{$CellContext`d$, 
              Graphics[$CellContext`t$]}, ImageSize -> {400, 200}, 
             ImagePadding -> 20], SpanFromLeft}}]], "Specifications" :> {
        Style[
        "first distribution means", 
         Bold], {{$CellContext`\[Mu]11$$, 4.6, "x"}, 0, 10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`\[Mu]12$$, 0.8, "y"}, 
         0, 10, 0.01, Appearance -> "Labeled", ImageSize -> 
         Tiny}, {{$CellContext`\[Mu]13$$, 9.7, "z"}, 0, 10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Tiny}, Delimiter, 
        Style[
        "second distribution means", 
         Bold], {{$CellContext`\[Mu]21$$, 9.4, "x"}, 0, 10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Tiny}, {{$CellContext`\[Mu]22$$, 4.9, "y"}, 
         0, 10, 0.01, Appearance -> "Labeled", ImageSize -> 
         Tiny}, {{$CellContext`\[Mu]23$$, 4.2, "z"}, 0, 10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Tiny}, Delimiter, 
        Style[
        "number of samples", Bold], {{$CellContext`n$$, 30, "n"}, 10, 50, 1, 
         Appearance -> "Labeled", ImageSize -> Tiny}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{588., {229., 234.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>((Get["HierarchicalClustering`"]; If[$VersionNumber < 7.9, 
        Get["MultivariateStatistics`"]]; $CellContext`LabelSample[
         Pattern[$CellContext`sample, 
          Blank[]], 
         Pattern[$CellContext`label, 
          Blank[]]] := 
       Map[Join[#, {$CellContext`label}]& , $CellContext`sample]; \
$CellContext`SortColumn[
         Pattern[$CellContext`sample1, 
          Blank[]], 
         Pattern[$CellContext`sample2, 
          Blank[]], 
         Pattern[$CellContext`column, 
          Blank[]]] := Sort[
         Flatten[
          Map[
          Part[#, All, {$CellContext`column, -1}]& , {$CellContext`sample1, \
$CellContext`sample2}], 1], Part[#, 1] < 
         Part[#2, 1]& ]; $CellContext`CountPartition[
         Pattern[$CellContext`sortedcolumn, 
          Blank[]], 
         Pattern[$CellContext`point, 
          Blank[]], 
         Pattern[$CellContext`sym, 
          Blank[]]] := Map[
         Function[$CellContext`relation, 
          Count[
           Select[$CellContext`sortedcolumn, $CellContext`relation[
             First[#], $CellContext`point]& ], {
            Blank[], $CellContext`sym}]], {
         LessEqual, Greater}]; $CellContext`GetPartition[
         Pattern[$CellContext`sortedcolumn, 
          Blank[]], 
         Pattern[$CellContext`point, 
          Blank[]]] := Transpose[
         Map[$CellContext`CountPartition[$CellContext`sortedcolumn, \
$CellContext`point, #]& , {"A", "B"}]]; $CellContext`GiniNode[
         Pattern[$CellContext`node, 
          Blank[]]] := 1 - Total[
         Map[(#/
           Total[$CellContext`node])^2& , $CellContext`node]]; \
$CellContext`Gini[
         Pattern[$CellContext`partition, 
          Blank[]], 
         Pattern[$CellContext`count, 
          Blank[]]] := Total[
         Map[(
           Total[#]/$CellContext`count) $CellContext`GiniNode[#]& , \
$CellContext`partition]]; $CellContext`GetSplitAndGini[
         Pattern[$CellContext`sortedcolumn, 
          Blank[]]] := 
       Module[{$CellContext`bestsplit, $CellContext`midpoints}, \
$CellContext`midpoints = Map[Mean, 
            Partition[
             Map[First, $CellContext`sortedcolumn], 2, 
             1]]; $CellContext`bestsplit = Part[$CellContext`midpoints, 
            First[
             Ordering[
              Map[$CellContext`Gini[#, 
                Length[$CellContext`sortedcolumn]]& , 
               
               Map[$CellContext`GetPartition[$CellContext`sortedcolumn, #]& , \
$CellContext`midpoints]]]]]; {$CellContext`bestsplit, 
           N[
            $CellContext`Gini[
             $CellContext`GetPartition[$CellContext`sortedcolumn, \
$CellContext`bestsplit], 
             
             Length[$CellContext`sortedcolumn]]]}]; \
$CellContext`PartitionSample[
         Pattern[$CellContext`sample, 
          Blank[]], 
         Pattern[$CellContext`column, 
          Blank[]], 
         Pattern[$CellContext`split, 
          Blank[]]] := {
         Select[$CellContext`sample, 
          Part[#, $CellContext`column] <= $CellContext`split& ], 
         Select[$CellContext`sample, 
          Part[#, $CellContext`column] > $CellContext`split& ]}; \
$CellContext`ExtractRules[
         Pattern[$CellContext`rules, 
          Blank[]]] := Extract[$CellContext`rules, 
         Position[$CellContext`rules, {
           Blank[], {
            Blank[], 
            Blank[]}}]]; $CellContext`ExtractRulePositions[
         Pattern[$CellContext`d, 
          Blank[]]] := ReplaceAll[
         Extract[
          FullForm[$CellContext`d], 
          Position[
           FullForm[$CellContext`d], 
           Line[
            BlankSequence[]]]], {Line[{
             Blank[], 
             Pattern[$CellContext`h, 
              Blank[]], 
             Pattern[$CellContext`i, 
              Blank[]], 
             
             Blank[]}] -> {$CellContext`h, $CellContext`i}}]; \
$CellContext`GetDendrogram[
         Pattern[$CellContext`res, 
          Blank[]]] := 
       HierarchicalClustering`DendrogramPlot[$CellContext`res, 
         HierarchicalClustering`LeafLabels -> (#& )]; \
$CellContext`GetBranchText[
         Pattern[$CellContext`d, 
          Blank[]], 
         Pattern[$CellContext`origrules, 
          Blank[]]] := 
       Module[{$CellContext`rules}, $CellContext`rules = \
$CellContext`ExtractRules[$CellContext`origrules]; MapIndexed[
           Function[{$CellContext`pos, $CellContext`i}, 
            Text[
             ToString[Part[$CellContext`rules, $CellContext`i, 1] > First[
                Part[$CellContext`rules, $CellContext`i, 2, 1]]], {
             Part[$CellContext`pos, 1, 1] + (Part[$CellContext`pos, 2, 1] - 
                Part[$CellContext`pos, 1, 1])/2, 
              Part[$CellContext`pos, 1, 2]}, {Center, Top}]], 
           $CellContext`ExtractRulePositions[$CellContext`d]]]; \
$CellContext`Branch[
         Pattern[$CellContext`sample1, 
          Blank[]], 
         Pattern[$CellContext`sample2, 
          Blank[]]] := Module[{$CellContext`split}, $CellContext`split = First[
            Sort[
             Map[{#, 
               $CellContext`GetSplitAndGini[
                $CellContext`SortColumn[$CellContext`sample1, \
$CellContext`sample2, #]]}& , 
              Range[Part[
                 Dimensions[$CellContext`sample1], 2] - 1]], Part[#, 2, 2] < 
             Part[#2, 2, 2]& ]]; {$CellContext`split, 
           Transpose[
            Map[$CellContext`PartitionSample[#, 
              Part[$CellContext`split, 1], 
              
              Part[$CellContext`split, 2, 
               1]]& , {$CellContext`sample1, $CellContext`sample2}]]}]; \
$CellContext`Vote[
         Pattern[$CellContext`c, 
          Blank[]]] := Module[{$CellContext`l}, $CellContext`l = Length[
            Cases[$CellContext`c, {
              BlankSequence[], "A"}]]; 
         If[$CellContext`l > Length[$CellContext`c] - $CellContext`l, 
           Text[
            Style["A", Red]], 
           Text[
            Style["B", Blue]]]]; $CellContext`RecursiveBranch[
         Pattern[$CellContext`sample1, 
          Blank[]], 
         Pattern[$CellContext`sample2, 
          Blank[]]] := 
       Module[{$CellContext`branch, $CellContext`l, $CellContext`r, \
$CellContext`rules, $CellContext`reaped}, 
         If[
          And[
          Length[$CellContext`sample1] > 0, Length[$CellContext`sample2] > 
           0], $CellContext`branch = \
$CellContext`Branch[$CellContext`sample1, $CellContext`sample2]; \
{{$CellContext`l, $CellContext`r}, $CellContext`reaped} = Reap[{
              Apply[$CellContext`RecursiveBranch, 
               Part[$CellContext`branch, 2, 1]], 
              Apply[$CellContext`RecursiveBranch, 
               Part[$CellContext`branch, 2, 2]]}]; 
          If[Length[$CellContext`reaped] > 3, Sow[
              Part[$CellContext`branch, 1]]; Sow[
              Part[$CellContext`reaped, 1]]; Sow[
              Part[$CellContext`reaped, 2]], 
            Sow[
             FlattenAt[{
               Part[$CellContext`branch, 1], 
               Part[$CellContext`reaped, 1]}, 2]]]; 
          HierarchicalClustering`Cluster[$CellContext`l, $CellContext`r, If[
              MatchQ[
               Head[$CellContext`l], HierarchicalClustering`Cluster], 
              Part[$CellContext`l, 3], 1] + If[
              MatchQ[
               Head[$CellContext`r], HierarchicalClustering`Cluster], 
              Part[$CellContext`r, 3], 1], 
            If[
             MatchQ[
              Head[$CellContext`l], HierarchicalClustering`Cluster], 
             Part[$CellContext`l, 4] + Part[$CellContext`l, 5], 1], 
            If[
             MatchQ[
              Head[$CellContext`r], HierarchicalClustering`Cluster], 
             Part[$CellContext`r, 4] + Part[$CellContext`r, 5], 1]], 
          If[Length[$CellContext`sample1] > 0, 
           Sow[
            $CellContext`Vote[$CellContext`sample1]], 
           Sow[
            $CellContext`Vote[$CellContext`sample2]]]]]; $CellContext`MakeRule[
         Pattern[$CellContext`l, 
          Blank[]]] := 
       Module[{$CellContext`col, $CellContext`val, $CellContext`gini, \
$CellContext`left, $CellContext`right}, 
         If[
          MatchQ[$CellContext`l, 
           Alternatives["A", "B"]], 
          
          Function[$CellContext`x, $CellContext`l], {$CellContext`col, \
{$CellContext`val, $CellContext`gini}} = 
           Part[$CellContext`l, 1]; $CellContext`left = $CellContext`MakeRule[
            
             
             Part[$CellContext`l, 
              2]]; $CellContext`right = $CellContext`MakeRule[
             Part[$CellContext`l, 3]]; Function[$CellContext`x, 
            If[Part[$CellContext`x, $CellContext`col] < $CellContext`val, 
             $CellContext`left[$CellContext`x], 
             $CellContext`right[$CellContext`x]]]]]; $CellContext`PathToRule[
         Pattern[$CellContext`rules, 
          Blank[]], 
         Pattern[$CellContext`p, 
          Blank[]]] := 
       Module[{$CellContext`col, $CellContext`val, $CellContext`gini, \
$CellContext`r}, {$CellContext`col, {$CellContext`val, $CellContext`gini}} = 
          Part[$CellContext`rules, 1]; 
         If[Part[$CellContext`p, 1] == 
           2, $CellContext`r = 
            Part[{$CellContext`x, $CellContext`y, $CellContext`z}, \
$CellContext`col] < $CellContext`val; 
           If[Length[$CellContext`p] < 2, $CellContext`r, 
             And[$CellContext`r, 
              $CellContext`PathToRule[
               Part[$CellContext`rules, 2], 
               Rest[$CellContext`p]]]], $CellContext`r = 
            Part[{$CellContext`x, $CellContext`y, $CellContext`z}, \
$CellContext`col] > $CellContext`val; 
           If[Length[$CellContext`p] < 2, $CellContext`r, 
             And[$CellContext`r, 
              $CellContext`PathToRule[
               Part[$CellContext`rules, 3], 
               Rest[$CellContext`p]]]]]]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->329917939],

Cell[CellGroupData[{

Cell["CAPTION", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "Data is sampled from two three-dimensional Gaussian distributions with \
means that you can vary. Data points from the first Gaussian are labeled ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath"],
 " and data points from the second Gaussian are labeled ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath"],
 ". The recursive partitioning algorithm is run on this training data to \
determine rules for classifying new data points. The first plot shows the \
training data and the regions that are determined by the algorithm. The bar \
chart at the top right gives a visual representation of the means of the \
Gaussian distributions. The tree at the bottom is a visual representation of \
the classification rules determined by the algorithm. Each path to a leaf \
node represents a region in space."
}], "Text"]
}, Close]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DETAILS", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "Recursive partitioning is a tree-based method for classifying data. For \
data points in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "n"], TraditionalForm]], 
  "InlineMath"],
 " with labels ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", "2", ",", "...", ",", "K"}], TraditionalForm]], 
  "InlineMath"],
 ", the recursive partitioning algorithm splits the data in one of the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath"],
 " dimensions into two sets such that some node purity criterion is met. The \
simplest node purity criterion, called the Gini index, attempts to maximize \
the proportion of data points with one of the ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]], "InlineMath"],
 " labels in each set. The partitioning algorithm is then run recursively on \
each set until nodes are totally pure in the sense that only one of the ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]], "InlineMath"],
 " class labels is represented. Thus recursive partitioning splits the \
feature space into distinct regions. Each region is then given a label based \
on the represented class in that region."
}], "Text"],

Cell["\<\
Recursive partitioning is a fast and fairly accurate algorithm for \
classifying data. It works well for real-valued variables as well as for \
categorical variables. It also has the appealing property of being \
interpretable. For instance, consider a medical example, a model for \
predicting whether a patient has diabetes or not. The training data consists \
of height, weight, age, and so on and each case is labeled either \
\"Diabetes\" or \"Not\". The recursive partitioning algorithm would construct \
a rule that maps naturally to a medical professional's intuition: If the \
patient's age is greater than 50 and the patient's weight is greater than 180 \
pounds and the patient's height is less than 5' 5\", then use the label \
\"Diabetes\", and so on.\
\>", "Text"],

Cell[TextData[{
 "T. Hastie, R. Tibshirani, and J. Friedman, ",
 StyleBox["The Elements of Statistical Learning: Data Mining, Inference, and \
Prediction",
  FontSlant->"Italic"],
 ", 2nd ed., New York: Springer, 2001."
}], "Text"]
}, Close]],

Cell[CellGroupData[{

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "\"",
 ButtonBox["Recursive Partitioning for Supervised Learning",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
RecursivePartitioningForSupervisedLearning/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/\
RecursivePartitioningForSupervisedLearning/"],
 "\"",
 " from ",
 ButtonBox["the Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/\
RecursivePartitioningForSupervisedLearning/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
RecursivePartitioningForSupervisedLearning/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/\
RecursivePartitioningForSupervisedLearning/"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Anthony Fox",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Anthony+Fox"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Anthony+Fox"]
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system (Version 6 or higher) is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[1, 1, 1]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
RecursivePartitioningForSupervisedLearning"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{780, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Recursive Partitioning for Supervised Learning - Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[648, 23, 166, 3, 70, "Section"],
Cell[817, 28, 3700, 64, 70, "Section"],
Cell[4520, 94, 38066, 927, 70, "Input",
 CellID->1939715889]
}, Open  ]],
Cell[CellGroupData[{
Cell[42623, 1026, 17838, 393, 70, "Output",
 CellID->329917939],
Cell[CellGroupData[{
Cell[60486, 1423, 209, 6, 70, "Section"],
Cell[60698, 1431, 936, 19, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61682, 1456, 209, 6, 70, "Section"],
Cell[61894, 1464, 1186, 27, 70, "Text"],
Cell[63083, 1493, 788, 12, 70, "Text"],
Cell[63874, 1507, 231, 6, 70, "Text"]
}, Close]],
Cell[CellGroupData[{
Cell[64141, 1518, 355, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[64499, 1529, 1051, 31, 70, "Text"],
Cell[65553, 1562, 430, 14, 70, "Text"],
Cell[CellGroupData[{
Cell[66008, 1580, 815, 24, 70, "Text"],
Cell[66826, 1606, 1214, 33, 70, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature pRzlQG@0E2RcxApf42RxYm5h *)
