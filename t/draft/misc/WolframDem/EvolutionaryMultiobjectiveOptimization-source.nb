(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    244601,       4696]
NotebookOptionsPosition[    240731,       4562]
NotebookOutlinePosition[    241393,       4587]
CellTagsIndexPosition[    241350,       4584]
WindowTitle->Evolutionary Multiobjective Optimization - Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Evolutionary Multiobjective Optimization", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztnVuSozgWQDNiPqa3MJ+zpVlCbaB3WlGVNV9dvYH6TQRUph/ZGIHQmwvG
xoZzQu3Aku7VfUj4Nk53//fLn//78q+Xl5f/NP/88e+Xl8v154Xj5+fp89y0
4+X63L7VnQu02XqOt9FzjRK5qtRMoYZFpk11/Ji+WDye92+r7+fFfbnGkuu9
eIQ4LBVJ+YRo5DPnRdITDp0TLRg6m/62nY/n08f5+H461G37fWqum57z4Xy2
jby0prMZOh4/jodLOx2bt6fzRSEA3B/KMKGSBy/DSKVcyYOn8krHqajvqed6
G6iol4qkfAIVNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsizPA/lj72AEA
AMCmWLu0AXh01j6jAAAAcdb+hNwUJ5e1zZnPDEeey/e1jx0AAABsirVLm03x
XFVlhs1X1JNY+4wCAAB02B9PJ4BdsvYpBAAAgOeGihpADo9GAUDIr+Lnr7ef
a9vw16/i73VtMPx6+2v1gGwMijeAE89FAQA2DRW1BxX14lBRA0wi+lx0baMA
AAAAAAAAAAAAbkj0uegR4L4cDoe1TYA1YQMAbIaDy9rm3JU9+w4AjwB3np3D
BgDYDHuuKu/su3k0ynNRACGLHMy93dm2ijCPpHvD7LliAQAAmA0VNRioqIGK
GlYk9Vz0AAAAAAAAAAAAALBR9KPR8Kf0a9sFAAAAAAAAAAAAcCt4LgoAAAAA
AAAAAAB7I/Vc9ONheH9/X9uEzUJsZ0PoAGBZ3gNuLQgggR21GUjl7SC2syF0
ALAsVNQgxMv14XAI/xOja9sIAAAAT0lYWM5jbT/msGffAQAAAGAp9lxV3sF3
b1r0uehSZgAAAAAAAAAAAAA8Ar9b6rpuXpu3+tf0PBcFWJcFvxYBAAAAANgh
VNQAADCK5LnobwAAAAAAAAAAAIANUbcPRav+wehH7LmoUqpsqKqmNTSXRVE0
by593mtRXlrfo7mImTlVN6ebUOhR07q3jmxVWXqquqxVOUjZq1eDVNe662ro
Nxe1Xr5o2lt5cUc7VWr3BpGindNL6TkDl5nVIGWtbuaXWbwJo/OVKjSX68oL
shMTO4ylHf+yy5GbhU5EubJJPeWgx5ayBfvOIR2qD5QJXWmFtJs2pLsLvu40
4oOesh/tJ3TKW/3DomZONgVdVPtNXvVXYWydyBRl/NWNWNW62L06G344TcNW
L/SVpaTqcmeOWGWOm3W+TFPWsbL8dE1yklUal73ghDtBH+Hu1dE/HBM7/t7h
sjNoN29Calrl2GadWfsMeoc0elcR584clrm5qzO5a+5mQe4imy2Tu1qcu+g2
7od7mkvVtqJtajgInQuqzUrRtWFCzIAkzQdK0/RR1U33JEhtgOhosnmLKtX0
DArVhaJHtZOlmgPbVN+mWZhRGzNvEc13MD61kIRcEPS2WciRp/C97a0ow569
DCOVRurZU0lFnUoBFbWkKiv7I0xFLc4dFXUAFfVUtVTUYRD2V1EnfTd7u920
v+va/NXoSXM86qXVwFtzgNvS7vJG3730Ga76Wkq/6lFz3dlWOa+69XpUOSix
ixQtrrVV1pxBleO+uesMsv6QjenXF+bViFjGO5rtObaUp7bVoENe21Kqy1Un
1M8xOaxNftysOh61q5joKStQpbkIQ2p54HRWXcqsOsbVU7oZNBr8Fbv+yotk
GBkvbuFbu9/LkY6DF3ZvTvqtOVXdBi0dlN6WZekEsHfQ2flmjpnQ+25vfn//
2yH1eswnokp/tNkpsJNrTqJruX4tzAkKBJXJVdUbbJmtrwtrUfuoGm2Ru5S3
AcrEGQyPld3jzbFTH+oP+is3d+XVuev2wI1zN9w8rZM1I3dFf203xxKvuUyT
TevJkd8JSzF7iVHBzJa+D0vFZJLapawNh6xiQ91ixaf03R+lDHvaMqwPCKl8
+lRGgkZF3W3Q0oGKmoq685yKmoo6L5jZ0vdhqZhMUruUteEQFfUk37VU98C8
qRvq+uPjQz8UPZ/P+snoZYIqVAwtaFY0r+E0+8l8VIM3Gs70JkelUoLR0XBm
2X5dldcmWS5lQ2r1jDue+DBaRvrzvidVpc2WOKJicRvVZu+HaFqjgpngC/MS
Fek2rRvSjKCy9rnxfepWFFKokVMzWaEsU9GDbEYnbfuoYOpGkdcwql/Sv+fc
CVdJcY1a+Yo3WuUaZsfE+9S+j3mTRuFZoAxL9eTtFK6ecccTH0bnlmGkMtXz
dKnMLCTpifZTUUfnyNOR4QGrstQuHTXGFqSiXiV3wlVSXKNWvuKNVrmG2TGh
ooZb0+T0rUWf/br9e1HvuWjR/z1/+JOUIujKPxYu+l9YCEX0kGVARDxjjHxa
ygZv6ejF6KiE0cfp0eUk6JMrmVamQx1qkPTIRzNSo4LC0OnbV7S/tD7WRw32
ElFYP1/y7EkZn09lPhHedej7vDiHSkbzq79YsWcWfUUUzYgXf7mdqa04eiK0
ebYxe86d9yE+T3n+OzuVqHbMx01Up/kkCud7Q0ZJ5uvCRQhNGvVCoueayK9O
mKP8qDDd9szol7b5AM5LSup0P7LvxXBX8dWGvlCGTTJm1IBwianK3QySyo2k
clR/KtShBkmPfDQjNSpIRS0xexJRy8NjS0UtMfVBcmegoh6FijrkEarKPVfU
Gd89w+rwd/Tt34uq/kuT6C2xsG5WhXvLsu+KUb+8/kxsvQMryUIxdp8PLc/c
FiblXaJEcgvKuODFf54N8yYXwYejZ2fUbO8i5b7kXwRSPfJtFu1JWZ7BtlZu
eRg9XXJEbcuriorIU2xkjYjQi2hJFjXeFvFmhjeNUWu9HhO3/LQoe8tdSKqC
ys+f+tE5aZVoBSU0T87U+sr2emq4Ur7k9eQrhydiaqiF3LqSX4QFfacMk684
yaT7l2GkUr7iJJOoqKMrUlGPritxZ9RyT9aIUFHn133e3IVQUQvVUlHPhor6
1r6r/k9G9X1A/47+dDrZ/9+lb9++vbr8+PHDe7X7w077rafHU+JNTo1GF/Wu
U52hhtCjqGEZJVGdoZsp5ZmZoRe2kc3Fd0tnKGKvJQ9UKr8pRh15dY0MZTOO
e/pTa43OSUmFpn5Pbzzv7agveTNCJRnZ70FCX4OU5ZWn9KfiELrpLZ3aIZn0
RYmGN+NRPsIpd7y19pa7qIhQZ15coicVmamMLjpb1SLmLUgmzlOtzau6RRAm
bYxFTJoh9Vy+U4aNKonqDN1MKc/MDL2wjXydWIaRylElz5LKVExSS2Scigqm
HHl1jQxlM457+lNrjc5JSYWmUlF7jqQ2RmqHZNIXJRrejEf5CKfc8dbaW+6i
IkKdeXGJnlRkpjK66GxVi5i3IJk4T7U2r+oWQZi0MRYxaYbUZnyPLvH/lte2
FP/69esnAAAAAAAAAAAAwM74B4thROM=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"fastNondominatedSort", "[", "pop_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "iRelationTable", ",", "iCurrentFront", ",", "iDominatedSolutions", ",", 
      "numberDominatingSolutions", ",", "iNondominatedFronts", ",", 
      "domSolByCurrentFront", ",", "solutionsLeft"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "compare", " ", "solutions", " ", "with", " ", "each", " ", "other"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"iRelationTable", "=", 
      RowBox[{"Outer", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dominates", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], ",", "True", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"dominates", "[", 
            RowBox[{"#2", ",", "#1"}], "]"}], ",", "False"}], 
          "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
        "pop", ",", "pop", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "for", " ", "each", " ", "solution", " ", "s", " ", "store", " ", 
       "dominated", " ", "solutions", " ", "and", " ", "number", " ", "of", 
       " ", "solution", " ", "which", " ", "dominate", " ", "s"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"iDominatedSolutions", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"#", ",", "True"}], "]"}], "&"}], ",", "iRelationTable"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"numberDominatingSolutions", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"#", ",", "False"}], "]"}], "&"}], ",", "iRelationTable"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"nondominated", " ", "front"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"iCurrentFront", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"numberDominatingSolutions", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"iNondominatedFronts", "=", 
      RowBox[{"{", 
       RowBox[{"iCurrentFront", "//", "Flatten"}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "partition", " ", "solutions", " ", "in", " ", "nondominating", " ", 
       "fronts"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"solutionsLeft", "=", "numberDominatingSolutions"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"iCurrentFront", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "dominated", " ", "solutions", " ", "by", " ", "current", " ", 
         "front"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"domSolByCurrentFront", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{"iDominatedSolutions", ",", "iCurrentFront"}], "]"}], ",",
            "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "set", " ", "number", " ", "of", " ", "dominations", " ", "for", 
           " ", "already", " ", "collected", " ", "solutions", " ", "to"}], 
          " ", "-", "1"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"solutionsLeft", "=", 
         RowBox[{"solutionsLeft", "/.", 
          RowBox[{
           RowBox[{"y_", "/;", 
            RowBox[{"y", "\[Equal]", "0"}]}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "increment", " ", "number", " ", "of", " ", "dominations", " ", 
          "for", " ", "dominated", " ", "solutions", " ", "by", " ", 
          "current", " ", "front"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"solutionsLeft", "=", 
         RowBox[{"MapAt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "-", "1"}], "&"}], ",", "solutionsLeft", ",", 
           "domSolByCurrentFront"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "collect", " ", "solutions", " ", "with", " ", "0", " ", 
          "dominations"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"iCurrentFront", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"solutionsLeft", ",", "0"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"iNondominatedFronts", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"iNondominatedFronts", ",", 
           RowBox[{"iCurrentFront", "//", "Flatten"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"iNondominatedFronts", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41257308659375*^9, 3.41257315990625*^9}, {
   3.412573194578125*^9, 3.412573196453125*^9}, {3.412573234*^9, 
   3.412573244328125*^9}, {3.4125732845*^9, 3.412573307484375*^9}, {
   3.412573343828125*^9, 3.41257357296875*^9}, {3.412573618234375*^9, 
   3.412573922078125*^9}, {3.412573952375*^9, 3.41257395478125*^9}, {
   3.412574015703125*^9, 3.4125742996875*^9}, {3.412574332640625*^9, 
   3.41257442190625*^9}, {3.4125745195*^9, 3.412574521671875*^9}, {
   3.412574582484375*^9, 3.41257458284375*^9}, {3.412574641390625*^9, 
   3.412574701640625*^9}, {3.412574804078125*^9, 3.412574831390625*^9}, {
   3.412918569671875*^9, 3.412918585234375*^9}, {3.412935298625*^9, 
   3.41293530771875*^9}, {3.41293674225*^9, 3.41293675109375*^9}, {
   3.41294466715625*^9, 3.412944695765625*^9}, {3.412944857515625*^9, 
   3.412944923703125*^9}, {3.412944961453125*^9, 3.412944968859375*^9}, {
   3.412945041609375*^9, 3.412945114875*^9}, {3.412945230109375*^9, 
   3.412945260359375*^9}, {3.412945344390625*^9, 3.4129453448125*^9}, 
   3.412945448328125*^9, 3.4129501310625*^9, 3.412950341296875*^9, {
   3.41295387946875*^9, 3.41295388753125*^9}, {3.412965876890625*^9, 
   3.4129658799375*^9}, {3.415851106703125*^9, 3.41585113528125*^9}, {
   3.4158513401875*^9, 3.4158513474375*^9}, {3.4391083413125*^9, 
   3.439108403765625*^9}, {3.43910844053125*^9, 3.439108450328125*^9}},
 CellID->308682082],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcNondominatedSolutions", "[", "pop_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"iRelationTable", ",", "index"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"iRelationTable", "=", 
      RowBox[{"Outer", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dominates", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], ",", "True", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"dominates", "[", 
            RowBox[{"#2", ",", "#1"}], "]"}], ",", "False"}], 
          "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
        "pop", ",", "pop", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"index", "=", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{"#", ",", "False"}], "]"}], "&"}], ",", 
           "iRelationTable"}], "]"}], ",", "0"}], "]"}], "//", "Flatten"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"pop", "[", 
       RowBox[{"[", "index", "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412953648796875*^9, 3.412953654765625*^9}, {
   3.41295385021875*^9, 3.412953863125*^9}, {3.4129539285*^9, 
   3.412953932046875*^9}, {3.412953984546875*^9, 3.41295399425*^9}, {
   3.412954057671875*^9, 3.4129541205625*^9}, {3.41295439209375*^9, 
   3.412954407421875*^9}, {3.41295452721875*^9, 3.41295463221875*^9}, {
   3.412954731875*^9, 3.412954798703125*^9}, 3.412965580546875*^9, {
   3.41585135671875*^9, 3.41585135959375*^9}},
 CellID->314260914],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcNonDomFront", "[", "pop_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"partition", ",", "front", ",", "rest"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"partition", "=", 
      RowBox[{"fastNondominatedSort", "[", "pop", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"front", "=", 
      RowBox[{"pop", "[", 
       RowBox[{"[", 
        RowBox[{"partition", "//", "First"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rest", "=", 
      RowBox[{"pop", "[", 
       RowBox[{"[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"partition", "//", "Rest"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"front", ",", "rest"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.415776291296875*^9, 3.415776306625*^9}, {
  3.415776358671875*^9, 3.4157763894375*^9}, {3.41577648078125*^9, 
  3.41577662146875*^9}, {3.415776716015625*^9, 3.41577673346875*^9}},
 CellID->11645800],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"calcCrowdedDistance", "[", "fitnessFront_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nSolutions", ",", "nObjectives", ",", "distances", ",", "order", ",", 
       "diff"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "number", " ", "of", " ", "solutions", " ", "in", " ", "front", " ", 
       "and", " ", "number", " ", "of", " ", "objectives"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nSolutions", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "fitnessFront", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nObjectives", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "fitnessFront", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nSolutions", "\[Equal]", "1"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "Infinity", "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nSolutions", "\[Equal]", "2"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"Infinity", ",", "Infinity"}], "}"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"distances", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nSolutions", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "calculate", " ", "normalized", " ", "perimeter", " ", "of", " ", 
        "each", " ", "cuboid"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "nObjectives"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"order", "=", 
          RowBox[{"Ordering", "[", 
           RowBox[{"fitnessFront", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "k"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"distances", "[", 
           RowBox[{"[", 
            RowBox[{"First", "[", "order", "]"}], "]"}], "]"}], "=", 
          "Infinity"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"distances", "[", 
           RowBox[{"[", 
            RowBox[{"Last", "[", "order", "]"}], "]"}], "]"}], "=", 
          "Infinity"}], ";", "\[IndentingNewLine]", 
         RowBox[{"diff", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"fitnessFront", "[", 
              RowBox[{"[", 
               RowBox[{"Last", "[", "order", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "k", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{"fitnessFront", "[", 
              RowBox[{"[", 
               RowBox[{"First", "[", "order", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "2"}], ",", 
           RowBox[{"i", "<", "nSolutions"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "test", " ", "for", " ", "identical", " ", "solutions", " ", "in",
              " ", "the", " ", "same", " ", "front"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"diff", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"distances", "[", 
               RowBox[{"[", 
                RowBox[{"order", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fitnessFront", "[", 
                   RowBox[{"[", 
                    RowBox[{"order", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
                  
                  RowBox[{"[", "k", "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"fitnessFront", "[", 
                   RowBox[{"[", 
                    RowBox[{"order", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
                  
                  RowBox[{"[", "k", "]"}], "]"}]}], ")"}], "/", "diff"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"distances", "[", 
               RowBox[{"[", 
                RowBox[{"order", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "+=", 
              "Infinity"}]}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"distances", "//", "Flatten"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412592572828125*^9, 3.4125926024375*^9}, {
   3.412592662375*^9, 3.41259285521875*^9}, {3.4125928951875*^9, 
   3.412592915421875*^9}, {3.41259295715625*^9, 3.41259323690625*^9}, 
   3.412593277203125*^9, 3.412593760046875*^9, {3.41259399821875*^9, 
   3.412594089203125*^9}, {3.412594759796875*^9, 3.41259477440625*^9}, {
   3.412687761171875*^9, 3.412687763359375*^9}, {3.412688105234375*^9, 
   3.4126881071875*^9}, {3.4126902475625*^9, 3.412690251578125*^9}, {
   3.412862771125*^9, 3.4128627813125*^9}, {3.4128629495*^9, 
   3.4128629679375*^9}, {3.412863014140625*^9, 3.41286304215625*^9}, {
   3.41291576215625*^9, 3.412915762890625*^9}, {3.41295123203125*^9, 
   3.412951271390625*^9}, {3.412952837265625*^9, 3.412952839796875*^9}, {
   3.41296218765625*^9, 3.412962236453125*^9}, {3.412962267703125*^9, 
   3.412962292453125*^9}, {3.412966410078125*^9, 3.412966566765625*^9}, {
   3.412967725078125*^9, 3.4129677336875*^9}, {3.41296781028125*^9, 
   3.412967825421875*^9}, {3.41300383790625*^9, 3.413003838109375*^9}, {
   3.41300602728125*^9, 3.41300602953125*^9}, {3.413006086375*^9, 
   3.413006111109375*^9}, 3.4157759636875*^9, 3.415776025140625*^9, {
   3.43989415996875*^9, 3.43989416015625*^9}},
 CellID->289566058],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcRankAndCD", "[", "pop_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rank", ",", "distances", ",", "nFronts", ",", "nIndividuals", ",", 
      "distancesFront", ",", "fronts"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"calc", " ", "nondominating", " ", "fronts"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fronts", "=", 
      RowBox[{"fastNondominatedSort", "[", "pop", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nFronts", "=", 
      RowBox[{"Length", "[", "fronts", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nIndividuals", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"fronts", "//", "Flatten"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"calc", " ", "CD", " ", "for", " ", "each", " ", "front"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"distancesFront", "=", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"calcCrowdedDistance", "[", 
          RowBox[{
           RowBox[{"pop", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], ",", "fronts"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "assign", " ", "nondomination", " ", "rank", " ", "and", " ", "crowded",
        " ", "distance", " ", "to", " ", "each", " ", "individual", " ", 
       "position"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"rank", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "nIndividuals", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distances", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "nIndividuals", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", "nFronts"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rank", "[", 
          RowBox[{"[", 
           RowBox[{"fronts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", "i"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"distances", "[", 
          RowBox[{"[", 
           RowBox[{"fronts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"distancesFront", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rank", ",", 
         RowBox[{"distances", "//", "Flatten"}]}], "}"}], "//", "Transpose"}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412700356546875*^9, 3.41270045075*^9}, {
   3.412700679078125*^9, 3.412700755875*^9}, {3.412700786140625*^9, 
   3.412700786859375*^9}, {3.41270082865625*^9, 3.41270083328125*^9}, {
   3.412700916234375*^9, 3.41270095175*^9}, 3.4127010015*^9, {
   3.412775354359375*^9, 3.412775359828125*^9}, {3.4127753948125*^9, 
   3.4127753950625*^9}, {3.412864023515625*^9, 3.412864025984375*^9}, {
   3.412951468421875*^9, 3.412951468703125*^9}, {3.41295151775*^9, 
   3.412951557625*^9}, {3.4129516111875*^9, 3.41295166759375*^9}, {
   3.412951712*^9, 3.4129517570625*^9}, {3.412951810375*^9, 
   3.412952019328125*^9}, {3.412952053671875*^9, 3.41295205434375*^9}, {
   3.412952111203125*^9, 3.41295212325*^9}, {3.41295286646875*^9, 
   3.41295287121875*^9}, {3.412953412140625*^9, 3.412953415078125*^9}, {
   3.412953580125*^9, 3.412953580578125*^9}, {3.415867699921875*^9, 
   3.415867700828125*^9}, {3.415868527734375*^9, 3.41586852796875*^9}, {
   3.415871229234375*^9, 3.4158712295625*^9}, {3.41587933303125*^9, 
   3.41587933334375*^9}, {3.4158794188125*^9, 3.415879419203125*^9}, {
   3.415938897640625*^9, 3.415938898171875*^9}, {3.4159416615625*^9, 
   3.41594166790625*^9}, {3.415941785890625*^9, 3.415941800484375*^9}},
 CellID->1031917645],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cdOperator", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rank1_", ",", "cd1_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"rank2_", ",", "cd2_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"rank1", "<", "rank2"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rank1", "\[Equal]", "rank2"}], " ", "&&", 
        "\[IndentingNewLine]", 
        RowBox[{"cd1", ">", "cd2"}]}], " ", ")"}]}], ",", 
     "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", "False"}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412684746875*^9, 3.41268475203125*^9}, {
  3.412684806421875*^9, 3.41268480671875*^9}, {3.4126863960625*^9, 
  3.412686432609375*^9}, {3.41269124071875*^9, 3.412691241890625*^9}, {
  3.41269132771875*^9, 3.412691379859375*^9}, {3.41269143228125*^9, 
  3.41269159428125*^9}, {3.41279663959375*^9, 3.4127967675*^9}, {
  3.412797938296875*^9, 3.41279793878125*^9}},
 CellID->212471774],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matingSelection", "[", 
    RowBox[{"pop_", ",", "nOffspring_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fronts", ",", "rankAndCD", ",", "indexPair", ",", "index"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "calc", " ", "rank", " ", "and", " ", "crowded", " ", "distances"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rankAndCD", "=", 
       RowBox[{"calcRankAndCD", "[", "pop", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "pick", " ", "pairs", " ", "of", " ", "individuals", " ", "and", " ", 
        "compare", " ", "them", " ", "by", " ", "crowded", " ", "distance", 
        " ", "operator"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"indexPair", "=", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               RowBox[{"Length", "[", "pop", "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"cdOperator", "[", 
             RowBox[{
              RowBox[{"rankAndCD", "[", 
               RowBox[{"[", 
                RowBox[{"indexPair", "//", "First"}], "]"}], "]"}], ",", 
              RowBox[{"rankAndCD", "[", 
               RowBox[{"[", 
                RowBox[{"indexPair", "//", "Last"}], "]"}], "]"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"indexPair", "//", "First"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"indexPair", "//", "Last"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "nOffspring", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"pop", "[", 
        RowBox[{"[", "index", "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412691975703125*^9, 3.4126919828125*^9}, {
   3.412693402203125*^9, 3.412693487515625*^9}, 3.4126935278125*^9, {
   3.412693999828125*^9, 3.412694055703125*^9}, {3.41269612103125*^9, 
   3.412696122640625*^9}, {3.412696339203125*^9, 3.41269634121875*^9}, {
   3.412697379421875*^9, 3.412697464984375*^9}, {3.41269757403125*^9, 
   3.41269778390625*^9}, {3.412697855328125*^9, 3.412697886328125*^9}, {
   3.41269917221875*^9, 3.41269930465625*^9}, {3.4126993835625*^9, 
   3.4126994641875*^9}, {3.41269951178125*^9, 3.41269951840625*^9}, {
   3.412699657734375*^9, 3.412699666171875*^9}, {3.412699704234375*^9, 
   3.412699705*^9}, 3.4126997858125*^9, {3.412701138140625*^9, 
   3.412701278109375*^9}, {3.4127530878125*^9, 3.41275310275*^9}, {
   3.412753163828125*^9, 3.41275317815625*^9}, {3.41285023303125*^9, 
   3.41285035434375*^9}, {3.412850476625*^9, 3.4128504954375*^9}, {
   3.412850614734375*^9, 3.412850620359375*^9}, {3.41285068078125*^9, 
   3.41285069303125*^9}, {3.412850765203125*^9, 3.412850806125*^9}, {
   3.41285087553125*^9, 3.412851063625*^9}, {3.412851155046875*^9, 
   3.41285118471875*^9}, {3.41285124965625*^9, 3.4128512510625*^9}, {
   3.41285143475*^9, 3.412851462671875*^9}, {3.41285149834375*^9, 
   3.412851548953125*^9}, {3.412859050421875*^9, 3.41285905128125*^9}, {
   3.4129522125*^9, 3.412952241234375*^9}, {3.412952277359375*^9, 
   3.412952282515625*^9}},
 CellID->117162475],

Cell[BoxData[
 RowBox[{
  RowBox[{"survivorSelection", "[", 
   RowBox[{"pop_", ",", "nOffspring_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fronts", ",", "rankAndCD", ",", "crowdedDistance", ",", "frontSize", 
      ",", "tmpPop"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "calc", " ", "rank", " ", "and", " ", "crwoded", " ", "distances"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rankAndCD", "=", 
      RowBox[{"calcRankAndCD", "[", "pop", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"extract", " ", "pareto", " ", "front"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"frontSize", "=", 
      RowBox[{"Count", "[", 
       RowBox[{"rankAndCD", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "sort", " ", "population", " ", "by", " ", "CD", " ", "operator", " ", 
       "and", " ", "pick", " ", "#", "noffspring", " ", "individuals"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"tmpPop", "=", 
      RowBox[{"pop", "[", 
       RowBox[{"[", 
        RowBox[{"Ordering", "[", 
         RowBox[{"rankAndCD", ",", "nOffspring", ",", 
          RowBox[{
           RowBox[{"cdOperator", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}]}], "]"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "tmpPop"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412851571125*^9, 3.41285158315625*^9}, {
   3.412851615671875*^9, 3.412851695703125*^9}, 3.412857646171875*^9, {
   3.412861814328125*^9, 3.4128618228125*^9}, {3.412952320421875*^9, 
   3.41295236059375*^9}, {3.415779977421875*^9, 3.415780077015625*^9}, {
   3.415780676*^9, 3.4157807203125*^9}, {3.415780908171875*^9, 
   3.4157809114375*^9}, {3.415780974125*^9, 3.415780983515625*^9}, {
   3.4157811255625*^9, 3.41578115790625*^9}, {3.415781479765625*^9, 
   3.415781486625*^9}, {3.415781920453125*^9, 3.41578192140625*^9}, {
   3.415782036359375*^9, 3.415782084703125*^9}, {3.415782273140625*^9, 
   3.415782286671875*^9}, {3.415943514*^9, 3.415943516328125*^9}, {
   3.41594427803125*^9, 3.415944280390625*^9}, {3.415945060796875*^9, 
   3.415945065546875*^9}},
 CellID->357352201],

Cell[BoxData[
 RowBox[{
  RowBox[{"survivorSelection", "[", 
   RowBox[{"pop_", ",", "nOffspring_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fronts", ",", "rankAndCD", ",", "crowdedDistance", ",", "frontSize", 
      ",", "tmpPop"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "calc", " ", "rank", " ", "and", " ", "crwoded", " ", "distances"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rankAndCD", "=", 
      RowBox[{"calcRankAndCD", "[", "pop", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"extract", " ", "pareto", " ", "front"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"frontSize", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"rankAndCD", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "_"}], "}"}]}], "]"}], ",", "nOffspring"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "sort", " ", "population", " ", "by", " ", "CD", " ", "operator", " ", 
       "and", " ", "pick", " ", "#", "noffspring", " ", "individuals"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"tmpPop", "=", 
      RowBox[{"pop", "[", 
       RowBox[{"[", 
        RowBox[{"Ordering", "[", 
         RowBox[{"rankAndCD", ",", "nOffspring", ",", 
          RowBox[{
           RowBox[{"cdOperator", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}], "&"}]}], "]"}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"tmpPop", ",", "frontSize"}], "]"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{"tmpPop", ",", "frontSize"}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412851571125*^9, 3.41285158315625*^9}, {
   3.412851615671875*^9, 3.412851695703125*^9}, 3.412857646171875*^9, {
   3.412861814328125*^9, 3.4128618228125*^9}, {3.412952320421875*^9, 
   3.41295236059375*^9}, {3.415779977421875*^9, 3.415780077015625*^9}, {
   3.415780676*^9, 3.4157807203125*^9}, {3.415780908171875*^9, 
   3.4157809114375*^9}, {3.415780974125*^9, 3.415780983515625*^9}, {
   3.4157811255625*^9, 3.41578115790625*^9}, {3.415781479765625*^9, 
   3.415781486625*^9}, {3.415781920453125*^9, 3.41578192140625*^9}, {
   3.415782036359375*^9, 3.415782084703125*^9}, {3.415782273140625*^9, 
   3.415782286671875*^9}, {3.415943514*^9, 3.415943516328125*^9}, {
   3.41594427803125*^9, 3.415944280390625*^9}, {3.415945060796875*^9, 
   3.415945065546875*^9}, {3.41601586721875*^9, 3.41601592921875*^9}, {
   3.41601623278125*^9, 3.4160162375*^9}, 3.416016276734375*^9},
 CellID->14582004],

Cell[BoxData[
 RowBox[{
  RowBox[{"decodeBinaryChromosome", "[", 
   RowBox[{"binaryChrom_List", ",", 
    RowBox[{"{", 
     RowBox[{"rangeMin_", ",", "rangeMax_"}], "}"}], ",", "useGray_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"binaryNumber", ",", "stepSize"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stepSize", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rangeMax", "-", "rangeMin"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "^", 
          RowBox[{"Length", "[", "binaryChrom", "]"}]}], "-", "1"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useGray", ",", "\[IndentingNewLine]", 
       RowBox[{"binaryNumber", "=", 
        RowBox[{"FoldList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"#1", "+", "#2"}], ",", "2"}], "]"}], "&"}], ",", 
          RowBox[{"binaryChrom", "//", "First"}], ",", 
          RowBox[{"binaryChrom", "//", "Rest"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"binaryNumber", "=", "binaryChrom"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rangeMin", "+", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{"binaryNumber", ",", "2"}], "]"}], "*", "stepSize"}]}], 
       ")"}], "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41279921365625*^9, 3.41279927421875*^9}, {
   3.412832355415608*^9, 3.4128324065249825`*^9}, {3.4128334981187325`*^9, 
   3.4128335857124825`*^9}, {3.4128336301187325`*^9, 3.412833665009358*^9}, {
   3.412833702040608*^9, 3.412833702384358*^9}, 3.412833739134358*^9, {
   3.412833790446858*^9, 3.412833819040608*^9}, {3.412835343571858*^9, 
   3.4128354139937325`*^9}, {3.412844871203125*^9, 3.412845048265625*^9}, {
   3.412845111671875*^9, 3.41284517840625*^9}, {3.412845223765625*^9, 
   3.412845234125*^9}, {3.4129523859375*^9, 3.412952409484375*^9}, {
   3.4395446188125*^9, 3.439544624203125*^9}},
 CellID->405448602],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mutateChromosome", "[", 
    RowBox[{"chrom_", ",", "mutationRate_"}], "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "<=", "mutationRate"}], ",", 
        RowBox[{"1", "-", "#"}], ",", "#"}], "]"}], "&"}], ",", "chrom"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41279831053125*^9, 3.412798312015625*^9}, {
   3.41284590803125*^9, 3.412845957828125*^9}, {3.412846134578125*^9, 
   3.412846142640625*^9}, {3.412846516078125*^9, 3.412846555046875*^9}, 
   3.4128466168125*^9, {3.41284712096875*^9, 3.4128471349375*^9}, {
   3.41580807303125*^9, 3.41580807471875*^9}, 3.415808843921875*^9},
 CellID->200309014],

Cell[BoxData[
 RowBox[{
  RowBox[{"mutatePopulation", "[", 
   RowBox[{"binaryPop_", ",", "mutationRate_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mutateChromosome", "[", 
        RowBox[{
         RowBox[{"#", "//", "First"}], ",", "mutationRate"}], "]"}], ",", 
       "Null"}], "}"}], "&"}], ",", "binaryPop"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.41284656840625*^9, {3.41284666015625*^9, 3.412846681890625*^9}, {
   3.412846805671875*^9, 3.412846872921875*^9}, {3.4128470725*^9, 
   3.412847072875*^9}, {3.41285188528125*^9, 3.412851887078125*^9}, {
   3.41580810046875*^9, 3.415808105796875*^9}},
 CellID->121157071],

Cell[BoxData[
 RowBox[{
  RowBox[{"recombinateChromosomes", "[", 
   RowBox[{"chrom1_", ",", "chrom2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "cut", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cut", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "chrom1", "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"chrom1", ",", "cut"}], "]"}], ",", 
         RowBox[{"Drop", "[", 
          RowBox[{"chrom2", ",", "cut"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"chrom2", ",", "cut"}], "]"}], ",", 
         RowBox[{"Drop", "[", 
          RowBox[{"chrom1", ",", "cut"}], "]"}]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4128468905*^9, 3.412846907671875*^9}, {
  3.4128470015625*^9, 3.41284701371875*^9}, {3.41284717396875*^9, 
  3.41284720396875*^9}},
 CellID->776876519],

Cell[BoxData[
 RowBox[{
  RowBox[{"recombinatePopulation", "[", 
   RowBox[{"binaryPop_", ",", "recombinationRate_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pairedPop", ",", "recombinatedChroms"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pairedPop", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"RandomSample", "[", "binaryPop", "]"}], ",", "2", ",", "2", 
        ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"binaryPop", "//", "Last"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"recombinatedChroms", "=", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<=", "recombinationRate"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"recombinateChromosomes", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "//", "First"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "First"}]}], "]"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "//", "First"}], ",", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "First"}]}], "}"}]}], 
           "]"}], "&"}], ",", "\[IndentingNewLine]", "pairedPop"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "Null"}], "}"}], "&"}], ",", 
       "recombinatedChroms"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.412847389640625*^9, {3.4128478558125*^9, 3.412847859171875*^9}, {
   3.41284812415625*^9, 3.4128481473125*^9}, {3.412848183390625*^9, 
   3.412848183953125*^9}, {3.4128482355625*^9, 3.4128482595*^9}, {
   3.412848302375*^9, 3.412848313359375*^9}, {3.41284835378125*^9, 
   3.412848389640625*^9}, {3.412848449625*^9, 3.41284846190625*^9}, {
   3.41284874365625*^9, 3.41284894428125*^9}, {3.41284897759375*^9, 
   3.4128489795*^9}, {3.412849092484375*^9, 3.4128490945625*^9}, {
   3.41284913315625*^9, 3.412849142578125*^9}, {3.412849411125*^9, 
   3.412849447296875*^9}, 3.412849610296875*^9, {3.412851892109375*^9, 
   3.412851893921875*^9}, {3.4128520048125*^9, 3.41285200725*^9}, {
   3.41285216534375*^9, 3.4128522293125*^9}, {3.4128522779375*^9, 
   3.412852292109375*^9}, {3.412852418515625*^9, 3.412852450671875*^9}, {
   3.412852653203125*^9, 3.41285266025*^9}, {3.4128528039375*^9, 
   3.412852929296875*^9}, {3.415786418125*^9, 3.415786421109375*^9}, {
   3.415808130390625*^9, 3.415808131453125*^9}},
 CellID->122963231],

Cell[BoxData[
 RowBox[{
  RowBox[{"assignFitness", "[", 
   RowBox[{"pop_", ",", "GPMap_", ",", 
    RowBox[{"{", 
     RowBox[{"f1_", ",", "f2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f1", "[", 
          RowBox[{"GPMap", "[", "#", "]"}], "]"}], ",", 
         RowBox[{"f2", "[", 
          RowBox[{"GPMap", "[", "#", "]"}], "]"}]}], "}"}]}], "}"}], "&"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"pop", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4158542601875*^9, 3.4158542680625*^9}, {
   3.4158544225625*^9, 3.415854433859375*^9}, {3.415854469203125*^9, 
   3.415854509953125*^9}, {3.415854586171875*^9, 3.4158546259375*^9}, {
   3.415855080328125*^9, 3.415855083484375*^9}, {3.415855131546875*^9, 
   3.415855151125*^9}, {3.415855374265625*^9, 3.41585538584375*^9}, {
   3.415855440625*^9, 3.41585544171875*^9}, {3.415855776609375*^9, 
   3.415855776890625*^9}, {3.415855946125*^9, 3.415855983953125*^9}, {
   3.415856082390625*^9, 3.41585610165625*^9}, {3.415856280421875*^9, 
   3.4158564131875*^9}, {3.415856474375*^9, 3.4158565473125*^9}, {
   3.415856648015625*^9, 3.4158566501875*^9}, {3.415857307359375*^9, 
   3.415857347703125*^9}, {3.4158573923125*^9, 3.41585748478125*^9}, {
   3.415857569140625*^9, 3.41585760434375*^9}, {3.415857661234375*^9, 
   3.415857674203125*^9}, {3.415857712625*^9, 3.415857713953125*^9}, {
   3.41585777140625*^9, 3.415857978140625*^9}, {3.4158642833125*^9, 
   3.415864288015625*^9}, 3.41586547921875*^9, {3.415869842890625*^9, 
   3.41586985375*^9}, {3.41593884209375*^9, 3.415938847515625*^9}, {
   3.41593902003125*^9, 3.415939031578125*^9}, {3.41593950140625*^9, 
   3.41593950284375*^9}, {3.41593967128125*^9, 3.415939673734375*^9}, {
   3.415940607953125*^9, 3.415940610703125*^9}, {3.4159438674375*^9, 
   3.415943870890625*^9}, {3.41595049721875*^9, 3.41595050509375*^9}, {
   3.41595053825*^9, 3.415950584796875*^9}, {3.41595077284375*^9, 
   3.415950774703125*^9}, {3.4159522083125*^9, 3.415952229703125*^9}, {
   3.41595236103125*^9, 3.4159523646875*^9}, {3.41595723446875*^9, 
   3.415957246578125*^9}, {3.41595958171875*^9, 3.415959592625*^9}, {
   3.41595970534375*^9, 3.41595970753125*^9}, {3.416018176*^9, 
   3.416018185875*^9}, {3.43954458778125*^9, 3.439544597953125*^9}, 
   3.439894180953125*^9},
 CellID->330418372],

Cell[BoxData[
 RowBox[{
  RowBox[{"initPopulationFitness", "[", 
   RowBox[{"popSize_", ",", "indLength_", ",", "GPMap_", ",", 
    RowBox[{"{", 
     RowBox[{"f1_", ",", "f2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "pop", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pop", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "indLength"}], "]"}], ",", 
          "Null"}], "}"}], ",", 
        RowBox[{"{", "popSize", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"assignFitness", "[", 
      RowBox[{"pop", ",", "GPMap", ",", 
       RowBox[{"{", 
        RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41602457890625*^9, 3.41602465075*^9}, {
  3.416024710234375*^9, 3.41602471515625*^9}, {3.439544582359375*^9, 
  3.439544583609375*^9}, {3.4395446413125*^9, 3.439544642375*^9}},
 CellID->244471463],

Cell[BoxData[
 RowBox[{
  RowBox[{"evolvePop", "[", 
   RowBox[{
   "pop_", ",", "popSize_", ",", "recombinationProb_", ",", "mutationProb_", 
    ",", "GPMap_", ",", 
    RowBox[{"{", 
     RowBox[{"f1_", ",", "f2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"offspring", ",", "combinedPop", ",", "front", ",", "rest"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"offspring", "=", 
      RowBox[{"matingSelection", "[", 
       RowBox[{"pop", ",", "popSize"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"offspring", "=", 
      RowBox[{"recombinatePopulation", "[", 
       RowBox[{"offspring", ",", "recombinationProb"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"offspring", "=", 
      RowBox[{"mutatePopulation", "[", 
       RowBox[{"offspring", ",", "mutationProb"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"offspring", "=", 
      RowBox[{"assignFitness", "[", 
       RowBox[{"offspring", ",", "GPMap", ",", 
        RowBox[{"{", 
         RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"combinedPop", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"pop", ",", "offspring"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"survivorSelection", "[", 
      RowBox[{"combinedPop", ",", "popSize"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41595653975*^9, 3.41595659384375*^9}, {
   3.415956712515625*^9, 3.415956742390625*^9}, {3.41595733628125*^9, 
   3.41595733809375*^9}, {3.4159598015*^9, 3.415959818*^9}, {
   3.415987631953125*^9, 3.415987636890625*^9}, {3.4160181060625*^9, 
   3.41601816209375*^9}, {3.416018280390625*^9, 3.416018312890625*^9}, {
   3.416019063953125*^9, 3.4160190754375*^9}, {3.416022366140625*^9, 
   3.416022366484375*^9}, 3.416023035015625*^9, {3.416023334375*^9, 
   3.416023339109375*^9}, {3.416023461484375*^9, 3.4160234879375*^9}, {
   3.41602352834375*^9, 3.416023561859375*^9}, {3.416023603078125*^9, 
   3.41602363234375*^9}, {3.439544224390625*^9, 3.439544230734375*^9}},
 CellID->2632706],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"visualize", " ", "population"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.35696210375764*^9, {3.439894478421875*^9, 3.439894493484375*^9}},
 CellID->388018442],

Cell[BoxData[
 RowBox[{
  RowBox[{"visualizePop", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"front_", ",", "rest_"}], "}"}], ",", "zoom_", ",", 
    "generation_", ",", "visPareto_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data2D", ",", "data3D", ",", "sFront", ",", "visFront", ",", 
      "plotRange2D", ",", "plotRange3D"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"sFront", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"front", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visFront", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"sFront", "//", "First"}], "//", "First"}], ",", "100"}], 
          "}"}], ",", "sFront", ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{
            RowBox[{"sFront", "//", "Last"}], "//", "Last"}]}], "}"}]}], 
        "}"}], "//", 
       RowBox[{
        RowBox[{"FlattenAt", "[", 
         RowBox[{"#", ",", "2"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plotRange3D", "=", 
      RowBox[{"If", "[", 
       RowBox[{"zoom", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "0.25"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.25"}], ",", "0.25"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", 
            RowBox[{"-", "5"}]}], "}"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"plotRange2D", "=", 
      RowBox[{"If", "[", 
       RowBox[{"zoom", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "20.5"}], ",", 
            RowBox[{"-", "14"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "13"}], ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "20.5"}], ",", 
            RowBox[{"-", "8"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "13.5"}], ",", "15"}], "}"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"rest", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data2D", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rest", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"front", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data3D", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GPMap", "/@", 
            RowBox[{"front", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"GPMap", "/@", 
            RowBox[{"rest", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data2D", "=", 
         RowBox[{"front", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data3D", "=", 
         RowBox[{"GPMap", "/@", 
          RowBox[{"front", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"visPareto", ",", "\[IndentingNewLine]", 
            RowBox[{"Show", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ListPlot", "[", 
               RowBox[{"data2D", ",", 
                RowBox[{"PlotRange", "\[Rule]", "plotRange2D"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Green"}], "}"}]}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"AxesOrigin", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "20.5"}], ",", 
                   RowBox[{"-", "14"}]}], "}"}]}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Objective Space\>\"", ",", "\"\<Label\>\""}], 
                  "]"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<minimize \!\(\*SubscriptBox[\(f\), \(1\)]\)\>\"", ",", 
                   
                   RowBox[{
                   "\"\<minimize \!\(\*SubscriptBox[\(f\), \(2\)]\)\>\"", 
                    Cell[""]}]}], "}"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ListLinePlot", "[", 
               RowBox[{"visFront", ",", 
                RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
                RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "plotRange2D"}]}], "]"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"290", ",", "200"}], "}"}]}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"45", ",", "10"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"35", ",", "10"}], "}"}]}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"data2D", ",", 
              RowBox[{"PlotRange", "\[Rule]", "plotRange2D"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesOrigin", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "20.5"}], ",", 
                 RowBox[{"-", "14"}]}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Red", ",", "Green"}], "}"}]}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Objective Space\>\"", ",", "\"\<Label\>\""}], 
                "]"}]}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<minimize \!\(\*SubscriptBox[\(f\), \(1\)]\)\>\"", ",", 
                 RowBox[{
                 "\"\<minimize \!\(\*SubscriptBox[\(f\), \(2\)]\)\>\"", Cell[
                  ""]}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"290", ",", "200"}], "}"}]}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"45", ",", "10"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"35", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ListPointPlot3D", "[", 
           RowBox[{"data3D", ",", 
            RowBox[{"PlotRange", "\[Rule]", "plotRange3D"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Green", ",", "Red"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Decision Space\>\"", ",", "\"\<Label\>\""}], 
              "]"}]}], ",", 
            RowBox[{"BoxRatios", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{Cell[TextData[Cell[BoxData[
                FormBox[
                 SubscriptBox["x", "1"], TraditionalForm]]]]], ",", Cell[
               TextData[Cell[BoxData[
                FormBox[
                 SubscriptBox["x", "2"], TraditionalForm]]]]], ",", Cell[
               TextData[Cell[BoxData[
                FormBox[
                 SubscriptBox["x", "3"], TraditionalForm]]]]]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"290", ",", "200"}], "}"}]}], ",", 
            RowBox[{"ImagePadding", "\[Rule]", "25"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], "]"}], "//", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"\"\<Generation \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", "generation", "]"}]}], ",", 
            "\"\<Label\>\"", ",", "Bold"}], "]"}], "]"}], ",", "Top"}], "]"}],
        "&"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.415956605890625*^9, 3.415956623859375*^9}, {
   3.415956829296875*^9, 3.415956829703125*^9}, {3.415966220171875*^9, 
   3.415966225875*^9}, {3.415979877234375*^9, 3.415979899140625*^9}, {
   3.416025427578125*^9, 3.41602558890625*^9}, {3.41602566196875*^9, 
   3.416025665734375*^9}, {3.416025699015625*^9, 3.41602570315625*^9}, {
   3.41602718534375*^9, 3.4160273531875*^9}, {3.41602739684375*^9, 
   3.416027412734375*^9}, {3.41602745140625*^9, 3.41602753846875*^9}, {
   3.416028199375*^9, 3.41602820659375*^9}, 3.4160282716875*^9, {
   3.4160283175625*^9, 3.41602836278125*^9}, {3.416028469390625*^9, 
   3.416028572921875*^9}, {3.41602870896875*^9, 3.4160287469375*^9}, {
   3.416028858140625*^9, 3.41602886184375*^9}, {3.416029534765625*^9, 
   3.416029563265625*^9}, {3.416029832765625*^9, 3.416029839*^9}, {
   3.416029871640625*^9, 3.4160299564375*^9}, {3.4164196213125*^9, 
   3.41641962615625*^9}, {3.416419671625*^9, 3.416419678421875*^9}, {
   3.416419735796875*^9, 3.41641978615625*^9}, {3.416419838890625*^9, 
   3.416419842875*^9}, {3.41641987425*^9, 3.41641987609375*^9}, {
   3.43911253846875*^9, 3.4391125545*^9}, {3.439112605609375*^9, 
   3.43911286509375*^9}, {3.43911295028125*^9, 3.43911295340625*^9}, {
   3.4391131388125*^9, 3.43911313996875*^9}, {3.439113659765625*^9, 
   3.439113685421875*^9}, {3.439113756796875*^9, 3.439113761828125*^9}, {
   3.4391240695625*^9, 3.439124103328125*^9}, {3.439124135171875*^9, 
   3.43912414825*^9}, {3.439124540140625*^9, 3.43912464740625*^9}, {
   3.439124681515625*^9, 3.439124686890625*^9}, {3.439124775359375*^9, 
   3.439124856203125*^9}, {3.43912636503125*^9, 3.439126368140625*^9}, {
   3.439367108234375*^9, 3.439367120640625*^9}, {3.43936726240625*^9, 
   3.43936729965625*^9}, {3.439367350984375*^9, 3.4393673549375*^9}, {
   3.439367654078125*^9, 3.439367785421875*^9}, {3.43936787665625*^9, 
   3.43936793065625*^9}, {3.439367978546875*^9, 3.43936805228125*^9}, {
   3.439368262265625*^9, 3.4393682716875*^9}, {3.439379882265625*^9, 
   3.439379901328125*^9}, {3.4394459243125*^9, 3.43944593240625*^9}, {
   3.43944644271875*^9, 3.439446477125*^9}, {3.439446796625*^9, 
   3.439446819984375*^9}, {3.439446869296875*^9, 3.43944691340625*^9}, {
   3.439448339421875*^9, 3.43944833984375*^9}, {3.4394483793125*^9, 
   3.4394484375*^9}, {3.439449117359375*^9, 3.439449122375*^9}, {
   3.439449165359375*^9, 3.439449168015625*^9}, {3.439538884203125*^9, 
   3.4395389069375*^9}, {3.439538982265625*^9, 3.439538982640625*^9}, {
   3.4395390178125*^9, 3.43953902134375*^9}, {3.439539733953125*^9, 
   3.4395397626875*^9}, {3.439539805234375*^9, 3.439539894734375*^9}, {
   3.4395400721875*^9, 3.4395400943125*^9}, {3.439540203875*^9, 
   3.43954020440625*^9}, {3.439540292578125*^9, 3.43954029359375*^9}, {
   3.439541173328125*^9, 3.439541202703125*^9}, {3.43954127259375*^9, 
   3.439541274296875*^9}, {3.4395413998125*^9, 3.439541420421875*^9}, {
   3.439541466125*^9, 3.4395414900625*^9}, {3.439541803453125*^9, 
   3.439541838953125*^9}, {3.439541954875*^9, 3.439541994203125*^9}, {
   3.43954202578125*^9, 3.439542046234375*^9}, {3.439542171125*^9, 
   3.43954221390625*^9}, {3.439542269640625*^9, 3.439542349203125*^9}, 
   3.439542394828125*^9, {3.4395424480625*^9, 3.439542448734375*^9}, {
   3.4395425091875*^9, 3.43954251009375*^9}, {3.439542549796875*^9, 
   3.439542563484375*^9}, {3.439544244578125*^9, 3.439544444296875*^9}, {
   3.439544667140625*^9, 3.43954467678125*^9}, {3.439544782*^9, 
   3.4395448298125*^9}, {3.43954488696875*^9, 3.439544919453125*^9}, {
   3.439544958734375*^9, 3.439544960421875*^9}, {3.43954500696875*^9, 
   3.43954504115625*^9}, 3.43954544834375*^9, {3.439819734984375*^9, 
   3.4398197476875*^9}, {3.43981995103125*^9, 3.4398199546875*^9}, {
   3.4398200424375*^9, 3.43982007140625*^9}, {3.43982085640625*^9, 
   3.439820905875*^9}, {3.43982094965625*^9, 3.439820956796875*^9}, {
   3.439821007375*^9, 3.439821024578125*^9}, {3.439821098625*^9, 
   3.439821108125*^9}, {3.4398211855*^9, 3.4398212210625*^9}, {
   3.439821309203125*^9, 3.43982133290625*^9}, {3.43982226215625*^9, 
   3.439822274375*^9}, {3.439822305328125*^9, 3.439822322140625*^9}, {
   3.43988604665625*^9, 3.439886060328125*^9}, {3.439886706515625*^9, 
   3.4398868284375*^9}, {3.439891356765625*^9, 3.43989136540625*^9}, {
   3.43989141275*^9, 3.439891440640625*^9}, {3.4401877743949137`*^9, 
   3.440187801582632*^9}, {3.4401878531417875`*^9, 3.4401878999334664`*^9}, {
   3.4402731848764973`*^9, 3.440273268135823*^9}},
 CellID->3707430],

Cell[BoxData[
 RowBox[{
  RowBox[{"individualSize", "=", "60"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412864464484375*^9, 3.412864472015625*^9}, {
   3.412866798921875*^9, 3.412866799109375*^9}, {3.412870583921875*^9, 
   3.41287058528125*^9}, 3.412935821046875*^9, {3.41585415884375*^9, 
   3.41585415903125*^9}},
 CellID->106373727],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GPMap", "[", "x_List", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"decodeBinaryChromosome", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "True"}], "]"}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{"x", ",", "20", ",", "20"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41287074740625*^9, 3.412870762578125*^9}, {
   3.4128707958125*^9, 3.412870801921875*^9}, {3.41287093025*^9, 
   3.412870993109375*^9}, {3.412871075859375*^9, 3.412871079578125*^9}, {
   3.41293579621875*^9, 3.412935798484375*^9}, 3.43954473034375*^9, {
   3.43989423253125*^9, 3.43989425271875*^9}, {3.43991056515625*^9, 
   3.439910569125*^9}},
 CellID->4230129],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "10"}], " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "0.2"}], " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "^", "2"}]}], "]"}]}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.412935561953125*^9, 3.412935650140625*^9}, {
   3.41294682478125*^9, 3.412946832046875*^9}, {3.41294688371875*^9, 
   3.412946883984375*^9}, {3.41294693165625*^9, 3.412946932015625*^9}, {
   3.412947353171875*^9, 3.412947353359375*^9}, {3.412947531625*^9, 
   3.412947558921875*^9}, {3.412947934421875*^9, 3.412947946109375*^9}, {
   3.415943057171875*^9, 3.415943058765625*^9}, {3.41606363159375*^9, 
   3.416063642296875*^9}, 3.416064024625*^9, 3.43954472246875*^9},
 CellID->611766213],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "0.8"}], "]"}], "+", 
       RowBox[{"5", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "3"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.41293556925*^9, 3.41293557221875*^9}, {
   3.412935655875*^9, 3.41293573203125*^9}, 3.412946836359375*^9, {
   3.412946886078125*^9, 3.41294688628125*^9}, {3.4129479304375*^9, 
   3.412947930734375*^9}, {3.415882044625*^9, 3.415882126125*^9}, {
   3.4158821640625*^9, 3.41588216590625*^9}, {3.4158822124375*^9, 
   3.4158822138125*^9}, 3.415887867453125*^9, 3.415894779421875*^9, {
   3.4159396031875*^9, 3.41593962090625*^9}, {3.41594285390625*^9, 
   3.4159428575*^9}, {3.41594303778125*^9, 3.415943076*^9}, {
   3.4159431079375*^9, 3.415943108328125*^9}, {3.415943702234375*^9, 
   3.415943708109375*^9}, {3.415946411421875*^9, 3.415946415125*^9}, {
   3.41594716459375*^9, 3.41594716875*^9}, {3.415959598453125*^9, 
   3.415959606515625*^9}, {3.439544464875*^9, 3.439544471828125*^9}, {
   3.439544715875*^9, 3.43954472765625*^9}},
 CellID->232722979],

Cell[BoxData[
 RowBox[{
  RowBox[{"dominates", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c1_", ",", "f1_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c2_", ",", "f2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"And", "@@", 
    RowBox[{"Thread", "[", 
     RowBox[{"LessEqual", "[", 
      RowBox[{"f1", ",", "f2"}], "]"}], "]"}]}], " ", "&&", " ", 
   RowBox[{"Or", "@@", 
    RowBox[{"Thread", "[", 
     RowBox[{"Less", "[", 
      RowBox[{"f1", ",", "f2"}], "]"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.415851441953125*^9, 3.415851596296875*^9}, {
   3.415851814171875*^9, 3.415851897390625*^9}, {3.415852021609375*^9, 
   3.41585203396875*^9}, {3.4158524875625*^9, 3.415852498796875*^9}, {
   3.4158527924375*^9, 3.4158528056875*^9}, {3.415852840765625*^9, 
   3.415852886390625*^9}, {3.415865318578125*^9, 3.415865400078125*^9}, {
   3.415865600078125*^9, 3.415865600421875*^9}, {3.4158656371875*^9, 
   3.415865730359375*^9}, {3.415868153421875*^9, 3.4158681700625*^9}, 
   3.415869706859375*^9, 3.415869809109375*^9, {3.41587049134375*^9, 
   3.415870536640625*^9}, {3.4158708083125*^9, 3.415870839828125*^9}, 
   3.415870877203125*^9, {3.416029388578125*^9, 3.416029402078125*^9}},
 CellID->243264474],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "visulization", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"n", "\[NotEqual]", "oldn"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"run", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"parents", "=", 
        RowBox[{"initPopulationFitness", "[", 
         RowBox[{"n", ",", "individualSize", ",", "GPMap", ",", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"front", ",", "rest"}], "}"}], "=", 
        RowBox[{"calcNonDomFront", "[", "parents", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"oldn", "=", "n"}], ";", "\[IndentingNewLine]", 
       RowBox[{"generation", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"zoom", "=", "False"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"run", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"generation", "++"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"front", ",", "rest"}], "}"}], "=", 
        RowBox[{"evolvePop", "[", 
         RowBox[{
         "parents", ",", "n", ",", "recombinationProb", ",", "mutationProb", 
          ",", "GPMap", ",", 
          RowBox[{"{", 
           RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parents", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"front", ",", "rest"}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "@", 
     RowBox[{"visualizePop", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"front", ",", "rest"}], "}"}], ",", "zoom", ",", "generation",
        ",", "visPareto"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "controls", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "50", ",", "\"\<population size\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "50", ",", "75", ",", "100"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"oldn", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mutationProb", ",", 
       RowBox[{
        RowBox[{"1", "/", "individualSize"}], "//", "N"}], ",", 
       "\"\<mutation probability\>\""}], "}"}], ",", "0", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "recombinationProb", ",", "0.9", ",", 
       "\"\<recombination probability\>\""}], "}"}], ",", "0", ",", "1"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"run", ",", "False", ",", "\"\<evolve\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "visPareto", ",", "True", ",", "\"\<show attainment surface\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zoom", ",", "True", ",", "\"\<magnify\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Button", "[", 
       RowBox[{"\"\<initialize population\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"run", "=", "False"}], ";", "\[IndentingNewLine]", 
         RowBox[{"generation", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"parents", "=", 
          RowBox[{"initPopulationFitness", "[", 
           RowBox[{"n", ",", "individualSize", ",", "GPMap", ",", 
            RowBox[{"{", 
             RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"parents", "=", 
          RowBox[{"assignFitness", "[", 
           RowBox[{"parents", ",", "GPMap", ",", 
            RowBox[{"{", 
             RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"front", ",", "rest"}], "}"}], "=", 
          RowBox[{"calcNonDomFront", "[", "parents", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"zoom", "=", "False"}]}]}], "\[IndentingNewLine]", "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<next generation\>\"", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"run", "=", "False"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"front", ",", "rest"}], "}"}], "=", 
          RowBox[{"evolvePop", "[", 
           RowBox[{
           "parents", ",", "n", ",", "recombinationProb", ",", "mutationProb",
             ",", "GPMap", ",", 
            RowBox[{"{", 
             RowBox[{"f1", ",", "f2"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"parents", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"front", ",", "rest"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"generation", "++"}]}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"parents", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"front", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rest", ",", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"generation", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "options", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "6", ",", "7"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, 3.43991059775*^9, {3.4401877165371284`*^9, 
   3.4401877487353477`*^9}, {3.4401879256040335`*^9, 
   3.4401879619916716`*^9}, {3.4402723291069293`*^9, 
   3.4402723610651245`*^9}, {3.4402723953715553`*^9, 3.440272395869605*^9}, {
   3.44027243992701*^9, 3.4402724537493925`*^9}, {3.4403304725884094`*^9, 
   3.440330474849635*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`front$$ = {{{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 
      1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
      1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
      0, 0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1, 0, 1, 1, 0, 
      0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 
      0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 
      1, 0, 0, 0, 0, 0}, {-14.320308913723036`, 7.761490297367633}}, {{0, 1, 
      1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 
      0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 
      1, 0, 0, 0, 0, 0, 1, 0, 0, 
      0}, {-12.347253950428872`, -3.319517762078253}}, {{0, 1, 0, 1, 1, 1, 1, 
      1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 
      1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 
      0, 1, 0, 1, 1}, {-10.164506888192498`, -5.239821964471311}}, {{1, 1, 1, 
      0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 
      0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 
      0, 1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
      5.939283025658328}}, {{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 
      0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 
      1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
      1}, {-14.869273524505353`, 
      11.42210015213447}}}, $CellContext`generation$$ = 
    0, $CellContext`mutationProb$$ = 0.016666666666666666`, $CellContext`n$$ =
     50, $CellContext`oldn$$ = 
    50, $CellContext`parents$$ = {{{1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 
      0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 
      1}, {-11.844442880369591`, 14.629418556920728`}}, {{1, 1, 1, 0, 0, 1, 1,
       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0,
       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 0, 1, 0, 0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1, 0,
       1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0,
       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,
       1, 0, 0, 1, 0, 0, 0, 0, 0}, {-14.320308913723036`, 
      7.761490297367633}}, {{1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 
      1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 
      1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
      0}, {-8.077395766745926, 2.7439712616838996`}}, {{1, 1, 1, 0, 0, 0, 0, 
      1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 
      1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 
      1, 0, 1, 0, 0}, {-8.00918365158874, 13.86777750917469}}, {{0, 1, 0, 0, 
      0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
      1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 
      1, 1, 1, 1, 1, 0, 1, 0}, {-9.850079393631987, 14.037556801656473`}}, {{
      0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 
      1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 
      1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0}, {-8.570516938080694, 
      3.041624417706119}}, {{0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
      1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 
      1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 
      0}, {-6.8649328958068345`, 0.6948448921359747}}, {{1, 0, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
      0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 
      0, 0, 0, 0, 0}, {-7.398467810638077, -0.19230203798664247`}}, {{0, 1, 1,
       1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,
       0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
       0, 0, 0, 0, 0, 1, 0, 0, 
      0}, {-12.347253950428872`, -3.319517762078253}}, {{1, 0, 1, 1, 0, 1, 1, 
      0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 
      0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 
      1, 0, 0, 1, 0}, {-6.839615379562979, 15.382832776882166`}}, {{1, 1, 1, 
      0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 
      0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 
      0, 1, 0, 1, 0, 1, 1, 0, 
      1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 1, 0, 1, 1, 1, 
      1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 
      0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 
      1, 0, 1, 0, 1, 1}, {-10.164506888192498`, -5.239821964471311}}, {{0, 0, 
      1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 
      0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
      0, 0, 1, 0, 0, 0, 1, 1, 1, 0}, {-6.848530173988715, 
      11.217689798080432`}}, {{1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1,
       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0,
       0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
      0}, {-8.520399735104306, 3.9196193226303753`}}, {{1, 0, 0, 1, 0, 1, 0, 
      0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 
      0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 
      1, 1, 1, 1, 1}, {-11.199099295690853`, 5.659636962835878}}, {{1, 0, 0, 
      0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 
      0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 
      1, 0, 1, 0, 0, 1, 1, 0, 0}, {-7.210110614365652, 
      3.7314009158532477`}}, {{0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,
       1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
       1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 
      1}, {-9.093075496073139, 10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 1, 
      1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
      0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 
      0, 0, 0, 1, 0}, {-9.897322084703333, 13.675662422151552`}}, {{1, 1, 0, 
      0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 
      1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 
      1, 0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
      3.3570010096509577`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1,
       1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1,
       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 
      0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0, 1, 1, 0, 
      0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
      1, 1, 1, 1}, {-9.692248360079454, 9.590216390885816}}, {{1, 0, 1, 1, 1, 
      0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
      0, 1, 0, 0, 1, 1, 0}, {-7.121865592488678, 3.7052355224569586`}}, {{0, 
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 
      0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 
      0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 
      0}, {-8.058621070248511, -0.7639791780714109}}, {{0, 0, 1, 1, 0, 1, 0, 
      0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 
      0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 
      1, 0, 1, 1, 0}, {-8.361340080196662, 2.5257799729932753`}}, {{0, 0, 1, 
      1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 
      0, 1, 1, 1, 0, 0, 1, 0, 0}, {-8.036771277118033, 7.007901768072225}}, {{
      1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 
      0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
      0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0}, {-8.620933723873167, 
      8.204068957669818}}, {{0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 
      0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 
      0}, {-11.421733566361905`, -0.8283659881754999}}, {{1, 1, 1, 0, 1, 1, 1,
       0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0,
       1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1,
       0, 0, 1, 1, 1}, {-13.136362175372229`, 5.939283025658328}}, {{1, 1, 0, 
      1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 
      1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 
      1, 0, 1, 0, 1, 0, 0, 0, 1}, {-9.981478050393505, 
      1.5657728902032488`}}, {{1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,
       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
      0}, {-9.054484890093537, 13.217636059932097`}}, {{0, 1, 0, 0, 1, 0, 0, 
      1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 
      0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 
      0, 0, 0, 0, 1}, {-9.458226840993166, 4.422852606221315}}, {{0, 0, 1, 0, 
      1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 
      1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 
      0, 0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 6.871137483368768}}, {{0, 
      1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 
      1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 
      0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1}, {-14.869273524505353`, 
      11.42210015213447}}, {{1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 
      0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 
      0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 
      0}, {-7.264869175091414, 1.059824600077754}}, {{1, 0, 0, 1, 0, 0, 1, 0, 
      0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 
      1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
      1, 0, 1, 1}, {-7.6304532716486015`, 9.074662835110777}}, {{0, 0, 1, 1, 
      0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 
      0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 
      0, 1, 1, 1, 1, 1, 0, 1}, {-7.719766745039039, 17.69959229239864}}, {{1, 
      0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 
      1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 
      1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
      1}, {-8.01831014622913, -0.20651727037040202`}}, {{0, 1, 0, 0, 1, 0, 1, 
      1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 
      0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 
      0, 1, 0, 1, 1}, {-10.184721291132076`, 12.143970534265408`}}, {{1, 1, 1,
       0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1,
       1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1,
       0, 1, 1, 1, 1, 1, 0, 0, 1}, {-8.262875429146302, 
      18.195928373984664`}}, {{1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,
       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
       0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 
      1}, {-10.10463872303636, 17.473160499489005`}}, {{0, 0, 1, 1, 0, 1, 1, 
      1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
      1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 
      0, 0, 0, 1, 0}, {-9.572579921715882, -1.737790753926629}}, {{0, 0, 1, 1,
       0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1,
       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1,
       1, 1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
      13.220075639921227`}}, {{1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0,
       0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,
       0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 
      0}, {-11.545570962463064`, 8.676864685934778}}, {{1, 0, 1, 1, 0, 1, 0, 
      1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 
      1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 
      0, 0, 1, 0, 0}, {-11.066799662867826`, 8.358172047247596}}, {{1, 1, 0, 
      1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
      1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
      0, 1, 1, 1, 1, 0, 0, 1, 0}, {-7.3282619045565305`, 
      12.617600730943419`}}, {{1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1,
       0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0,
       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 
      1}, {-7.574256711141503, 14.40929241888469}}, {{1, 1, 0, 1, 0, 1, 0, 0, 
      1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
      1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 
      0, 1, 0, 1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 0, 1, 0, 0,
       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1,
       0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,
       0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 15.207529801970406`}}, {{0, 
      1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 
      0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 
      0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {-11.96044344488174, 
      2.28958253696279}}}, $CellContext`recombinationProb$$ = 
    0.9, $CellContext`rest$$ = {{{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,
       1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
       0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 
      1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 0, 1, 0, 0, 1, 
      1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 
      0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 
      1, 1, 0, 0, 1, 0}, {-11.421733566361905`, -0.8283659881754999}}, {{0, 0,
       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1,
       0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,
       1, 0, 0, 0, 0, 0, 0, 0, 1, 
      0}, {-9.572579921715882, -1.737790753926629}}, {{0, 1, 1, 1, 1, 0, 0, 1,
       0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,
       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1,
       1, 1, 1, 1}, {-11.96044344488174, 2.28958253696279}}, {{1, 0, 0, 1, 0, 
      1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
      0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 
      0, 0, 1, 1, 1, 1, 1}, {-11.199099295690853`, 5.659636962835878}}, {{1, 
      1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 
      0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 
      0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
      3.3570010096509577`}}, {{0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1,
       0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1,
       0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 
      0}, {-8.058621070248511, -0.7639791780714109}}, {{1, 1, 0, 1, 1, 0, 1, 
      1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 
      1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 
      1, 0, 0, 0, 1}, {-9.981478050393505, 1.5657728902032488`}}, {{1, 1, 0, 
      1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
      0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 
      1, 1, 1, 0, 0, 0, 1, 0, 1}, {-11.859963497470575`, 
      7.59684688101994}}, {{1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,
       0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1,
       1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 
      1}, {-11.844442880369591`, 14.629418556920728`}}, {{0, 1, 0, 0, 0, 1, 1,
       1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1,
       0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1,
       0, 1, 1, 1, 0}, {-8.570516938080694, 3.041624417706119}}, {{0, 0, 1, 1,
       0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,
       0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1,
       1, 1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 2.5257799729932753`}}, {{
      0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 
      1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 
      1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1}, {-9.458226840993166, 
      4.422852606221315}}, {{1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 
      0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
      0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
      1}, {-8.01831014622913, -0.20651727037040202`}}, {{1, 0, 1, 1, 1, 0, 0, 
      1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 
      1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 
      1, 0, 1, 1, 0}, {-11.545570962463064`, 8.676864685934778}}, {{1, 0, 1, 
      1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
      0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 
      0, 0, 1, 0, 0, 0, 1, 0, 0}, {-11.066799662867826`, 
      8.358172047247596}}, {{1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 
      1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 
      1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
      0}, {-8.077395766745926, 2.7439712616838996`}}, {{1, 0, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
      0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 
      0, 0, 0, 0, 0}, {-7.398467810638077, -0.19230203798664247`}}, {{1, 0, 0,
       1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,
       1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
       1, 0, 0, 0, 1, 0, 0, 0, 0}, {-8.520399735104306, 
      3.9196193226303753`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1,
       1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1,
       1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 
      0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0, 1, 1, 0, 
      0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 
      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
      1, 1, 1, 1}, {-9.692248360079454, 9.590216390885816}}, {{0, 1, 0, 0, 1, 
      0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 
      1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 
      1, 1, 0, 1, 0, 1, 1}, {-10.184721291132076`, 12.143970534265408`}}, {{0,
       0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,
       1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0,
       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
      13.220075639921227`}}, {{0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,
       1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,
       1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 
      0}, {-6.8649328958068345`, 0.6948448921359747}}, {{0, 0, 1, 1, 1, 1, 0, 
      1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 
      1, 1, 1, 0, 1}, {-9.093075496073139, 10.702212904434294`}}, {{0, 0, 0, 
      1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 
      1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 
      0, 1, 1, 1, 0, 0, 0, 1, 0}, {-9.897322084703333, 
      13.675662422151552`}}, {{0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0,
       1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,
       0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 
      0}, {-8.036771277118033, 7.007901768072225}}, {{1, 1, 1, 1, 1, 0, 0, 1, 
      0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 
      0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
      1, 1, 1, 0}, {-8.620933723873167, 8.204068957669818}}, {{1, 0, 1, 1, 1, 
      1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 
      0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 
      1, 0, 0, 1, 1, 0, 0}, {-7.264869175091414, 1.059824600077754}}, {{1, 0, 
      0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
      0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 0, 1, 1, 0, 0, 0, 1, 0, 1}, {-10.10463872303636, 
      17.473160499489005`}}, {{0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,
       1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 
      0}, {-9.850079393631987, 14.037556801656473`}}, {{1, 0, 0, 0, 0, 0, 0, 
      1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 
      1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 
      0, 1, 1, 0, 0}, {-7.210110614365652, 3.7314009158532477`}}, {{1, 0, 1, 
      1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 
      1, 1, 0, 1, 0, 0, 1, 1, 0}, {-7.121865592488678, 
      3.7052355224569586`}}, {{1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,
       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
      0}, {-9.054484890093537, 13.217636059932097`}}, {{1, 0, 0, 1, 0, 0, 1, 
      0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 
      1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 
      1, 1, 0, 1, 1}, {-7.6304532716486015`, 9.074662835110777}}, {{1, 1, 1, 
      0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 
      1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 
      0, 1, 1, 0, 1, 0, 1, 0, 0}, {-8.00918365158874, 13.86777750917469}}, {{
      0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 
      1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
      0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 
      6.871137483368768}}, {{1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 
      1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
      0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 
      1}, {-8.262875429146302, 18.195928373984664`}}, {{1, 1, 0, 1, 0, 1, 1, 
      0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
      1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 
      1, 0, 0, 1, 0}, {-7.3282619045565305`, 12.617600730943419`}}, {{0, 0, 1,
       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0,
       0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,
       0, 1, 0, 0, 0, 1, 1, 1, 0}, {-6.848530173988715, 
      11.217689798080432`}}, {{0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0,
       1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0,
       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 
      1}, {-7.719766745039039, 17.69959229239864}}, {{1, 1, 0, 1, 0, 1, 1, 0, 
      0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 
      0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 
      1, 0, 0, 1}, {-7.574256711141503, 14.40929241888469}}, {{1, 0, 1, 0, 0, 
      1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 
      0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 
      0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 15.207529801970406`}}, {{1, 
      0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 
      0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
      1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0}, {-6.839615379562979, 
      15.382832776882166`}}}, $CellContext`run$$ = 
    False, $CellContext`visPareto$$ = True, $CellContext`zoom$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 50, "population size"}, {25, 50, 75, 100}}, {{
       Hold[$CellContext`oldn$$], 50}}, {{
       Hold[$CellContext`mutationProb$$], 0.016666666666666666`, 
       "mutation probability"}, 0, 1}, {{
       Hold[$CellContext`recombinationProb$$], 0.9, 
       "recombination probability"}, 0, 1}, {{
       Hold[$CellContext`run$$], False, "evolve"}, {True, False}}, {{
       Hold[$CellContext`visPareto$$], True, "show attainment surface"}, {
      True, False}}, {{
       Hold[$CellContext`zoom$$], False, "magnify"}, {True, False}}, {
      Hold[
       Row[{
         Button[
         "initialize population", $CellContext`run$$ = 
           False; $CellContext`generation$$ = 
           0; $CellContext`parents$$ = \
$CellContext`initPopulationFitness[$CellContext`n$$, \
$CellContext`individualSize, $CellContext`GPMap, {$CellContext`f1, \
$CellContext`f2}]; $CellContext`parents$$ = \
$CellContext`assignFitness[$CellContext`parents$$, $CellContext`GPMap, \
{$CellContext`f1, $CellContext`f2}]; {$CellContext`front$$, \
$CellContext`rest$$} = $CellContext`calcNonDomFront[$CellContext`parents$$]; \
$CellContext`zoom$$ = False], 
         Button[
         "next generation", $CellContext`run$$ = 
           False; {$CellContext`front$$, $CellContext`rest$$} = \
$CellContext`evolvePop[$CellContext`parents$$, $CellContext`n$$, \
$CellContext`recombinationProb$$, $CellContext`mutationProb$$, \
$CellContext`GPMap, {$CellContext`f1, $CellContext`f2}]; \
$CellContext`parents$$ = Join[$CellContext`front$$, $CellContext`rest$$]; 
          Increment[$CellContext`generation$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`parents$$], {{{1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1,
          0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,
          1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0,
          1}, {-11.844442880369591`, 14.629418556920728`}}, {{1, 1, 1, 0, 0, 
         1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
         1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 0, 1, 0, 
         0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1, 0, 1, 1, 0, 
         0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 
         0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 
         0, 0, 1, 0, 0, 0, 0, 0}, {-14.320308913723036`, 
         7.761490297367633}}, {{1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 
         1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 
         0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
         0}, {-8.077395766745926, 2.7439712616838996`}}, {{1, 1, 1, 0, 0, 0, 
         0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 
         1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 
         1, 1, 0, 1, 0, 1, 0, 0}, {-8.00918365158874, 13.86777750917469}}, {{
         0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
         0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
         1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0}, {-9.850079393631987, 
         14.037556801656473`}}, {{0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
          1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,
          0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 
         0}, {-8.570516938080694, 3.041624417706119}}, {{0, 0, 1, 1, 0, 1, 1, 
         0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 
         1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 
         0, 1, 1, 0, 1, 0, 0}, {-6.8649328958068345`, 0.6948448921359747}}, {{
         1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 
         0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 
         1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
         0}, {-7.398467810638077, -0.19230203798664247`}}, {{0, 1, 1, 1, 0, 1,
          1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1,
          1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,
          0, 0, 0, 0, 1, 0, 0, 
         0}, {-12.347253950428872`, -3.319517762078253}}, {{1, 0, 1, 1, 0, 1, 
         1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 
         0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 
         1, 1, 0, 1, 0, 0, 1, 0}, {-6.839615379562979, 
         15.382832776882166`}}, {{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,
          1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
          0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 
         1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 1, 0, 1, 1, 
         1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 
         0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 
         1, 1, 1, 1, 0, 1, 0, 1, 
         1}, {-10.164506888192498`, -5.239821964471311}}, {{0, 0, 1, 0, 1, 1, 
         1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 
         1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
         1, 0, 0, 0, 1, 1, 1, 0}, {-6.848530173988715, 
         11.217689798080432`}}, {{1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,
          1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
          1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
         0}, {-8.520399735104306, 3.9196193226303753`}}, {{1, 0, 0, 1, 0, 1, 
         0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
         0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 
         0, 0, 0, 1, 1, 1, 1, 1}, {-11.199099295690853`, 
         5.659636962835878}}, {{1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 
         1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 
         0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 
         0}, {-7.210110614365652, 3.7314009158532477`}}, {{0, 0, 1, 1, 1, 1, 
         0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 
         0, 1, 1, 1, 1, 1, 0, 1}, {-9.093075496073139, 
         10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,
          0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,
          0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 
         0}, {-9.897322084703333, 13.675662422151552`}}, {{1, 1, 0, 0, 0, 0, 
         1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 
         1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 
         0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
         3.3570010096509577`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,
          1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 
         0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0, 1, 1, 
         0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 
         1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
         1, 0, 0, 1, 1, 1, 1}, {-9.692248360079454, 9.590216390885816}}, {{1, 
         0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 
         1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0}, {-7.121865592488678, 
         3.7052355224569586`}}, {{0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,
          1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,
          1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 
         0}, {-8.058621070248511, -0.7639791780714109}}, {{0, 0, 1, 1, 0, 1, 
         0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 
         1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 
         1, 1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 
         2.5257799729932753`}}, {{0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,
          0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1,
          0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 
         0}, {-8.036771277118033, 7.007901768072225}}, {{1, 1, 1, 1, 1, 0, 0, 
         1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
         1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
         1, 1, 1, 1, 1, 1, 0}, {-8.620933723873167, 8.204068957669818}}, {{0, 
         0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 
         1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 
         0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 
         0}, {-11.421733566361905`, -0.8283659881754999}}, {{1, 1, 1, 0, 1, 1,
          1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1,
          0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0,
          1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
         5.939283025658328}}, {{1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
         0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 
         0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 
         1}, {-9.981478050393505, 1.5657728902032488`}}, {{1, 1, 1, 1, 0, 0, 
         0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 
         1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
         0, 0, 0, 1, 1, 0, 1, 0}, {-9.054484890093537, 
         13.217636059932097`}}, {{0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1,
          0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1,
          1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 
         1}, {-9.458226840993166, 4.422852606221315}}, {{0, 0, 1, 0, 1, 0, 1, 
         0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
         0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 
         0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 6.871137483368768}}, {{0, 
         1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 
         1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 
         0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1}, {-14.869273524505353`, 
         11.42210015213447}}, {{1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 
         1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 
         1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 
         0}, {-7.264869175091414, 1.059824600077754}}, {{1, 0, 0, 1, 0, 0, 1, 
         0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
         0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 
         0, 1, 1, 1, 0, 1, 1}, {-7.6304532716486015`, 9.074662835110777}}, {{
         0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 
         1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 
         0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1}, {-7.719766745039039, 
         17.69959229239864}}, {{1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 
         1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 
         0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
         1}, {-8.01831014622913, -0.20651727037040202`}}, {{0, 1, 0, 0, 1, 0, 
         1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 
         1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
         1, 1, 1, 0, 1, 0, 1, 1}, {-10.184721291132076`, 
         12.143970534265408`}}, {{1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0,
          1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
          0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 
         1}, {-8.262875429146302, 18.195928373984664`}}, {{1, 0, 0, 1, 1, 1, 
         1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 
         0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 
         1, 1, 0, 0, 0, 1, 0, 1}, {-10.10463872303636, 
         17.473160499489005`}}, {{0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,
          1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,
          0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
         0}, {-9.572579921715882, -1.737790753926629}}, {{0, 0, 1, 1, 0, 1, 0,
          0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1,
          1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1,
          1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
         13.220075639921227`}}, {{1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0,
          0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,
          1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 
         0}, {-11.545570962463064`, 8.676864685934778}}, {{1, 0, 1, 1, 0, 1, 
         0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 
         0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 
         0, 1, 0, 0, 0, 1, 0, 0}, {-11.066799662867826`, 
         8.358172047247596}}, {{1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 
         1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 
         0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 
         0}, {-7.3282619045565305`, 12.617600730943419`}}, {{1, 1, 0, 1, 0, 1,
          1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0,
          1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0,
          0, 1, 1, 0, 1, 0, 0, 1}, {-7.574256711141503, 
         14.40929241888469}}, {{1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 
         0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 
         0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
         1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 0, 1, 0, 0, 1, 1,
          1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,
          0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,
          0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 15.207529801970406`}}, {{
         0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 
         0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 
         1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {-11.96044344488174, 
         2.28958253696279}}}}}, {{
       Hold[$CellContext`front$$], {{{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 
         0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 
         1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 
         0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1, 0, 1, 1, 0, 
         0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 
         0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 
         0, 0, 1, 0, 0, 0, 0, 0}, {-14.320308913723036`, 
         7.761490297367633}}, {{0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 
         1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 
         0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 
         0}, {-12.347253950428872`, -3.319517762078253}}, {{0, 1, 0, 1, 1, 1, 
         1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 
         1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 
         1, 1, 1, 0, 1, 0, 1, 
         1}, {-10.164506888192498`, -5.239821964471311}}, {{1, 1, 1, 0, 1, 1, 
         1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
         0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 
         1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
         5.939283025658328}}, {{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
         1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 
         0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
         1}, {-14.869273524505353`, 11.42210015213447}}}}}, {{
       Hold[$CellContext`rest$$], {{{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1,
          0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,
          0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 
         1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 0, 1, 0, 0, 
         1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 
         0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 
         0, 1, 0, 1, 1, 0, 0, 1, 
         0}, {-11.421733566361905`, -0.8283659881754999}}, {{0, 0, 1, 1, 0, 1,
          1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,
          0, 0, 0, 0, 0, 0, 1, 
         0}, {-9.572579921715882, -1.737790753926629}}, {{0, 1, 1, 1, 1, 0, 0,
          1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1,
          0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1,
          0, 1, 1, 1, 1, 1, 1}, {-11.96044344488174, 2.28958253696279}}, {{1, 
         0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 
         0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 
         1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1}, {-11.199099295690853`, 
         5.659636962835878}}, {{1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 
         1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 
         0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 
         1}, {-10.318769537871724`, 3.3570010096509577`}}, {{0, 0, 1, 0, 0, 1,
          0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0,
          1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 1, 0, 
         0}, {-8.058621070248511, -0.7639791780714109}}, {{1, 1, 0, 1, 1, 0, 
         1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 
         0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 
         0, 1, 0, 1, 0, 0, 0, 1}, {-9.981478050393505, 
         1.5657728902032488`}}, {{1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1,
          0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1,
          0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
         1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 1, 0, 1, 0, 0, 1,
          1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,
          0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
          1, 0, 0, 0, 1, 0, 1}, {-11.844442880369591`, 
         14.629418556920728`}}, {{0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
          1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,
          0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 
         0}, {-8.570516938080694, 3.041624417706119}}, {{0, 0, 1, 1, 0, 1, 0, 
         0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 
         1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 
         1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 2.5257799729932753`}}, {{
         0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 
         1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 
         1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1}, {-9.458226840993166, 
         4.422852606221315}}, {{1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 
         1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 
         0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
         1}, {-8.01831014622913, -0.20651727037040202`}}, {{1, 0, 1, 1, 1, 0, 
         0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 
         1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 
         1, 0, 0, 1, 0, 1, 1, 0}, {-11.545570962463064`, 
         8.676864685934778}}, {{1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 
         0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 
         1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 
         0}, {-11.066799662867826`, 8.358172047247596}}, {{1, 0, 0, 0, 1, 0, 
         0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 
         1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 
         1, 0, 0, 1, 1, 1, 0, 0}, {-8.077395766745926, 
         2.7439712616838996`}}, {{1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
          0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1,
          0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
         0}, {-7.398467810638077, -0.19230203798664247`}}, {{1, 0, 0, 1, 0, 0,
          0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,
          0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,
          0, 0, 0, 1, 0, 0, 0, 0}, {-8.520399735104306, 
         3.9196193226303753`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,
          1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1,
          1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 
         0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0, 1, 1, 
         0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 
         1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 
         1, 0, 0, 1, 1, 1, 1}, {-9.692248360079454, 9.590216390885816}}, {{0, 
         1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 
         0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 
         1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1}, {-10.184721291132076`, 
         12.143970534265408`}}, {{0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0,
          0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,
          0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 
         1}, {-10.715760238933226`, 13.220075639921227`}}, {{0, 0, 1, 1, 0, 1,
          1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
          1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,
          1, 0, 1, 1, 0, 1, 0, 0}, {-6.8649328958068345`, 
         0.6948448921359747}}, {{0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
         1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 
         1}, {-9.093075496073139, 10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 
         1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 
         0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 
         1, 1, 1, 0, 0, 0, 1, 0}, {-9.897322084703333, 
         13.675662422151552`}}, {{0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,
          0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1,
          0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 
         0}, {-8.036771277118033, 7.007901768072225}}, {{1, 1, 1, 1, 1, 0, 0, 
         1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
         1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
         1, 1, 1, 1, 1, 1, 0}, {-8.620933723873167, 8.204068957669818}}, {{1, 
         0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 
         1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 
         0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0}, {-7.264869175091414, 
         1.059824600077754}}, {{1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 
         0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 
         0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 
         1}, {-10.10463872303636, 17.473160499489005`}}, {{0, 1, 0, 0, 0, 0, 
         0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 
         0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 
         1, 1, 1, 1, 1, 0, 1, 0}, {-9.850079393631987, 
         14.037556801656473`}}, {{1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1,
          1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1,
          0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 
         0}, {-7.210110614365652, 3.7314009158532477`}}, {{1, 0, 1, 1, 1, 0, 
         1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 
         1, 0, 1, 0, 0, 1, 1, 0}, {-7.121865592488678, 
         3.7052355224569586`}}, {{1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
          0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
          1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 
         0}, {-9.054484890093537, 13.217636059932097`}}, {{1, 0, 0, 1, 0, 0, 
         1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 
         0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
         1, 0, 1, 1, 1, 0, 1, 1}, {-7.6304532716486015`, 
         9.074662835110777}}, {{1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 
         0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 
         0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 
         0}, {-8.00918365158874, 13.86777750917469}}, {{0, 0, 1, 0, 1, 0, 1, 
         0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 
         0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 
         0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 6.871137483368768}}, {{1, 
         1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 
         1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 
         1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1}, {-8.262875429146302, 
         18.195928373984664`}}, {{1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,
          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,
          0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 
         0}, {-7.3282619045565305`, 12.617600730943419`}}, {{0, 0, 1, 0, 1, 1,
          1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,
          1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,
          1, 0, 0, 0, 1, 1, 1, 0}, {-6.848530173988715, 
         11.217689798080432`}}, {{0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1,
          0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1,
          0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 
         1}, {-7.719766745039039, 17.69959229239864}}, {{1, 1, 0, 1, 0, 1, 1, 
         0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 
         1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 
         1, 1, 0, 1, 0, 0, 1}, {-7.574256711141503, 14.40929241888469}}, {{1, 
         0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 
         0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 
         0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 
         15.207529801970406`}}, {{1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,
          1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,
          0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 
         0}, {-6.839615379562979, 15.382832776882166`}}}}}, {{
       Hold[$CellContext`generation$$], 0}}}, Typeset`size$$ = {
    588., {98., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`n$2603$$ = 
    0, $CellContext`mutationProb$2604$$ = 
    0, $CellContext`recombinationProb$2605$$ = 0, $CellContext`run$2606$$ = 
    False, $CellContext`visPareto$2607$$ = False, $CellContext`zoom$2608$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`front$$ = {{{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 
           1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 
           1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 0, 1, 0, 0}, {-9.931136341363063, -5.3590572909879945`}}, {{
           1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 
           1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 
           0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 
           0}, {-14.320308913723036`, 7.761490297367633}}, {{0, 1, 1, 1, 0, 1,
            1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 
           1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 
           1, 0, 0, 0, 0, 0, 1, 0, 0, 
           0}, {-12.347253950428872`, -3.319517762078253}}, {{0, 1, 0, 1, 1, 
           1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 
           1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 
           1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
           1}, {-10.164506888192498`, -5.239821964471311}}, {{1, 1, 1, 0, 1, 
           1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 
           0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
           0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
           5.939283025658328}}, {{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0,
            1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
           0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
           1}, {-14.869273524505353`, 
           11.42210015213447}}}, $CellContext`generation$$ = 
        0, $CellContext`mutationProb$$ = 
        0.016666666666666666`, $CellContext`n$$ = 50, $CellContext`oldn$$ = 
        50, $CellContext`parents$$ = {{{1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1,
            0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 
           1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 
           1, 0, 1}, {-11.844442880369591`, 14.629418556920728`}}, {{1, 1, 1, 
           0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 
           0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 
           0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1, 0, 1, 1, 
           0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 
           0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 
           1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0}, {-14.320308913723036`, 
           7.761490297367633}}, {{1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,
            1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 
           0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 
           0}, {-8.077395766745926, 2.7439712616838996`}}, {{1, 1, 1, 0, 0, 0,
            0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 
           0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
           1, 0, 1, 1, 0, 1, 0, 1, 0, 0}, {-8.00918365158874, 
           13.86777750917469}}, {{0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
            0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 
           1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 
           0}, {-9.850079393631987, 14.037556801656473`}}, {{0, 1, 0, 0, 0, 1,
            1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 
           0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 
           1, 0, 0, 1, 1, 0, 1, 1, 1, 0}, {-8.570516938080694, 
           3.041624417706119}}, {{0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,
            0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
           0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 
           0}, {-6.8649328958068345`, 0.6948448921359747}}, {{1, 0, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 
           1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 
           1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
           0}, {-7.398467810638077, -0.19230203798664247`}}, {{0, 1, 1, 1, 0, 
           1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 
           0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 
           0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 
           0}, {-12.347253950428872`, -3.319517762078253}}, {{1, 0, 1, 1, 0, 
           1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 
           0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
           1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0}, {-6.839615379562979, 
           15.382832776882166`}}, {{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 
           0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 
           0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 
           0, 1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 1, 0, 
           1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 
           1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 
           1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
           1}, {-10.164506888192498`, -5.239821964471311}}, {{0, 0, 1, 0, 1, 
           1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 
           0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 
           0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0}, {-6.848530173988715, 
           11.217689798080432`}}, {{1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 
           0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
           0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 
           0, 0}, {-8.520399735104306, 3.9196193226303753`}}, {{1, 0, 0, 1, 0,
            1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 
           0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 
           1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1}, {-11.199099295690853`, 
           5.659636962835878}}, {{1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1,
            1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 
           1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 
           0}, {-7.210110614365652, 3.7314009158532477`}}, {{0, 0, 1, 1, 1, 1,
            0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
           0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 
           1, 1, 0, 1, 1, 1, 1, 1, 0, 1}, {-9.093075496073139, 
           10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
           1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 
           1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 
           1, 0}, {-9.897322084703333, 13.675662422151552`}}, {{1, 1, 0, 0, 0,
            0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 
           1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 
           0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
           3.3570010096509577`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 
           1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 
           0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 
           1, 0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0, 
           1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 
           1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
           1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1}, {-9.692248360079454, 
           9.590216390885816}}, {{1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,
            0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
           1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 
           0}, {-7.121865592488678, 3.7052355224569586`}}, {{0, 0, 1, 0, 0, 1,
            0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 
           0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 
           0, 0, 0, 0, 1, 0, 0, 1, 0, 
           0}, {-8.058621070248511, -0.7639791780714109}}, {{0, 0, 1, 1, 0, 1,
            0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 
           0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 
           0, 1, 1, 1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 
           2.5257799729932753`}}, {{0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 
           0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 
           0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 
           0, 0}, {-8.036771277118033, 7.007901768072225}}, {{1, 1, 1, 1, 1, 
           0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 
           1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 
           0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0}, {-8.620933723873167, 
           8.204068957669818}}, {{0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0,
            1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
           1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 
           0}, {-11.421733566361905`, -0.8283659881754999}}, {{1, 1, 1, 0, 1, 
           1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 
           0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
           0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
           5.939283025658328}}, {{1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,
            0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
           0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 
           1}, {-9.981478050393505, 1.5657728902032488`}}, {{1, 1, 1, 1, 0, 0,
            0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 
           1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 
           1, 0, 0, 0, 0, 1, 1, 0, 1, 0}, {-9.054484890093537, 
           13.217636059932097`}}, {{0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 
           1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 
           1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 
           0, 1}, {-9.458226840993166, 4.422852606221315}}, {{0, 0, 1, 0, 1, 
           0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 
           0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 
           1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 
           6.871137483368768}}, {{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0,
            1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
           0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 
           1}, {-14.869273524505353`, 11.42210015213447}}, {{1, 0, 1, 1, 1, 1,
            1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 
           0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 
           0, 1, 1, 1, 0, 0, 1, 1, 0, 0}, {-7.264869175091414, 
           1.059824600077754}}, {{1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,
            1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 
           0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 
           1}, {-7.6304532716486015`, 9.074662835110777}}, {{0, 0, 1, 1, 0, 1,
            0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 
           0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 
           1, 0, 0, 1, 1, 1, 1, 1, 0, 1}, {-7.719766745039039, 
           17.69959229239864}}, {{1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0,
            1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 
           0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
           1}, {-8.01831014622913, -0.20651727037040202`}}, {{0, 1, 0, 0, 1, 
           0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 
           1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 
           0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1}, {-10.184721291132076`, 
           12.143970534265408`}}, {{1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
           0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 
           1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 
           0, 1}, {-8.262875429146302, 18.195928373984664`}}, {{1, 0, 0, 1, 1,
            1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 
           1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 
           1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}, {-10.10463872303636, 
           17.473160499489005`}}, {{0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 
           1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 
           1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 
           1, 0}, {-9.572579921715882, -1.737790753926629}}, {{0, 0, 1, 1, 0, 
           1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 
           1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 
           1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
           13.220075639921227`}}, {{1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 
           0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 
           0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 
           1, 0}, {-11.545570962463064`, 8.676864685934778}}, {{1, 0, 1, 1, 0,
            1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
           0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 
           0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0}, {-11.066799662867826`, 
           8.358172047247596}}, {{1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 
           1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 
           0}, {-7.3282619045565305`, 12.617600730943419`}}, {{1, 1, 0, 1, 0, 
           1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 
           0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 
           1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1}, {-7.574256711141503, 
           14.40929241888469}}, {{1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1,
            0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 
           1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
           1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 0, 1, 0, 0, 1, 
           1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
           1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 
           1, 1, 0, 0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 
           15.207529801970406`}}, {{0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 
           0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 
           1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 
           1, 1}, {-11.96044344488174, 
           2.28958253696279}}}, $CellContext`recombinationProb$$ = 
        0.9, $CellContext`rest$$ = {{{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 
           1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 
           1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 
           1, 0, 1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 0, 
           1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 
           1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 
           0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 
           0}, {-11.421733566361905`, -0.8283659881754999}}, {{0, 0, 1, 1, 0, 
           1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
           0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 
           1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
           0}, {-9.572579921715882, -1.737790753926629}}, {{0, 1, 1, 1, 1, 0, 
           0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 
           1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
           0, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {-11.96044344488174, 
           2.28958253696279}}, {{1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 
           0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 
           1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 
           1}, {-11.199099295690853`, 5.659636962835878}}, {{1, 1, 0, 0, 0, 0,
            1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 
           1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 
           0, 1, 0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
           3.3570010096509577`}}, {{0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 
           0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 
           1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 
           0, 0}, {-8.058621070248511, -0.7639791780714109}}, {{1, 1, 0, 1, 1,
            0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 
           1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 
           1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1}, {-9.981478050393505, 
           1.5657728902032488`}}, {{1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 
           1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 
           0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 
           0, 1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 1, 0, 1, 0, 
           0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 
           1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 
           1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1}, {-11.844442880369591`, 
           14.629418556920728`}}, {{0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 
           0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 
           1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 
           1, 0}, {-8.570516938080694, 3.041624417706119}}, {{0, 0, 1, 1, 0, 
           1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 
           1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 
           1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 
           2.5257799729932753`}}, {{0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 
           1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 
           1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 
           0, 1}, {-9.458226840993166, 4.422852606221315}}, {{1, 0, 0, 0, 1, 
           0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 
           0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 
           1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
           1}, {-8.01831014622913, -0.20651727037040202`}}, {{1, 0, 1, 1, 1, 
           0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 
           1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 
           0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0}, {-11.545570962463064`, 
           8.676864685934778}}, {{1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,
            0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 
           1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 
           0}, {-11.066799662867826`, 8.358172047247596}}, {{1, 0, 0, 0, 1, 0,
            0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 
           1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 
           0, 0, 1, 0, 0, 1, 1, 1, 0, 0}, {-8.077395766745926, 
           2.7439712616838996`}}, {{1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 
           1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 
           0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 
           0, 0}, {-7.398467810638077, -0.19230203798664247`}}, {{1, 0, 0, 1, 
           0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 
           1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0}, {-8.520399735104306, 
           3.9196193226303753`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 
           1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 
           0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 
           1, 0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0, 
           1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 
           1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 
           1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1}, {-9.692248360079454, 
           9.590216390885816}}, {{0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1,
            1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 
           0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 
           1}, {-10.184721291132076`, 12.143970534265408`}}, {{0, 0, 1, 1, 0, 
           1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 
           1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 
           1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
           13.220075639921227`}}, {{0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 
           0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
           1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 
           0, 0}, {-6.8649328958068345`, 0.6948448921359747}}, {{0, 0, 1, 1, 
           1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 
           0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 
           0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1}, {-9.093075496073139, 
           10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 
           1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 
           1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 
           1, 0}, {-9.897322084703333, 13.675662422151552`}}, {{0, 0, 1, 1, 1,
            0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 
           1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
           0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0}, {-8.036771277118033, 
           7.007901768072225}}, {{1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1,
            0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 
           1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 
           0}, {-8.620933723873167, 8.204068957669818}}, {{1, 0, 1, 1, 1, 1, 
           1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 
           0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 
           0, 1, 1, 1, 0, 0, 1, 1, 0, 0}, {-7.264869175091414, 
           1.059824600077754}}, {{1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1,
            0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 
           1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 
           1}, {-10.10463872303636, 17.473160499489005`}}, {{0, 1, 0, 0, 0, 0,
            0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 
           1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 
           0, 0, 1, 1, 1, 1, 1, 0, 1, 0}, {-9.850079393631987, 
           14.037556801656473`}}, {{1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 
           1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
           0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 
           0, 0}, {-7.210110614365652, 3.7314009158532477`}}, {{1, 0, 1, 1, 1,
            0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 
           1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0}, {-7.121865592488678, 
           3.7052355224569586`}}, {{1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 
           0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 
           0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 
           1, 0}, {-9.054484890093537, 13.217636059932097`}}, {{1, 0, 0, 1, 0,
            0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 
           1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
           0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1}, {-7.6304532716486015`, 
           9.074662835110777}}, {{1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1,
            0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 
           1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 
           0}, {-8.00918365158874, 13.86777750917469}}, {{0, 0, 1, 0, 1, 0, 1,
            0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 
           1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 
           0, 0, 0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 
           6.871137483368768}}, {{1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0,
            1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 
           0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 
           1}, {-8.262875429146302, 18.195928373984664`}}, {{1, 1, 0, 1, 0, 1,
            1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 
           1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 
           0, 0, 1, 1, 1, 1, 0, 0, 1, 0}, {-7.3282619045565305`, 
           12.617600730943419`}}, {{0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 
           1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 
           0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 
           1, 0}, {-6.848530173988715, 11.217689798080432`}}, {{0, 0, 1, 1, 0,
            1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 
           1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
           1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1}, {-7.719766745039039, 
           17.69959229239864}}, {{1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
            1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
           0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 
           1}, {-7.574256711141503, 14.40929241888469}}, {{1, 0, 1, 0, 0, 1, 
           1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
           1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 
           1, 1, 0, 0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 
           15.207529801970406`}}, {{1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 
           1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 
           0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 
           1, 0}, {-6.839615379562979, 
           15.382832776882166`}}}, $CellContext`run$$ = 
        False, $CellContext`visPareto$$ = True, $CellContext`zoom$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2603$$, 0], 
        Hold[$CellContext`mutationProb$$, $CellContext`mutationProb$2604$$, 
         0], 
        Hold[$CellContext`recombinationProb$$, \
$CellContext`recombinationProb$2605$$, 0], 
        Hold[$CellContext`run$$, $CellContext`run$2606$$, False], 
        Hold[$CellContext`visPareto$$, $CellContext`visPareto$2607$$, False], 
        
        Hold[$CellContext`zoom$$, $CellContext`zoom$2608$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (
       If[$CellContext`n$$ != $CellContext`oldn$$, $CellContext`run$$ = 
          False; $CellContext`parents$$ = \
$CellContext`initPopulationFitness[$CellContext`n$$, \
$CellContext`individualSize, $CellContext`GPMap, {$CellContext`f1, \
$CellContext`f2}]; {$CellContext`front$$, $CellContext`rest$$} = \
$CellContext`calcNonDomFront[$CellContext`parents$$]; $CellContext`oldn$$ = \
$CellContext`n$$; $CellContext`generation$$ = 0; $CellContext`zoom$$ = False]; 
       If[$CellContext`run$$, 
         Increment[$CellContext`generation$$]; {$CellContext`front$$, \
$CellContext`rest$$} = $CellContext`evolvePop[$CellContext`parents$$, \
$CellContext`n$$, $CellContext`recombinationProb$$, \
$CellContext`mutationProb$$, $CellContext`GPMap, {$CellContext`f1, \
$CellContext`f2}]; $CellContext`parents$$ = 
          Join[$CellContext`front$$, $CellContext`rest$$]; Null]; Dynamic[
         $CellContext`visualizePop[{$CellContext`front$$, \
$CellContext`rest$$}, $CellContext`zoom$$, $CellContext`generation$$, \
$CellContext`visPareto$$]]), 
      "Specifications" :> {{{$CellContext`n$$, 50, "population size"}, {25, 
         50, 75, 100}}, {{$CellContext`oldn$$, 50}, ControlType -> 
         None}, {{$CellContext`mutationProb$$, 0.016666666666666666`, 
          "mutation probability"}, 0, 
         1}, {{$CellContext`recombinationProb$$, 0.9, 
          "recombination probability"}, 0, 
         1}, {{$CellContext`run$$, False, "evolve"}, {
         True, False}}, {{$CellContext`visPareto$$, True, 
          "show attainment surface"}, {
         True, False}}, {{$CellContext`zoom$$, False, "magnify"}, {
         True, False}}, 
        Row[{
          Button[
          "initialize population", $CellContext`run$$ = 
            False; $CellContext`generation$$ = 
            0; $CellContext`parents$$ = \
$CellContext`initPopulationFitness[$CellContext`n$$, \
$CellContext`individualSize, $CellContext`GPMap, {$CellContext`f1, \
$CellContext`f2}]; $CellContext`parents$$ = \
$CellContext`assignFitness[$CellContext`parents$$, $CellContext`GPMap, \
{$CellContext`f1, $CellContext`f2}]; {$CellContext`front$$, \
$CellContext`rest$$} = $CellContext`calcNonDomFront[$CellContext`parents$$]; \
$CellContext`zoom$$ = False], 
          Button[
          "next generation", $CellContext`run$$ = 
            False; {$CellContext`front$$, $CellContext`rest$$} = \
$CellContext`evolvePop[$CellContext`parents$$, $CellContext`n$$, \
$CellContext`recombinationProb$$, $CellContext`mutationProb$$, \
$CellContext`GPMap, {$CellContext`f1, $CellContext`f2}]; \
$CellContext`parents$$ = Join[$CellContext`front$$, $CellContext`rest$$]; 
           Increment[$CellContext`generation$$]]}], {{$CellContext`parents$$, \
{{{1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 
            1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 
            0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1}, {-11.844442880369591`, 
            14.629418556920728`}}, {{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,
             0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1,
             1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
             0, 0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1, 0, 1,
             1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,
             0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,
             1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0}, {-14.320308913723036`, 
            7.761490297367633}}, {{1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 
            0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 
            0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 
            0, 0}, {-8.077395766745926, 2.7439712616838996`}}, {{1, 1, 1, 0, 
            0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 
            1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 
            0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0}, {-8.00918365158874, 
            13.86777750917469}}, {{0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 
            0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 
            0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 
            1, 0}, {-9.850079393631987, 14.037556801656473`}}, {{0, 1, 0, 0, 
            0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 
            1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 
            1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0}, {-8.570516938080694, 
            3.041624417706119}}, {{0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 
            0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
            1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 
            0, 0}, {-6.8649328958068345`, 0.6948448921359747}}, {{1, 0, 1, 1, 
            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 
            0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 
            0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 
            0}, {-7.398467810638077, -0.19230203798664247`}}, {{0, 1, 1, 1, 0,
             1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,
             0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,
             0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 
            0}, {-12.347253950428872`, -3.319517762078253}}, {{1, 0, 1, 1, 0, 
            1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 
            0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 
            1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0}, {-6.839615379562979, 
            15.382832776882166`}}, {{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1,
             0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1,
             0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
             0, 1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 1, 0,
             1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
             1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,
             1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
            1}, {-10.164506888192498`, -5.239821964471311}}, {{0, 0, 1, 0, 1, 
            1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 
            0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 
            0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0}, {-6.848530173988715, 
            11.217689798080432`}}, {{1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,
             0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
             0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0,
             0, 0}, {-8.520399735104306, 3.9196193226303753`}}, {{1, 0, 0, 1, 
            0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 
            0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 
            0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1}, {-11.199099295690853`, 
            5.659636962835878}}, {{1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 
            1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
            0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 
            0, 0}, {-7.210110614365652, 3.7314009158532477`}}, {{0, 0, 1, 1, 
            1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 
            0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 
            0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1}, {-9.093075496073139, 
            10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,
             1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1,
             1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,
             1, 0}, {-9.897322084703333, 13.675662422151552`}}, {{1, 1, 0, 0, 
            0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 
            0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 
            0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
            3.3570010096509577`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,
             1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,
             0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,
             1, 0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0,
             1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,
             1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
             1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1}, {-9.692248360079454, 
            9.590216390885816}}, {{1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 
            1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 
            0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 
            1, 0}, {-7.121865592488678, 3.7052355224569586`}}, {{0, 0, 1, 0, 
            0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 
            0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 
            0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 
            0}, {-8.058621070248511, -0.7639791780714109}}, {{0, 0, 1, 1, 0, 
            1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 
            1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 
            1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 
            2.5257799729932753`}}, {{0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1,
             0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,
             0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,
             0, 0}, {-8.036771277118033, 7.007901768072225}}, {{1, 1, 1, 1, 1,
             0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,
             1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
             0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0}, {-8.620933723873167, 
            8.204068957669818}}, {{0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 
            0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 
            1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 
            1, 0}, {-11.421733566361905`, -0.8283659881754999}}, {{1, 1, 1, 0,
             1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,
             1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,
             0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
            5.939283025658328}}, {{1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 
            1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 
            1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 
            0, 1}, {-9.981478050393505, 1.5657728902032488`}}, {{1, 1, 1, 1, 
            0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 
            1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
            0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0}, {-9.054484890093537, 
            13.217636059932097`}}, {{0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0,
             1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,
             1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,
             0, 1}, {-9.458226840993166, 4.422852606221315}}, {{0, 0, 1, 0, 1,
             0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1,
             0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
             1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 
            6.871137483368768}}, {{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 
            0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 
            1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 
            1, 1}, {-14.869273524505353`, 11.42210015213447}}, {{1, 0, 1, 1, 
            1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 
            1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 
            1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0}, {-7.264869175091414, 
            1.059824600077754}}, {{1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 
            1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 
            0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 
            1, 1}, {-7.6304532716486015`, 9.074662835110777}}, {{0, 0, 1, 1, 
            0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 
            0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
            1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1}, {-7.719766745039039, 
            17.69959229239864}}, {{1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 
            0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 
            0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 
            0, 1}, {-8.01831014622913, -0.20651727037040202`}}, {{0, 1, 0, 0, 
            1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 
            1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
            0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1}, {-10.184721291132076`, 
            12.143970534265408`}}, {{1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0,
             0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,
             1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,
             0, 1}, {-8.262875429146302, 18.195928373984664`}}, {{1, 0, 0, 1, 
            1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 
            0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 
            1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}, {-10.10463872303636, 
            17.473160499489005`}}, {{0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,
             1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,
             1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
             1, 0}, {-9.572579921715882, -1.737790753926629}}, {{0, 0, 1, 1, 
            0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 
            1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 
            0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
            13.220075639921227`}}, {{1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1,
             0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0,
             0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1,
             1, 0}, {-11.545570962463064`, 8.676864685934778}}, {{1, 0, 1, 1, 
            0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 
            0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 
            0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0}, {-11.066799662867826`, 
            8.358172047247596}}, {{1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 
            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 
            1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 
            1, 0}, {-7.3282619045565305`, 12.617600730943419`}}, {{1, 1, 0, 1,
             0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,
             0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1,
             1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1}, {-7.574256711141503, 
            14.40929241888469}}, {{1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 
            1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 
            0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 
            0, 1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 0, 1, 0, 0,
             1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0,
             1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,
             1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 
            15.207529801970406`}}, {{0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0,
             0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0,
             1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,
             1, 1}, {-11.96044344488174, 2.28958253696279}}}}, ControlType -> 
         None}, {{$CellContext`front$$, {{{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,
             0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
             1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
             0, 1, 0, 0}, {-9.931136341363063, -5.3590572909879945`}}, {{1, 1,
             0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1,
             1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1,
             0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0}, {-14.320308913723036`,
             7.761490297367633}}, {{0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
            0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 
            0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 
            0, 0}, {-12.347253950428872`, -3.319517762078253}}, {{0, 1, 0, 1, 
            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 
            1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 
            0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 
            1}, {-10.164506888192498`, -5.239821964471311}}, {{1, 1, 1, 0, 1, 
            1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 
            0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
            0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1}, {-13.136362175372229`, 
            5.939283025658328}}, {{0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 
            0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 
            1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 
            1, 1}, {-14.869273524505353`, 11.42210015213447}}}}, ControlType -> 
         None}, {{$CellContext`rest$$, {{{1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 
            1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 
            1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 
            1, 1, 0, 1}, {-11.930487714772486`, -0.32363562878062635`}}, {{0, 
            0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 
            0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 
            1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 
            0}, {-11.421733566361905`, -0.8283659881754999}}, {{0, 0, 1, 1, 0,
             1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0,
             0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1,
             1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
            0}, {-9.572579921715882, -1.737790753926629}}, {{0, 1, 1, 1, 1, 0,
             0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
             1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0,
             0, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {-11.96044344488174, 
            2.28958253696279}}, {{1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0,
             0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,
             1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1,
             1}, {-11.199099295690853`, 5.659636962835878}}, {{1, 1, 0, 0, 0, 
            0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 
            1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 
            0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1}, {-10.318769537871724`, 
            3.3570010096509577`}}, {{0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,
             0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,
             1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
             0, 0}, {-8.058621070248511, -0.7639791780714109}}, {{1, 1, 0, 1, 
            1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 
            1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 
            1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1}, {-9.981478050393505, 
            1.5657728902032488`}}, {{1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1,
             1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
             0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,
             0, 1}, {-11.859963497470575`, 7.59684688101994}}, {{1, 1, 0, 1, 
            0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 
            1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 
            0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1}, {-11.844442880369591`, 
            14.629418556920728`}}, {{0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,
             0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,
             1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1,
             1, 0}, {-8.570516938080694, 3.041624417706119}}, {{0, 0, 1, 1, 0,
             1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,
             1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0,
             1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0}, {-8.361340080196662, 
            2.5257799729932753`}}, {{0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0,
             1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,
             1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,
             0, 1}, {-9.458226840993166, 4.422852606221315}}, {{1, 0, 0, 0, 1,
             0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,
             0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,
             1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 
            1}, {-8.01831014622913, -0.20651727037040202`}}, {{1, 0, 1, 1, 1, 
            0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 
            1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 
            0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0}, {-11.545570962463064`, 
            8.676864685934778}}, {{1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 
            1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 
            0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 
            0, 0}, {-11.066799662867826`, 8.358172047247596}}, {{1, 0, 0, 0, 
            1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 
            1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 
            1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0}, {-8.077395766745926, 
            2.7439712616838996`}}, {{1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
             1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,
             0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,
             0, 0}, {-7.398467810638077, -0.19230203798664247`}}, {{1, 0, 0, 
            1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 
            1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 
            0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0}, {-8.520399735104306, 
            3.9196193226303753`}}, {{1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,
             1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,
             0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,
             1, 0}, {-9.421270644801968, 6.125180826636328}}, {{0, 0, 0, 0, 0,
             1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,
             1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
             1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1}, {-9.692248360079454, 
            9.590216390885816}}, {{0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
            1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 
            0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 
            1, 1}, {-10.184721291132076`, 12.143970534265408`}}, {{0, 0, 1, 1,
             0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,
             1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1,
             0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1}, {-10.715760238933226`, 
            13.220075639921227`}}, {{0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0,
             0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1,
             1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,
             0, 0}, {-6.8649328958068345`, 0.6948448921359747}}, {{0, 0, 1, 1,
             1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,
             0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,
             0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1}, {-9.093075496073139, 
            10.702212904434294`}}, {{0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,
             1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1,
             1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,
             1, 0}, {-9.897322084703333, 13.675662422151552`}}, {{0, 0, 1, 1, 
            1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 
            1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 
            1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0}, {-8.036771277118033, 
            7.007901768072225}}, {{1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 
            1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 
            0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 
            1, 0}, {-8.620933723873167, 8.204068957669818}}, {{1, 0, 1, 1, 1, 
            1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 
            0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 
            1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0}, {-7.264869175091414, 
            1.059824600077754}}, {{1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 
            1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 
            1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 
            0, 1}, {-10.10463872303636, 17.473160499489005`}}, {{0, 1, 0, 0, 
            0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 
            1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 
            1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0}, {-9.850079393631987, 
            14.037556801656473`}}, {{1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,
             1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0,
             0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1,
             0, 0}, {-7.210110614365652, 3.7314009158532477`}}, {{1, 0, 1, 1, 
            1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 
            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 
            1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0}, {-7.121865592488678, 
            3.7052355224569586`}}, {{1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,
             0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
             0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0,
             1, 0}, {-9.054484890093537, 13.217636059932097`}}, {{1, 0, 0, 1, 
            0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 
            1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 
            0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1}, {-7.6304532716486015`, 
            9.074662835110777}}, {{1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 
            1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 
            0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 
            0, 0}, {-8.00918365158874, 13.86777750917469}}, {{0, 0, 1, 0, 1, 
            0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 
            0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 
            1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0}, {-7.158679145843813, 
            6.871137483368768}}, {{1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 
            0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 
            1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 
            0, 1}, {-8.262875429146302, 18.195928373984664`}}, {{1, 1, 0, 1, 
            0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
            0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 
            1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0}, {-7.3282619045565305`, 
            12.617600730943419`}}, {{0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,
             1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0,
             0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1,
             1, 0}, {-6.848530173988715, 11.217689798080432`}}, {{0, 0, 1, 1, 
            0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 
            0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 
            1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1}, {-7.719766745039039, 
            17.69959229239864}}, {{1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 
            1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 
            0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 
            0, 1}, {-7.574256711141503, 14.40929241888469}}, {{1, 0, 1, 0, 0, 
            1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 
            1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 
            1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1}, {-7.070342268858466, 
            15.207529801970406`}}, {{1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,
             1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0,
             0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0,
             1, 0}, {-6.839615379562979, 15.382832776882166`}}}}, ControlType -> 
         None}, {{$CellContext`generation$$, 0}, ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Top, ContinuousAction -> False, 
        SynchronousUpdating -> True, AutorunSequencing -> {1, 6, 7}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{633., {214., 219.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(({$CellContext`initPopulationFitness[
          Pattern[$CellContext`popSize, 
           Blank[]], 
          Pattern[$CellContext`indLength, 
           Blank[]], 
          Pattern[$CellContext`GPMap, 
           Blank[]], {
           Pattern[$CellContext`f1, 
            Blank[]], 
           Pattern[$CellContext`f2, 
            Blank[]]}] := Module[{$CellContext`pop}, $CellContext`pop = Table[{
              RandomChoice[{0, 1}, $CellContext`indLength], 
              Null}, {$CellContext`popSize}]; \
$CellContext`assignFitness[$CellContext`pop, $CellContext`GPMap, \
{$CellContext`f1, $CellContext`f2}]], $CellContext`GPMap[
          Pattern[$CellContext`x, 
           Blank[List]]] := 
        Map[$CellContext`decodeBinaryChromosome[#, {-5, 5}, True]& , 
          
          Partition[$CellContext`x, 20, 
           20]], $CellContext`decodeBinaryChromosome[
          Pattern[$CellContext`binaryChrom, 
           Blank[List]], {
           Pattern[$CellContext`rangeMin, 
            Blank[]], 
           Pattern[$CellContext`rangeMax, 
            Blank[]]}, 
          Pattern[$CellContext`useGray, 
           Blank[]]] := 
        Module[{$CellContext`binaryNumber, $CellContext`stepSize}, \
$CellContext`stepSize = ($CellContext`rangeMax - $CellContext`rangeMin)/(
            2^Length[$CellContext`binaryChrom] - 1); 
          If[$CellContext`useGray, $CellContext`binaryNumber = 
            FoldList[Mod[# + #2, 2]& , 
              First[$CellContext`binaryChrom], 
              
              Rest[$CellContext`binaryChrom]], $CellContext`binaryNumber = \
$CellContext`binaryChrom]; 
          N[$CellContext`rangeMin + 
            FromDigits[$CellContext`binaryNumber, 
               2] $CellContext`stepSize]], $CellContext`f1[
          Pattern[$CellContext`x, 
           Blank[]]] := N[
          
          Sum[(-10) 
           Exp[(-0.2) 
             Sqrt[Part[$CellContext`x, $CellContext`i]^2 + 
               Part[$CellContext`x, $CellContext`i + 1]^2]], {$CellContext`i, 
            1, 2}]], $CellContext`i = 20, $CellContext`f2[
          Pattern[$CellContext`x, 
           Blank[]]] := N[
          Sum[
          Abs[Part[$CellContext`x, $CellContext`i]^0.8] + 
           5 Sin[Part[$CellContext`x, $CellContext`i]^3], {$CellContext`i, 1, 
            3}]], $CellContext`assignFitness[
          Pattern[$CellContext`pop, 
           Blank[]], 
          Pattern[$CellContext`GPMap, 
           Blank[]], {
           Pattern[$CellContext`f1, 
            Blank[]], 
           Pattern[$CellContext`f2, 
            Blank[]]}] := Map[{#, {
            $CellContext`f1[
             $CellContext`GPMap[#]], 
            $CellContext`f2[
             $CellContext`GPMap[#]]}}& , 
          Part[$CellContext`pop, All, 1]], $CellContext`individualSize = 
        60, $CellContext`calcNonDomFront[
          Pattern[$CellContext`pop, 
           Blank[]]] := 
        Module[{$CellContext`partition, $CellContext`front, \
$CellContext`rest}, $CellContext`partition = \
$CellContext`fastNondominatedSort[$CellContext`pop]; $CellContext`front = 
           Part[$CellContext`pop, 
             First[$CellContext`partition]]; $CellContext`rest = 
           Part[$CellContext`pop, 
             Flatten[
              Rest[$CellContext`partition]]]; 
          Return[{$CellContext`front, $CellContext`rest}]; 
          Null], $CellContext`fastNondominatedSort[
          Pattern[$CellContext`pop, 
           Blank[List]]] := 
        Module[{$CellContext`iRelationTable, $CellContext`iCurrentFront, \
$CellContext`iDominatedSolutions, $CellContext`numberDominatingSolutions, \
$CellContext`iNondominatedFronts, $CellContext`domSolByCurrentFront, \
$CellContext`solutionsLeft}, $CellContext`iRelationTable = Outer[Which[
              $CellContext`dominates[#, #2], True, 
              $CellContext`dominates[#2, #], 
              False]& , $CellContext`pop, $CellContext`pop, 
             1]; $CellContext`iDominatedSolutions = 
           Map[Position[#, 
              True]& , $CellContext`iRelationTable]; \
$CellContext`numberDominatingSolutions = 
           Map[Count[#, 
              False]& , $CellContext`iRelationTable]; \
$CellContext`iCurrentFront = 
           Position[$CellContext`numberDominatingSolutions, 
             0]; $CellContext`iNondominatedFronts = {
             
             Flatten[$CellContext`iCurrentFront]}; $CellContext`solutionsLeft = \
$CellContext`numberDominatingSolutions; 
          
          While[$CellContext`iCurrentFront != {}, \
$CellContext`domSolByCurrentFront = Flatten[
               
               Extract[$CellContext`iDominatedSolutions, \
$CellContext`iCurrentFront], 1]; $CellContext`solutionsLeft = 
             ReplaceAll[$CellContext`solutionsLeft, Condition[
                 Pattern[$CellContext`y, 
                  Blank[]], $CellContext`y == 
                 0] -> -1]; $CellContext`solutionsLeft = 
             MapAt[# - 
               1& , $CellContext`solutionsLeft, \
$CellContext`domSolByCurrentFront]; $CellContext`iCurrentFront = 
             Position[$CellContext`solutionsLeft, 
               0]; $CellContext`iNondominatedFronts = 
             Append[$CellContext`iNondominatedFronts, 
               Flatten[$CellContext`iCurrentFront]]; Null]; Return[
            
            Drop[$CellContext`iNondominatedFronts, -1]]], \
$CellContext`dominates[{
           Pattern[$CellContext`c1, 
            Blank[]], 
           Pattern[$CellContext`f1, 
            Blank[]]}, {
           Pattern[$CellContext`c2, 
            Blank[]], 
           Pattern[$CellContext`f2, 
            Blank[]]}] := And[
          Apply[And, 
           Thread[$CellContext`f1 <= $CellContext`f2]], 
          Apply[Or, 
           Thread[$CellContext`f1 < $CellContext`f2]]], $CellContext`evolvePop[
          Pattern[$CellContext`pop, 
           Blank[]], 
          Pattern[$CellContext`popSize, 
           Blank[]], 
          Pattern[$CellContext`recombinationProb, 
           Blank[]], 
          Pattern[$CellContext`mutationProb, 
           Blank[]], 
          Pattern[$CellContext`GPMap, 
           Blank[]], {
           Pattern[$CellContext`f1, 
            Blank[]], 
           Pattern[$CellContext`f2, 
            Blank[]]}] := 
        Module[{$CellContext`offspring, $CellContext`combinedPop, \
$CellContext`front, $CellContext`rest}, $CellContext`offspring = \
$CellContext`matingSelection[$CellContext`pop, $CellContext`popSize]; \
$CellContext`offspring = \
$CellContext`recombinatePopulation[$CellContext`offspring, \
$CellContext`recombinationProb]; $CellContext`offspring = \
$CellContext`mutatePopulation[$CellContext`offspring, \
$CellContext`mutationProb]; $CellContext`offspring = \
$CellContext`assignFitness[$CellContext`offspring, $CellContext`GPMap, \
{$CellContext`f1, $CellContext`f2}]; $CellContext`combinedPop = 
           Join[$CellContext`pop, $CellContext`offspring]; \
$CellContext`survivorSelection[$CellContext`combinedPop, \
$CellContext`popSize]], $CellContext`matingSelection[
          Pattern[$CellContext`pop, 
           Blank[]], 
          Pattern[$CellContext`nOffspring, 
           Blank[]]] := 
        Module[{$CellContext`fronts, $CellContext`rankAndCD, \
$CellContext`indexPair, $CellContext`index}, $CellContext`rankAndCD = \
$CellContext`calcRankAndCD[$CellContext`pop]; $CellContext`index = 
           Table[$CellContext`indexPair = RandomSample[
                Range[1, 
                 Length[$CellContext`pop]], 2]; If[
               $CellContext`cdOperator[
                Part[$CellContext`rankAndCD, 
                 First[$CellContext`indexPair]], 
                Part[$CellContext`rankAndCD, 
                 Last[$CellContext`indexPair]]], 
               First[$CellContext`indexPair], 
               Last[$CellContext`indexPair]], {$CellContext`nOffspring}]; 
          Return[
            
            Part[$CellContext`pop, $CellContext`index]]], \
$CellContext`calcRankAndCD[
          Pattern[$CellContext`pop, 
           Blank[List]]] := 
        Module[{$CellContext`rank, $CellContext`distances, \
$CellContext`nFronts, $CellContext`nIndividuals, $CellContext`distancesFront, \
$CellContext`fronts}, $CellContext`fronts = \
$CellContext`fastNondominatedSort[$CellContext`pop]; $CellContext`nFronts = 
           Length[$CellContext`fronts]; $CellContext`nIndividuals = Length[
             Flatten[$CellContext`fronts]]; $CellContext`distancesFront = 
           Map[$CellContext`calcCrowdedDistance[
              Part[
               
               Part[$CellContext`pop, All, 
                2], #]]& , $CellContext`fronts]; $CellContext`rank = 
           Table[0, {$CellContext`nIndividuals}]; $CellContext`distances = 
           Table[0, {$CellContext`nIndividuals}]; 
          For[$CellContext`i = 1, $CellContext`i <= $CellContext`nFronts, 
            Increment[$CellContext`i], Part[$CellContext`rank, 
               Part[$CellContext`fronts, $CellContext`i]] = $CellContext`i; 
            Part[$CellContext`distances, 
               Part[$CellContext`fronts, $CellContext`i]] = 
             Part[$CellContext`distancesFront, $CellContext`i]]; Return[
            Transpose[{$CellContext`rank, 
              
              Flatten[$CellContext`distances]}]]], \
$CellContext`calcCrowdedDistance[
          Pattern[$CellContext`fitnessFront, 
           Blank[List]]] := 
        Module[{$CellContext`nSolutions, $CellContext`nObjectives, \
$CellContext`distances, $CellContext`order, $CellContext`diff}, \
$CellContext`nSolutions = Part[
             Dimensions[$CellContext`fitnessFront], 
             1]; $CellContext`nObjectives = Part[
             Dimensions[$CellContext`fitnessFront], 2]; 
          If[$CellContext`nSolutions == 1, 
            Return[{Infinity}]]; If[$CellContext`nSolutions == 2, 
            Return[{Infinity, Infinity}]]; $CellContext`distances = 
           Table[0, {$CellContext`nSolutions}]; 
          For[$CellContext`k = 1, $CellContext`k <= $CellContext`nObjectives, 
            
            Increment[$CellContext`k], $CellContext`order = Ordering[
               Part[$CellContext`fitnessFront, All, $CellContext`k]]; 
            Part[$CellContext`distances, 
               First[$CellContext`order]] = Infinity; 
            Part[$CellContext`distances, 
               Last[$CellContext`order]] = Infinity; $CellContext`diff = 
             Part[
                Part[$CellContext`fitnessFront, 
                 Last[$CellContext`order]], $CellContext`k] - Part[
               Part[$CellContext`fitnessFront, 
                First[$CellContext`order]], $CellContext`k]; 
            For[$CellContext`i = 2, $CellContext`i < $CellContext`nSolutions, 
              
              Increment[$CellContext`i], 
              If[$CellContext`diff != 0, 
               AddTo[
                Part[$CellContext`distances, 
                 Part[$CellContext`order, $CellContext`i]], (Part[
                   Part[$CellContext`fitnessFront, 
                    
                    Part[$CellContext`order, $CellContext`i + 
                    1]], $CellContext`k] - Part[
                  Part[$CellContext`fitnessFront, 
                   
                   Part[$CellContext`order, $CellContext`i - 
                    1]], $CellContext`k])/$CellContext`diff], 
               AddTo[
                Part[$CellContext`distances, 
                 Part[$CellContext`order, $CellContext`i]], Infinity]]]; 
            Null]; Return[
            Flatten[$CellContext`distances]]], $CellContext`k = 
        3, $CellContext`cdOperator[{
           Pattern[$CellContext`rank1, 
            Blank[]], 
           Pattern[$CellContext`cd1, 
            Blank[]]}, {
           Pattern[$CellContext`rank2, 
            Blank[]], 
           Pattern[$CellContext`cd2, 
            Blank[]]}] := If[
          Or[$CellContext`rank1 < $CellContext`rank2, 
           
           And[$CellContext`rank1 == $CellContext`rank2, $CellContext`cd1 > \
$CellContext`cd2]], True, False], $CellContext`recombinatePopulation[
          Pattern[$CellContext`binaryPop, 
           Blank[]], 
          Pattern[$CellContext`recombinationRate, 
           Blank[]]] := 
        Module[{$CellContext`pairedPop, $CellContext`recombinatedChroms}, \
$CellContext`pairedPop = Partition[
             RandomSample[$CellContext`binaryPop], 2, 2, 1, {
              
              Last[$CellContext`binaryPop]}]; $CellContext`recombinatedChroms = \
(Flatten[#, 1]& )[
             Map[If[RandomReal[] <= $CellContext`recombinationRate, 
               $CellContext`recombinateChromosomes[
                First[
                 Part[#, 1]], 
                First[
                 Part[#, 2]]], {
                First[
                 Part[#, 1]], 
                First[
                 Part[#, 2]]}]& , $CellContext`pairedPop]]; 
          Map[{#, Null}& , $CellContext`recombinatedChroms]], \
$CellContext`recombinateChromosomes[
          Pattern[$CellContext`chrom1, 
           Blank[]], 
          Pattern[$CellContext`chrom2, 
           Blank[]]] := 
        Module[{$CellContext`cut}, $CellContext`cut = RandomInteger[{1, 
              Length[$CellContext`chrom1]}]; {
            Join[
             Take[$CellContext`chrom1, $CellContext`cut], 
             Drop[$CellContext`chrom2, $CellContext`cut]], 
            Join[
             Take[$CellContext`chrom2, $CellContext`cut], 
             
             Drop[$CellContext`chrom1, $CellContext`cut]]}], \
$CellContext`mutatePopulation[
          Pattern[$CellContext`binaryPop, 
           Blank[]], 
          Pattern[$CellContext`mutationRate, 
           Blank[]]] := Map[{
           $CellContext`mutateChromosome[
            First[#], $CellContext`mutationRate], 
           Null}& , $CellContext`binaryPop], $CellContext`mutateChromosome[
          Pattern[$CellContext`chrom, 
           Blank[]], 
          Pattern[$CellContext`mutationRate, 
           Blank[]]] := 
        Map[If[RandomReal[] <= $CellContext`mutationRate, 
           1 - #, #]& , $CellContext`chrom], $CellContext`survivorSelection[
          Pattern[$CellContext`pop, 
           Blank[]], 
          Pattern[$CellContext`nOffspring, 
           Blank[]]] := 
        Module[{$CellContext`fronts, $CellContext`rankAndCD, \
$CellContext`crowdedDistance, $CellContext`frontSize, $CellContext`tmpPop}, \
$CellContext`rankAndCD = $CellContext`calcRankAndCD[$CellContext`pop]; \
$CellContext`frontSize = Min[
             Count[$CellContext`rankAndCD, {1, 
               Blank[]}], $CellContext`nOffspring]; $CellContext`tmpPop = 
           Part[$CellContext`pop, 
             
             Ordering[$CellContext`rankAndCD, $CellContext`nOffspring, \
$CellContext`cdOperator[#, #2]& ]]; {
            Take[$CellContext`tmpPop, $CellContext`frontSize], 
            
            Drop[$CellContext`tmpPop, $CellContext`frontSize]}], \
$CellContext`visualizePop[{
           Pattern[$CellContext`front, 
            Blank[]], 
           Pattern[$CellContext`rest, 
            Blank[]]}, 
          Pattern[$CellContext`zoom, 
           Blank[]], 
          Pattern[$CellContext`generation, 
           Blank[]], 
          Pattern[$CellContext`visPareto, 
           Blank[]]] := 
        Module[{$CellContext`data2D, $CellContext`data3D, \
$CellContext`sFront, $CellContext`visFront, $CellContext`plotRange2D, \
$CellContext`plotRange3D}, $CellContext`sFront = Sort[
             Part[$CellContext`front, All, 2]]; $CellContext`visFront = (
            FlattenAt[#, 2]& )[{{
               First[
                First[$CellContext`sFront]], 100}, $CellContext`sFront, {
              100, 
               Last[
                Last[$CellContext`sFront]]}}]; $CellContext`plotRange3D = 
           If[$CellContext`zoom, {{-1.5, 0}, {-1.25, 0.25}, {-1.25, 0.25}}, {{
             5, -5}, {5, -5}, {5, -5}}]; $CellContext`plotRange2D = 
           If[$CellContext`zoom, {{-20.5, -14}, {-13, 
              1}}, {{-20.5, -8}, {-13.5, 15}}]; 
          If[$CellContext`rest != {}, $CellContext`data2D = {
               Part[$CellContext`rest, All, 2], 
               Part[$CellContext`front, All, 2]}; $CellContext`data3D = {
               Map[$CellContext`GPMap, 
                Part[$CellContext`front, All, 1]], 
               Map[$CellContext`GPMap, 
                Part[$CellContext`rest, All, 1]]}, $CellContext`data2D = 
             Part[$CellContext`front, All, 2]; $CellContext`data3D = 
             Map[$CellContext`GPMap, 
               Part[$CellContext`front, All, 1]]]; (Labeled[#, 
            Style[
             Style[
              StringJoin["Generation ", 
               ToString[$CellContext`generation]], "Label", Bold]], Top]& )[
            Grid[{{
               If[$CellContext`visPareto, 
                Show[
                 
                 ListPlot[$CellContext`data2D, 
                  PlotRange -> $CellContext`plotRange2D, 
                  PlotStyle -> {Red, Green}, Frame -> True, 
                  AxesOrigin -> {-20.5, -14}, PlotLabel -> 
                  Style["Objective Space", "Label"], 
                  FrameLabel -> {
                   "minimize \!\(\*SubscriptBox[\(f\), \(1\)]\)", 
                    "minimize \!\(\*SubscriptBox[\(f\), \(2\)]\)" 
                    TextCell[""]}], 
                 
                 ListLinePlot[$CellContext`visFront, InterpolationOrder -> 0, 
                  Filling -> Top, PlotRange -> $CellContext`plotRange2D], 
                 ImageSize -> {290, 200}, 
                 ImagePadding -> {{45, 10}, {35, 10}}], 
                
                ListPlot[$CellContext`data2D, 
                 PlotRange -> $CellContext`plotRange2D, Frame -> True, 
                 AxesOrigin -> {-20.5, -14}, PlotStyle -> {Red, Green}, 
                 PlotLabel -> Style["Objective Space", "Label"], 
                 FrameLabel -> {
                  "minimize \!\(\*SubscriptBox[\(f\), \(1\)]\)", 
                   "minimize \!\(\*SubscriptBox[\(f\), \(2\)]\)" 
                   TextCell[""]}, ImageSize -> {290, 200}, 
                 ImagePadding -> {{45, 10}, {35, 10}}]], 
               
               ListPointPlot3D[$CellContext`data3D, 
                PlotRange -> $CellContext`plotRange3D, 
                PlotStyle -> {Green, Red}, PlotLabel -> 
                Style["Decision Space", "Label"], BoxRatios -> {1, 1, 1}, 
                AxesLabel -> {
                  TextCell[
                   RawBoxes[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["x", "1"], TraditionalForm]]]]], 
                  TextCell[
                   RawBoxes[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["x", "2"], TraditionalForm]]]]], 
                  TextCell[
                   RawBoxes[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["x", "3"], TraditionalForm]]]]]}, 
                ImageSize -> {290, 200}, ImagePadding -> 25]}}]]], 
        Attributes[RawBoxes] = {ReadProtected}}; Typeset`initDone$$ = True); 
     ReleaseHold[
       HoldComplete[{$CellContext`fastNondominatedSort[
           Pattern[$CellContext`pop, 
            Blank[List]]] := 
         Module[{$CellContext`iRelationTable, $CellContext`iCurrentFront, \
$CellContext`iDominatedSolutions, $CellContext`numberDominatingSolutions, \
$CellContext`iNondominatedFronts, $CellContext`domSolByCurrentFront, \
$CellContext`solutionsLeft}, $CellContext`iRelationTable = Outer[Which[
               $CellContext`dominates[#, #2], True, 
               $CellContext`dominates[#2, #], 
               False]& , $CellContext`pop, $CellContext`pop, 
              1]; $CellContext`iDominatedSolutions = 
            Map[Position[#, 
               True]& , $CellContext`iRelationTable]; \
$CellContext`numberDominatingSolutions = 
            Map[Count[#, 
               False]& , $CellContext`iRelationTable]; \
$CellContext`iCurrentFront = 
            Position[$CellContext`numberDominatingSolutions, 
              0]; $CellContext`iNondominatedFronts = {
              
              Flatten[$CellContext`iCurrentFront]}; \
$CellContext`solutionsLeft = $CellContext`numberDominatingSolutions; 
           While[$CellContext`iCurrentFront != {}, \
$CellContext`domSolByCurrentFront = Flatten[
                
                Extract[$CellContext`iDominatedSolutions, \
$CellContext`iCurrentFront], 1]; $CellContext`solutionsLeft = 
              ReplaceAll[$CellContext`solutionsLeft, Condition[
                  Pattern[$CellContext`y, 
                   Blank[]], $CellContext`y == 
                  0] -> -1]; $CellContext`solutionsLeft = 
              MapAt[# - 
                1& , $CellContext`solutionsLeft, \
$CellContext`domSolByCurrentFront]; $CellContext`iCurrentFront = 
              Position[$CellContext`solutionsLeft, 
                0]; $CellContext`iNondominatedFronts = 
              Append[$CellContext`iNondominatedFronts, 
                Flatten[$CellContext`iCurrentFront]]; Null]; Return[
             
             Drop[$CellContext`iNondominatedFronts, -1]]], \
$CellContext`calcNondominatedSolutions[
           Pattern[$CellContext`pop, 
            Blank[List]]] := 
         Module[{$CellContext`iRelationTable, $CellContext`index}, \
$CellContext`iRelationTable = Outer[Which[
               $CellContext`dominates[#, #2], True, 
               $CellContext`dominates[#2, #], 
               False]& , $CellContext`pop, $CellContext`pop, 
              1]; $CellContext`index = Flatten[
              Position[
               Map[Count[#, False]& , $CellContext`iRelationTable], 0]]; 
           Return[
             
             Part[$CellContext`pop, $CellContext`index]]], \
$CellContext`calcNonDomFront[
           Pattern[$CellContext`pop, 
            Blank[]]] := 
         Module[{$CellContext`partition, $CellContext`front, \
$CellContext`rest}, $CellContext`partition = \
$CellContext`fastNondominatedSort[$CellContext`pop]; $CellContext`front = 
            Part[$CellContext`pop, 
              First[$CellContext`partition]]; $CellContext`rest = 
            Part[$CellContext`pop, 
              Flatten[
               Rest[$CellContext`partition]]]; 
           Return[{$CellContext`front, $CellContext`rest}]; 
           Null], $CellContext`calcCrowdedDistance[
           Pattern[$CellContext`fitnessFront, 
            Blank[List]]] := 
         Module[{$CellContext`nSolutions, $CellContext`nObjectives, \
$CellContext`distances, $CellContext`order, $CellContext`diff}, \
$CellContext`nSolutions = Part[
              Dimensions[$CellContext`fitnessFront], 
              1]; $CellContext`nObjectives = Part[
              Dimensions[$CellContext`fitnessFront], 2]; 
           If[$CellContext`nSolutions == 1, 
             Return[{Infinity}]]; If[$CellContext`nSolutions == 2, 
             Return[{Infinity, Infinity}]]; $CellContext`distances = 
            Table[0, {$CellContext`nSolutions}]; 
           For[$CellContext`k = 1, $CellContext`k <= $CellContext`nObjectives, 
             Increment[$CellContext`k], $CellContext`order = Ordering[
                Part[$CellContext`fitnessFront, All, $CellContext`k]]; 
             Part[$CellContext`distances, 
                First[$CellContext`order]] = Infinity; 
             Part[$CellContext`distances, 
                Last[$CellContext`order]] = Infinity; $CellContext`diff = Part[
                 Part[$CellContext`fitnessFront, 
                  Last[$CellContext`order]], $CellContext`k] - Part[
                Part[$CellContext`fitnessFront, 
                 First[$CellContext`order]], $CellContext`k]; 
             For[$CellContext`i = 2, $CellContext`i < $CellContext`nSolutions, 
               Increment[$CellContext`i], 
               If[$CellContext`diff != 0, 
                AddTo[
                 Part[$CellContext`distances, 
                  Part[$CellContext`order, $CellContext`i]], (Part[
                    Part[$CellContext`fitnessFront, 
                    
                    Part[$CellContext`order, $CellContext`i + 
                    1]], $CellContext`k] - Part[
                   Part[$CellContext`fitnessFront, 
                    
                    Part[$CellContext`order, $CellContext`i - 
                    1]], $CellContext`k])/$CellContext`diff], 
                AddTo[
                 Part[$CellContext`distances, 
                  Part[$CellContext`order, $CellContext`i]], Infinity]]]; 
             Null]; Return[
             Flatten[$CellContext`distances]]], $CellContext`calcRankAndCD[
           Pattern[$CellContext`pop, 
            Blank[List]]] := 
         Module[{$CellContext`rank, $CellContext`distances, \
$CellContext`nFronts, $CellContext`nIndividuals, $CellContext`distancesFront, \
$CellContext`fronts}, $CellContext`fronts = \
$CellContext`fastNondominatedSort[$CellContext`pop]; $CellContext`nFronts = 
            Length[$CellContext`fronts]; $CellContext`nIndividuals = Length[
              Flatten[$CellContext`fronts]]; $CellContext`distancesFront = 
            Map[$CellContext`calcCrowdedDistance[
               Part[
                
                Part[$CellContext`pop, All, 
                 2], #]]& , $CellContext`fronts]; $CellContext`rank = 
            Table[0, {$CellContext`nIndividuals}]; $CellContext`distances = 
            Table[0, {$CellContext`nIndividuals}]; 
           For[$CellContext`i = 1, $CellContext`i <= $CellContext`nFronts, 
             Increment[$CellContext`i], Part[$CellContext`rank, 
                Part[$CellContext`fronts, $CellContext`i]] = $CellContext`i; 
             Part[$CellContext`distances, 
                Part[$CellContext`fronts, $CellContext`i]] = 
              Part[$CellContext`distancesFront, $CellContext`i]]; Return[
             Transpose[{$CellContext`rank, 
               Flatten[$CellContext`distances]}]]], $CellContext`cdOperator[{
            Pattern[$CellContext`rank1, 
             Blank[]], 
            Pattern[$CellContext`cd1, 
             Blank[]]}, {
            Pattern[$CellContext`rank2, 
             Blank[]], 
            Pattern[$CellContext`cd2, 
             Blank[]]}] := If[
           Or[$CellContext`rank1 < $CellContext`rank2, 
            
            And[$CellContext`rank1 == $CellContext`rank2, $CellContext`cd1 > \
$CellContext`cd2]], True, False], $CellContext`matingSelection[
           Pattern[$CellContext`pop, 
            Blank[]], 
           Pattern[$CellContext`nOffspring, 
            Blank[]]] := 
         Module[{$CellContext`fronts, $CellContext`rankAndCD, \
$CellContext`indexPair, $CellContext`index}, $CellContext`rankAndCD = \
$CellContext`calcRankAndCD[$CellContext`pop]; $CellContext`index = 
            Table[$CellContext`indexPair = RandomSample[
                 Range[1, 
                  Length[$CellContext`pop]], 2]; If[
                $CellContext`cdOperator[
                 Part[$CellContext`rankAndCD, 
                  First[$CellContext`indexPair]], 
                 Part[$CellContext`rankAndCD, 
                  Last[$CellContext`indexPair]]], 
                First[$CellContext`indexPair], 
                Last[$CellContext`indexPair]], {$CellContext`nOffspring}]; 
           Return[
             
             Part[$CellContext`pop, $CellContext`index]]], \
$CellContext`survivorSelection[
           Pattern[$CellContext`pop, 
            Blank[]], 
           Pattern[$CellContext`nOffspring, 
            Blank[]]] := 
         Module[{$CellContext`fronts, $CellContext`rankAndCD, \
$CellContext`crowdedDistance, $CellContext`frontSize, $CellContext`tmpPop}, \
$CellContext`rankAndCD = $CellContext`calcRankAndCD[$CellContext`pop]; \
$CellContext`frontSize = Count[$CellContext`rankAndCD, {1, 
               Blank[]}]; $CellContext`tmpPop = Part[$CellContext`pop, 
              
              Ordering[$CellContext`rankAndCD, $CellContext`nOffspring, \
$CellContext`cdOperator[#, #2]& ]]; $CellContext`tmpPop], \
$CellContext`survivorSelection[
           Pattern[$CellContext`pop, 
            Blank[]], 
           Pattern[$CellContext`nOffspring, 
            Blank[]]] := 
         Module[{$CellContext`fronts, $CellContext`rankAndCD, \
$CellContext`crowdedDistance, $CellContext`frontSize, $CellContext`tmpPop}, \
$CellContext`rankAndCD = $CellContext`calcRankAndCD[$CellContext`pop]; \
$CellContext`frontSize = Min[
              Count[$CellContext`rankAndCD, {1, 
                Blank[]}], $CellContext`nOffspring]; $CellContext`tmpPop = 
            Part[$CellContext`pop, 
              
              Ordering[$CellContext`rankAndCD, $CellContext`nOffspring, \
$CellContext`cdOperator[#, #2]& ]]; {
             Take[$CellContext`tmpPop, $CellContext`frontSize], 
             
             Drop[$CellContext`tmpPop, $CellContext`frontSize]}], \
$CellContext`decodeBinaryChromosome[
           Pattern[$CellContext`binaryChrom, 
            Blank[List]], {
            Pattern[$CellContext`rangeMin, 
             Blank[]], 
            Pattern[$CellContext`rangeMax, 
             Blank[]]}, 
           Pattern[$CellContext`useGray, 
            Blank[]]] := 
         Module[{$CellContext`binaryNumber, $CellContext`stepSize}, \
$CellContext`stepSize = ($CellContext`rangeMax - $CellContext`rangeMin)/(
             2^Length[$CellContext`binaryChrom] - 1); 
           If[$CellContext`useGray, $CellContext`binaryNumber = 
             FoldList[Mod[# + #2, 2]& , 
               First[$CellContext`binaryChrom], 
               
               Rest[$CellContext`binaryChrom]], $CellContext`binaryNumber = \
$CellContext`binaryChrom]; 
           N[$CellContext`rangeMin + 
             FromDigits[$CellContext`binaryNumber, 
                2] $CellContext`stepSize]], $CellContext`mutateChromosome[
            Pattern[$CellContext`chrom, 
             Blank[]], 
            Pattern[$CellContext`mutationRate, 
             Blank[]]] := 
          Map[If[RandomReal[] <= $CellContext`mutationRate, 
             1 - #, #]& , $CellContext`chrom]; 
         Null, $CellContext`mutatePopulation[
           Pattern[$CellContext`binaryPop, 
            Blank[]], 
           Pattern[$CellContext`mutationRate, 
            Blank[]]] := Map[{
            $CellContext`mutateChromosome[
             First[#], $CellContext`mutationRate], 
            Null}& , $CellContext`binaryPop], \
$CellContext`recombinateChromosomes[
           Pattern[$CellContext`chrom1, 
            Blank[]], 
           Pattern[$CellContext`chrom2, 
            Blank[]]] := 
         Module[{$CellContext`cut}, $CellContext`cut = RandomInteger[{1, 
               Length[$CellContext`chrom1]}]; {
             Join[
              Take[$CellContext`chrom1, $CellContext`cut], 
              Drop[$CellContext`chrom2, $CellContext`cut]], 
             Join[
              Take[$CellContext`chrom2, $CellContext`cut], 
              
              Drop[$CellContext`chrom1, $CellContext`cut]]}], \
$CellContext`recombinatePopulation[
           Pattern[$CellContext`binaryPop, 
            Blank[]], 
           Pattern[$CellContext`recombinationRate, 
            Blank[]]] := 
         Module[{$CellContext`pairedPop, $CellContext`recombinatedChroms}, \
$CellContext`pairedPop = Partition[
              RandomSample[$CellContext`binaryPop], 2, 2, 1, {
               
               Last[$CellContext`binaryPop]}]; \
$CellContext`recombinatedChroms = (Flatten[#, 1]& )[
              Map[If[RandomReal[] <= $CellContext`recombinationRate, 
                $CellContext`recombinateChromosomes[
                 First[
                  Part[#, 1]], 
                 First[
                  Part[#, 2]]], {
                 First[
                  Part[#, 1]], 
                 First[
                  Part[#, 2]]}]& , $CellContext`pairedPop]]; 
           Map[{#, Null}& , $CellContext`recombinatedChroms]], \
$CellContext`assignFitness[
           Pattern[$CellContext`pop, 
            Blank[]], 
           Pattern[$CellContext`GPMap, 
            Blank[]], {
            Pattern[$CellContext`f1, 
             Blank[]], 
            Pattern[$CellContext`f2, 
             Blank[]]}] := Map[{#, {
             $CellContext`f1[
              $CellContext`GPMap[#]], 
             $CellContext`f2[
              $CellContext`GPMap[#]]}}& , 
           Part[$CellContext`pop, All, 1]], $CellContext`initPopulationFitness[
           Pattern[$CellContext`popSize, 
            Blank[]], 
           Pattern[$CellContext`indLength, 
            Blank[]], 
           Pattern[$CellContext`GPMap, 
            Blank[]], {
            Pattern[$CellContext`f1, 
             Blank[]], 
            Pattern[$CellContext`f2, 
             Blank[]]}] := 
         Module[{$CellContext`pop}, $CellContext`pop = Table[{
               RandomChoice[{0, 1}, $CellContext`indLength], 
               Null}, {$CellContext`popSize}]; \
$CellContext`assignFitness[$CellContext`pop, $CellContext`GPMap, \
{$CellContext`f1, $CellContext`f2}]], $CellContext`evolvePop[
           Pattern[$CellContext`pop, 
            Blank[]], 
           Pattern[$CellContext`popSize, 
            Blank[]], 
           Pattern[$CellContext`recombinationProb, 
            Blank[]], 
           Pattern[$CellContext`mutationProb, 
            Blank[]], 
           Pattern[$CellContext`GPMap, 
            Blank[]], {
            Pattern[$CellContext`f1, 
             Blank[]], 
            Pattern[$CellContext`f2, 
             Blank[]]}] := 
         Module[{$CellContext`offspring, $CellContext`combinedPop, \
$CellContext`front, $CellContext`rest}, $CellContext`offspring = \
$CellContext`matingSelection[$CellContext`pop, $CellContext`popSize]; \
$CellContext`offspring = \
$CellContext`recombinatePopulation[$CellContext`offspring, \
$CellContext`recombinationProb]; $CellContext`offspring = \
$CellContext`mutatePopulation[$CellContext`offspring, \
$CellContext`mutationProb]; $CellContext`offspring = \
$CellContext`assignFitness[$CellContext`offspring, $CellContext`GPMap, \
{$CellContext`f1, $CellContext`f2}]; $CellContext`combinedPop = 
            Join[$CellContext`pop, $CellContext`offspring]; \
$CellContext`survivorSelection[$CellContext`combinedPop, \
$CellContext`popSize]], Null, $CellContext`visualizePop[{
            Pattern[$CellContext`front, 
             Blank[]], 
            Pattern[$CellContext`rest, 
             Blank[]]}, 
           Pattern[$CellContext`zoom, 
            Blank[]], 
           Pattern[$CellContext`generation, 
            Blank[]], 
           Pattern[$CellContext`visPareto, 
            Blank[]]] := 
         Module[{$CellContext`data2D, $CellContext`data3D, \
$CellContext`sFront, $CellContext`visFront, $CellContext`plotRange2D, \
$CellContext`plotRange3D}, $CellContext`sFront = Sort[
              Part[$CellContext`front, All, 2]]; $CellContext`visFront = (
             FlattenAt[#, 2]& )[{{
                First[
                 First[$CellContext`sFront]], 100}, $CellContext`sFront, {100, 
                Last[
                 Last[$CellContext`sFront]]}}]; $CellContext`plotRange3D = 
            If[$CellContext`zoom, {{-1.5, 0}, {-1.25, 0.25}, {-1.25, 
               0.25}}, {{5, -5}, {5, -5}, {5, -5}}]; $CellContext`plotRange2D = 
            If[$CellContext`zoom, {{-20.5, -14}, {-13, 
               1}}, {{-20.5, -8}, {-13.5, 15}}]; 
           If[$CellContext`rest != {}, $CellContext`data2D = {
                Part[$CellContext`rest, All, 2], 
                Part[$CellContext`front, All, 2]}; $CellContext`data3D = {
                Map[$CellContext`GPMap, 
                 Part[$CellContext`front, All, 1]], 
                Map[$CellContext`GPMap, 
                 Part[$CellContext`rest, All, 1]]}, $CellContext`data2D = 
              Part[$CellContext`front, All, 2]; $CellContext`data3D = 
              Map[$CellContext`GPMap, 
                Part[$CellContext`front, All, 1]]]; (Labeled[#, 
             Style[
              Style[
               StringJoin["Generation ", 
                ToString[$CellContext`generation]], "Label", Bold]], Top]& )[
             Grid[{{
                If[$CellContext`visPareto, 
                 Show[
                  
                  ListPlot[$CellContext`data2D, 
                   PlotRange -> $CellContext`plotRange2D, 
                   PlotStyle -> {Red, Green}, Frame -> True, 
                   AxesOrigin -> {-20.5, -14}, PlotLabel -> 
                   Style["Objective Space", "Label"], 
                   FrameLabel -> {
                    "minimize \!\(\*SubscriptBox[\(f\), \(1\)]\)", 
                    "minimize \!\(\*SubscriptBox[\(f\), \(2\)]\)" 
                    TextCell[""]}], 
                  
                  ListLinePlot[$CellContext`visFront, InterpolationOrder -> 0,
                    Filling -> Top, PlotRange -> $CellContext`plotRange2D], 
                  ImageSize -> {290, 200}, 
                  ImagePadding -> {{45, 10}, {35, 10}}], 
                 
                 ListPlot[$CellContext`data2D, 
                  PlotRange -> $CellContext`plotRange2D, Frame -> True, 
                  AxesOrigin -> {-20.5, -14}, PlotStyle -> {Red, Green}, 
                  PlotLabel -> Style["Objective Space", "Label"], 
                  FrameLabel -> {
                   "minimize \!\(\*SubscriptBox[\(f\), \(1\)]\)", 
                    "minimize \!\(\*SubscriptBox[\(f\), \(2\)]\)" 
                    TextCell[""]}, ImageSize -> {290, 200}, 
                  ImagePadding -> {{45, 10}, {35, 10}}]], 
                
                ListPointPlot3D[$CellContext`data3D, 
                 PlotRange -> $CellContext`plotRange3D, 
                 PlotStyle -> {Green, Red}, PlotLabel -> 
                 Style["Decision Space", "Label"], BoxRatios -> {1, 1, 1}, 
                 AxesLabel -> {
                   TextCell[
                    RawBoxes[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["x", "1"], TraditionalForm]]]]], 
                   TextCell[
                    RawBoxes[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["x", "2"], TraditionalForm]]]]], 
                   TextCell[
                    RawBoxes[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["x", "3"], TraditionalForm]]]]]}, 
                 ImageSize -> {290, 200}, ImagePadding -> 
                 25]}}]]], $CellContext`individualSize = 60; 
         Null, $CellContext`GPMap[
            Pattern[$CellContext`x, 
             Blank[List]]] := 
          Map[$CellContext`decodeBinaryChromosome[#, {-5, 5}, True]& , 
            Partition[$CellContext`x, 20, 20]]; Null, $CellContext`f1[
            Pattern[$CellContext`x, 
             Blank[]]] := N[
            
            Sum[(-10) 
             Exp[(-0.2) 
               Sqrt[Part[$CellContext`x, $CellContext`i]^2 + 
                 Part[$CellContext`x, $CellContext`i + 
                    1]^2]], {$CellContext`i, 1, 2}]]; Null, $CellContext`f2[
            Pattern[$CellContext`x, 
             Blank[]]] := N[
            Sum[
            Abs[Part[$CellContext`x, $CellContext`i]^0.8] + 
             5 Sin[Part[$CellContext`x, $CellContext`i]^3], {$CellContext`i, 
              1, 3}]]; Null, $CellContext`dominates[{
            Pattern[$CellContext`c1, 
             Blank[]], 
            Pattern[$CellContext`f1, 
             Blank[]]}, {
            Pattern[$CellContext`c2, 
             Blank[]], 
            Pattern[$CellContext`f2, 
             Blank[]]}] := And[
           Apply[And, 
            Thread[$CellContext`f1 <= $CellContext`f2]], 
           Apply[Or, 
            Thread[$CellContext`f1 < $CellContext`f2]]]}]]; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->247023153],

Cell[CellGroupData[{

Cell["CAPTION", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell["\<\
Optimization problems with multiple, often conflicting, objectives arise in a \
natural fashion in most real-world applications, such as aerodynamic design, \
financial decision making, and electronic circuit development. An important \
task in multiobjective optimization is to identify a set of optimal trade-off \
solutions (called a Pareto set) between the conflicting objectives, which \
helps gain a better understanding of the problem structure and supports the \
decision-maker in choosing the best compromise solution for the considered \
problem. \
\>", "Text"]
}, Close]]
}, Open  ]],

Cell["\<\
Evolutionary algorithms are particular suited for approximating the entire \
Pareto set because they work with a population of solutions rather than a \
single solution candidate. This enables approximating several members of the \
Pareto set simultaneously in a single algorithm run.\
\>", "Text"],

Cell["\<\
This Demonstration shows how an evolutionary multiobjective optimization \
algorithm (NSGA-II) approximates the Pareto set of Kursawe's two-objective \
optimization problem, which has a nonconvex, disconnected two-dimensional \
Pareto front and a disconnected three-dimensional Pareto set.\
\>", "Text"],

Cell[TextData[{
 "In each generation, all solution candidates are represented as decision \
vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    StyleBox["=",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["x", "3"]}], ")"}], "T"]}], TraditionalForm]], 
  "InlineMath"],
 " in decision space (where the evolutionary search takes place) and as \
objective vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["f",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Bold"], "(", 
     StyleBox["x",
      FontFamily->"Times New Roman",
      FontSize->12,
      FontWeight->"Bold"], ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "1"], "(", 
        StyleBox["x",
         FontFamily->"Times New Roman",
         FontSize->12,
         FontWeight->"Bold"], ")"}], ",", " ", 
       RowBox[{
        SubscriptBox["f", "2"], "(", 
        StyleBox["x",
         FontFamily->"Times New Roman",
         FontSize->12,
         FontWeight->"Bold"], ")"}]}], ")"}], "T"]}], TraditionalForm]], 
  "InlineMath"],
 " in objective space. Since the quality of a candidate solution is evaluated \
as a vector rather than a scalar, the concept of Pareto dominance is used to \
compare the quality of the solutions: The solution ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    RowBox[{"(", "1", ")"}]], TraditionalForm]], "InlineMath"],
 " is said to dominate another solution ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    RowBox[{"(", "2", ")"}]], TraditionalForm]], "InlineMath"],
 " if ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    RowBox[{"(", "1", ")"}]], TraditionalForm]], "InlineMath"],
 " is not worse than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    RowBox[{"(", "2", ")"}]], TraditionalForm]], "InlineMath"],
 " in all objectives, and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    RowBox[{"(", "1", ")"}]], TraditionalForm]], "InlineMath"],
 " is strictly better than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["x",
     FontFamily->"Times New Roman",
     FontSize->12,
     FontWeight->"Bold"], 
    RowBox[{"(", "2", ")"}]], TraditionalForm]], "InlineMath"],
 " in at least one objective."
}], "Text"],

Cell["\<\
In each generation, all solutions that are not dominated by any other are \
called nondominated solutions. These solutions form the current approximation \
of the Pareto set and are marked green. In objective space, the image of the \
nondominated solutions is called the Pareto front approximation.\
\>", "Text"],

Cell[CellGroupData[{

Cell["DETAILS", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "The Nondominated Sorting Genetic Algorithm II (NSGA-II) by Kalyanmoy Deb et \
al. is an elitist multiobjective evolutionary algorithm with time complexity \
of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"m", " ", 
     SuperscriptBox["n", "2"]}], ")"}], TraditionalForm]], "InlineMath"],
 " in generating nondominated fronts in one generation for population size ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath"],
 " objective functions. For more details see K. Deb, A. Pratap, S. Agarwal, \
T. Meyarivan, \"A Fast and Elitist Multiobjective Genetic Algorithm: NSGA-II,\
\" ",
 StyleBox["IEEE Transactions on Evolutionary Computation",
  FontSlant->"Italic"],
 ",",
 StyleBox[" 6",
  FontWeight->"Bold"],
 "(2), 2002 pp. 181\[Dash]197."
}], "Text"],

Cell[TextData[{
 "For more details on Kursawe's multiobjective test problem see F. Kursawe, \
\"A Variant of Evolution Strategies for Vector Optimization,\" in ",
 StyleBox["Parallel Problem Solving for Nature I (PPSN-I), ",
  FontSlant->"Italic"],
 "1990 pp. 193\[Dash]197."
}], "Text"],

Cell["\<\
Snapshot 1: randomly initialized population; nondominated solutions are \
marked green\
\>", "Text"],

Cell["\<\
Snapshot 2: the attainments surface represents the family of tightest \
objective vectors that are known to be attainable as a result of the current \
approximation of the Pareto front\
\>", "Text"],

Cell["\<\
Snapshot 3: approximated Pareto set and front of the Kursawe test function \
after 100 generations. The approximated Pareto set consists of several \
disconnected and asymmetric areas in decision space. The corresponding Pareto \
front is non-connected as well and has a partial convex and concave shape.\
\>", "Text"]
}, Close]],

Cell[CellGroupData[{

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "\"",
 ButtonBox["Evolutionary Multiobjective Optimization",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
EvolutionaryMultiobjectiveOptimization/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/EvolutionaryMultiobjectiveOptimization/\
"],
 "\"",
 " from ",
 ButtonBox["the Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/\
EvolutionaryMultiobjectiveOptimization/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
EvolutionaryMultiobjectiveOptimization/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/EvolutionaryMultiobjectiveOptimization/"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Robin Gruna",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Robin+Gruna"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Robin+Gruna"]
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6],
 CellID->109112612],

Cell["After work by: Kalyanmoy Deb, et. al.", "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6],
 CellID->256123703]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system (Version 6 or higher) is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[1, 1, 1]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
EvolutionaryMultiobjectiveOptimization"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{780, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Evolutionary Multiobjective Optimization - Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[642, 23, 160, 3, 70, "Section"],
Cell[805, 28, 3700, 64, 70, "Section"],
Cell[4508, 94, 6622, 143, 70, "Input",
 InitializationCell->True,
 CellID->308682082],
Cell[11133, 239, 1899, 46, 70, "Input",
 InitializationCell->True,
 CellID->314260914],
Cell[13035, 287, 1160, 31, 70, "Input",
 InitializationCell->True,
 CellID->11645800],
Cell[14198, 320, 6589, 150, 70, "Input",
 InitializationCell->True,
 CellID->289566058],
Cell[20790, 472, 4301, 97, 70, "Input",
 InitializationCell->True,
 CellID->1031917645],
Cell[25094, 571, 1092, 27, 70, "Input",
 InitializationCell->True,
 CellID->212471774],
Cell[26189, 600, 3691, 77, 70, "Input",
 InitializationCell->True,
 CellID->117162475],
Cell[29883, 679, 2445, 56, 70, "Input",
 InitializationCell->True,
 CellID->357352201],
Cell[32331, 737, 2839, 65, 70, "Input",
 InitializationCell->True,
 CellID->14582004],
Cell[35173, 804, 2206, 53, 70, "Input",
 InitializationCell->True,
 CellID->405448602],
Cell[37382, 859, 814, 20, 70, "Input",
 InitializationCell->True,
 CellID->200309014],
Cell[38199, 881, 729, 19, 70, "Input",
 InitializationCell->True,
 CellID->121157071],
Cell[38931, 902, 1185, 33, 70, "Input",
 InitializationCell->True,
 CellID->776876519],
Cell[40119, 937, 3141, 74, 70, "Input",
 InitializationCell->True,
 CellID->122963231],
Cell[43263, 1013, 2544, 49, 70, "Input",
 InitializationCell->True,
 CellID->330418372],
Cell[45810, 1064, 1151, 31, 70, "Input",
 InitializationCell->True,
 CellID->244471463],
Cell[46964, 1097, 2172, 48, 70, "Input",
 InitializationCell->True,
 CellID->2632706],
Cell[49139, 1147, 228, 6, 70, "Input",
 InitializationCell->True,
 CellID->388018442],
Cell[49370, 1155, 14337, 315, 70, "Input",
 InitializationCell->True,
 CellID->3707430],
Cell[63710, 1472, 363, 8, 70, "Input",
 InitializationCell->True,
 CellID->106373727],
Cell[64076, 1482, 815, 20, 70, "Input",
 InitializationCell->True,
 CellID->4230129],
Cell[64894, 1504, 1251, 33, 70, "Input",
 InitializationCell->True,
 CellID->611766213],
Cell[66148, 1539, 1476, 34, 70, "Input",
 InitializationCell->True,
 CellID->232722979],
Cell[67627, 1575, 1261, 28, 70, "Input",
 InitializationCell->True,
 CellID->243264474],
Cell[68891, 1605, 7599, 193, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76527, 1803, 153111, 2402, 70, "Output",
 CellID->247023153],
Cell[CellGroupData[{
Cell[229663, 4209, 209, 6, 70, "Section"],
Cell[229875, 4217, 581, 9, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[230482, 4230, 308, 5, 70, "Text"],
Cell[230793, 4237, 313, 5, 70, "Text"],
Cell[231109, 4244, 3038, 108, 70, "Text"],
Cell[234150, 4354, 323, 5, 70, "Text"],
Cell[CellGroupData[{
Cell[234498, 4363, 209, 6, 70, "Section"],
Cell[234710, 4371, 876, 24, 70, "Text"],
Cell[235589, 4397, 287, 6, 70, "Text"],
Cell[235879, 4405, 110, 3, 70, "Text"],
Cell[235992, 4410, 208, 4, 70, "Text"],
Cell[236203, 4416, 328, 5, 70, "Text"]
}, Close]],
Cell[CellGroupData[{
Cell[236567, 4426, 355, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[236925, 4437, 1023, 30, 70, "Text"],
Cell[CellGroupData[{
Cell[237973, 4471, 450, 15, 70, "Text",
 CellID->109112612],
Cell[238426, 4488, 212, 6, 70, "Text",
 CellID->256123703]
}, Open  ]],
Cell[CellGroupData[{
Cell[238675, 4499, 815, 24, 70, "Text"],
Cell[239493, 4525, 1210, 33, 70, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature yRjEJi7WHVE5RB06sJY@#Go4 *)
