(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     57237,       1356]
NotebookOptionsPosition[     55725,       1300]
NotebookOutlinePosition[     56396,       1325]
CellTagsIndexPosition[     56353,       1322]
WindowTitle->Maximum Likelihood Estimators for Binary Outcomes - Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Maximum Likelihood Estimators for Binary Outcomes", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
FP/69esnAAAAAAAAAAAAwM74B4thROM=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pts", "=", 
        RowBox[{"mypts", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"is", "=", "320"}], ",", "\[ScriptL]"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[ScriptL]", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"pt", ",", 
           RowBox[{"likelihood", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"PDF", "[", 
               RowBox[{
                RowBox[{"BinomialDistribution", "[", 
                 RowBox[{"1", ",", "#1"}], "]"}], ",", "#2"}], "]"}], "&"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"pt", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"Switch", "[", 
              RowBox[{"model", ",", "\"\<logit\>\"", ",", 
               RowBox[{
                RowBox[{"CDF", "[", 
                 RowBox[{
                  RowBox[{"LogisticDistribution", "[", 
                   RowBox[{"0", ",", "1"}], "]"}], ",", "#"}], "]"}], "&"}], 
               ",", "\"\<probit\>\"", ",", 
               RowBox[{
                RowBox[{"CDF", "[", 
                 RowBox[{
                  RowBox[{"NormalDistribution", "[", 
                   RowBox[{"0", ",", "1"}], "]"}], ",", "#"}], "]"}], "&"}]}],
               "]"}], ",", 
             RowBox[{"pt", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], ",", "pts"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pane", "[", 
       RowBox[{
        RowBox[{"Grid", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Graphics3D", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"(*", 
                RowBox[{"regression", " ", "line"}], "*)"}], 
               RowBox[{
                RowBox[{
                 RowBox[{"ParametricPlot3D", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{"model", ",", "\"\<logit\>\"", ",", 
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"LogisticDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ".", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "x"}], "}"}]}]}], "]"}], ",", 
                    "\"\<probit\>\"", ",", 
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ".", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "x"}], "}"}]}]}], "]"}]}], "]"}], ",", 
                    "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"First", "/@", "pts"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"First", "/@", "pts"}], "]"}]}], "}"}], ",", 
                   RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "0.01"}], "}"}], "]"}], ",", 
                    "Orange"}], "}"}], "}"}]}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "probability", " ", "points", " ", "and", " ", "lines"}], 
                 "*)"}], 
                RowBox[{"MapIndexed", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"pt", ",", "ptindex"}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"q", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ".", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"pt", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], ",", 
                    RowBox[{"pti", "=", 
                    RowBox[{"First", "@", "ptindex"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"(*", "points", "*)"}], 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "1", "]"}], "[", "pti", "]"}], 
                    ",", "0.5"}], "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{"pt", ",", "0"}], "]"}], "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "1", "]"}], "[", "pti", "]"}], 
                    ",", "0.5"}], "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{"pt", ",", 
                    RowBox[{"\[ScriptL]", "[", 
                    RowBox[{"[", "pti", "]"}], "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"pt", ",", "0"}], "]"}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"pt", ",", 
                    RowBox[{"\[ScriptL]", "[", 
                    RowBox[{"[", "pti", "]"}], "]"}]}], "]"}]}], "}"}], 
                    "]"}]}], "}"}]}], "]"}]}], "]"}], ",", "pts"}], "]"}]}], 
               "}"}], ",", 
              RowBox[{"BoxRatios", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.1"}], ",", "1.1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<x\>\"", ",", "\"\<y\>\"", ",", 
                 "\"\<P(Y| \[Alpha], \[Beta]) \>\""}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "is"}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"MapIndexed", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "1", "]"}], "[", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"-", "500000"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "0"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"-", "500000"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "1"}], 
                    "}"}]}], "]"}]}], "}"}], "&"}], ",", 
                 RowBox[{"Partition", "[", 
                  RowBox[{
                   RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"Log", ",", "\[ScriptL]"}], "]"}], "]"}], ",", 
                    "0"}], "]"}], ",", "2", ",", "1"}], "]"}]}], "]"}], "}"}],
               ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"If", "[", 
                RowBox[{"sa", ",", 
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"best", "=", 
                    RowBox[{"mle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BinomialDistribution", "[", 
                    RowBox[{"1", ",", "#1"}], "]"}], "&"}], ",", "pts", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "x"}], "}"}], ",", 
                    RowBox[{"{", "x", "}"}], ",", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    "model", ",", "\"\<logit\>\"", ",", "logit", ",", 
                    "\"\<probit\>\"", ",", "probit"}], "]"}], ",", 
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    "methodology", ",", "\"\<sum of log likelihoods\>\"", 
                    ",", "\"\<glmFit\>\"", ",", "_", ",", 
                    "\"\<NMaximize\>\""}], "]"}]}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\""}], 
                    "}"}], ",", "best"}], "]"}], "]"}], ",", 
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"Switch", "[", 
                    RowBox[{"model", ",", "\"\<logit\>\"", ",", 
                    RowBox[{"LogisticDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", "\"\<probit\>\"", 
                    ",", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "x"}], "}"}], ".", "best"}]}], "]"}]}], 
                    "}"}]}], "]"}], ",", "\"\<\>\""}], "]"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "is"}], ",", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{
               "{", "\"\<sum of the logs of the likelihoods\>\"", "}"}]}], 
              ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"plotrange", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", 
               RowBox[{"1", "/", "20"}]}]}], "]"}], "}"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"320", ",", "400"}], "}"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"-", "2"}], ",", "\"\<\[Alpha] parameter\>\""}], "}"}], ",", 
     RowBox[{"-", "20"}], ",", "20", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "2", ",", "\"\<\[Beta] parameter\>\""}], "}"}], 
     ",", 
     RowBox[{"-", "20"}], ",", "20", ",", ".01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"model", ",", "\"\<logit\>\"", ",", "\"\<model\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\"\<logit\>\"", ",", "\"\<probit\>\""}], "}"}]}], "}"}], ",", 
   "Delimiter", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "\"\<dataset index\>\""}], "}"}], ",", "1", 
     ",", 
     RowBox[{"Dynamic", "[", 
      RowBox[{
       RowBox[{"Length", "[", "mypts", "]"}], ",", 
       RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}], ",", "1",
      ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", "Delimiter", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotrange", ",", 
       RowBox[{"-", "100"}], ",", "\"\<Min \[CapitalSigma] Log[L]\>\""}], 
      "}"}], ",", 
     RowBox[{"-", "500"}], ",", 
     RowBox[{"-", "0.001"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], ",", "Delimiter", ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sa", ",", "False", ",", "\"\<display MLE\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "methodology", ",", "\"\<sum of log likelihoods\>\"", ",", 
       "\"\<methodology\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<sum of log likelihoods\>\"", ",", "\"\<WLS\>\""}], "}"}]}],
     "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
     "\[Alpha]", ",", "\[Beta]", ",", "model", ",", "i", ",", "plotrange", 
      ",", "sa", ",", "methodology"}], "}"}]}], ",", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "50807", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"mypts", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Alpha]", "=", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}], ",", 
               RowBox[{"\[Beta]", "=", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "2"}], ",", "2"}], "}"}], "]"}]}]}], "}"}], 
             ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"r", "=", 
                   RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", 
                   RowBox[{"RandomChoice", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", 
                    RowBox[{"\[Alpha]", "+", 
                    RowBox[{"\[Beta]", " ", "r"}]}]}], "]"}], ",", 
                    RowBox[{"1", "-", 
                    RowBox[{"CDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", "1"}], "]"}], ",", 
                    RowBox[{"\[Alpha]", "+", 
                    RowBox[{"\[Beta]", " ", "r"}]}]}], "]"}]}]}], "}"}], 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], "]"}],
                ",", 
               RowBox[{"{", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"30", ",", "40"}], "}"}], "]"}], "}"}]}], "]"}]}], 
            "]"}], ",", 
           RowBox[{"{", "10", "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_", ",", "0"}], "}"}], ".."}], "}"}], "|", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_", ",", "1"}], "}"}], ".."}], "}"}]}]}], "]"}]}], ";", 
      
      RowBox[{
       RowBox[{"logit", "[", "x_", "]"}], "=", 
       RowBox[{"Log", "[", 
        RowBox[{"x", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"probit", "[", "x_", "]"}], "=", 
       RowBox[{"Quantile", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"likelihood", "[", 
        RowBox[{
        "errorDensityFunction_", ",", "beta_", ",", "basis_", ",", 
         "modelFunction_", ",", "resp_"}], "]"}], ":=", 
       RowBox[{"errorDensityFunction", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p", "=", 
             RowBox[{"beta", ".", "basis"}]}], "}"}], ",", 
           RowBox[{"modelFunction", "[", "p", "]"}]}], "]"}], ",", "resp"}], 
        "]"}]}], ";", 
      RowBox[{
       RowBox[{"loglikelihood", "[", 
        RowBox[{
        "errorDensityFunction_", ",", "beta_", ",", "basis_", ",", 
         "modelFunction_", ",", "resp_"}], "]"}], ":=", 
       RowBox[{"Log", "[", 
        RowBox[{"likelihood", "[", 
         RowBox[{
         "errorDensityFunction", ",", "beta", ",", "basis", ",", 
          "modelFunction", ",", "resp"}], "]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"likelihoodLines", "[", 
        RowBox[{
        "errorDensityFunction_", ",", "beta_", ",", "basis_", ",", 
         "modelFunction_", ",", "resp_"}], "]"}], ":=", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"basis", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "resp", ",", "0"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"basis", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "resp", ",", 
            RowBox[{"likelihood", "[", 
             RowBox[{
             "errorDensityFunction", ",", "beta", ",", "basis", ",", 
              "modelFunction", ",", "resp"}], "]"}]}], "}"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mle", "[", 
        RowBox[{
        "errorDistribution_", ",", "data_", ",", "basis_", ",", "vars_", ",", 
         "link_", ",", 
         RowBox[{"OptionsPattern", "[", 
          RowBox[{"{", 
           RowBox[{"Method", "\[Rule]", "\"\<NMaximize\>\""}], "}"}], "]"}]}],
         "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "xmat", ",", "response", ",", "start", ",", "step", ",", "chi", ",",
            "invlink", ",", "partder", ",", "wtfun"}], "}"}], ",", 
         RowBox[{
          RowBox[{"invlink", "=", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{
                 RowBox[{"link", "[", "#", "]"}], ",", 
                 RowBox[{"#", "|", 
                  RowBox[{"#", "^", "_"}]}]}], "]"}], ",", 
               RowBox[{"(", 
                RowBox[{"#", "^", 
                 RowBox[{"(", 
                  RowBox[{"1", "/", 
                   RowBox[{"Exponent", "[", 
                    RowBox[{
                    RowBox[{"link", "[", "#", "]"}], ",", "#"}], "]"}]}], 
                  ")"}]}], ")"}], ",", 
               RowBox[{"Simplify", "[", 
                RowBox[{"mu", "/.", 
                 RowBox[{"Quiet", "[", 
                  RowBox[{
                   RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"link", "[", "mu", "]"}], "\[Equal]", "#"}], ",", 
                    
                    RowBox[{"{", "mu", "}"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], 
             "]"}], "&"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xmat", "=", 
           RowBox[{"DesignMatrix", "[", 
            RowBox[{"data", ",", "basis", ",", "vars", ",", 
             RowBox[{"IncludeConstantBasis", "\[Rule]", "False"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"chi", "=", 
           RowBox[{"Array", "[", 
            RowBox[{"\[Chi]", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "xmat", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"response", "=", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "Method", "]"}], ",", 
            "\"\<NMaximize\>\"", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"t", "=", 
               RowBox[{"Total", "[", 
                RowBox[{"MapThread", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"datum", ",", "resp"}], "}"}], ",", 
                    RowBox[{"loglikelihood", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"errorDistribution", "[", "#1", "]"}], ",", 
                    "#2"}], "]"}], "&"}], ",", "chi", ",", "datum", ",", 
                    "invlink", ",", "resp"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"xmat", ",", "response"}], "}"}]}], "]"}], "]"}]}],
               ";", "\[IndentingNewLine]", 
              RowBox[{"chi", "/.", 
               RowBox[{"Last", "[", 
                RowBox[{"NMaximize", "[", 
                 RowBox[{"t", ",", "chi"}], "]"}], "]"}]}]}], ")"}], ",", 
            "\"\<glmFit\>\"", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"model", "===", "\"\<logit\>\""}], ",", 
               RowBox[{"LogitModelFit", "[", 
                RowBox[{"data", ",", "basis", ",", "vars"}], "]"}], ",", 
               RowBox[{"ProbitModelFit", "[", 
                RowBox[{"data", ",", "basis", ",", "vars"}], "]"}]}], "]"}], 
             "[", "\"\<BestFitParameters\>\"", "]"}], ",", "_", ",", 
            "\"\<not supported\>\""}], "]"}]}]}], "]"}]}], ";"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.3876242624075127`*^9, 3.387624373306477*^9}, {
   3.387624480625881*^9, 3.387624615320572*^9}, {3.38762464697326*^9, 
   3.387624769780383*^9}, {3.387624812356368*^9, 3.3876248660526657`*^9}, {
   3.387624964765744*^9, 3.3876250433777113`*^9}, {3.387625098653784*^9, 
   3.387625115786669*^9}, {3.387625358934784*^9, 3.387625371072482*^9}, {
   3.387625410406623*^9, 3.387625631514048*^9}, {3.387625665442071*^9, 
   3.387625757689849*^9}, {3.387625792151889*^9, 3.3876258888742523`*^9}, {
   3.3876259455388947`*^9, 3.387625959697741*^9}, {3.387625996125005*^9, 
   3.387626048788527*^9}, {3.3876261668963346`*^9, 3.3876261754355583`*^9}, {
   3.387626212618909*^9, 3.3876262246769667`*^9}, {3.387626297430868*^9, 
   3.387626312714588*^9}, {3.387626384964156*^9, 3.3876263924017067`*^9}, {
   3.387627240847619*^9, 3.387627266630385*^9}, {3.3876273225736103`*^9, 
   3.3876273495423594`*^9}, {3.387627397466424*^9, 3.387627526012679*^9}, {
   3.387627604689518*^9, 3.3876278194690104`*^9}, {3.387627885381896*^9, 
   3.3876278992247963`*^9}, {3.387627932806962*^9, 3.387628024115512*^9}, {
   3.387628083527178*^9, 3.387628264836417*^9}, {3.3876289804696703`*^9, 
   3.387629051084071*^9}, {3.38762916038035*^9, 3.387629234082057*^9}, {
   3.387629287031665*^9, 3.3876293309048843`*^9}, {3.387629378215439*^9, 
   3.387629454363886*^9}, {3.387629542019308*^9, 3.387629558833111*^9}, {
   3.387629594172374*^9, 3.387629620618829*^9}, {3.38762965951982*^9, 
   3.387629676292515*^9}, {3.387629715848063*^9, 3.387629778480451*^9}, {
   3.3876298108705587`*^9, 3.387629861565262*^9}, {3.387630589968705*^9, 
   3.387630611039249*^9}, {3.3876307360511827`*^9, 3.387630872386528*^9}, {
   3.3876309109747543`*^9, 3.387630923748878*^9}, {3.387631060588739*^9, 
   3.387631105415056*^9}, {3.387631155775003*^9, 3.387631169441244*^9}, {
   3.3876313422313967`*^9, 3.387631370462084*^9}, {3.3876314184582157`*^9, 
   3.387631452796784*^9}, {3.387631524746414*^9, 3.387631526476885*^9}, {
   3.387631574757267*^9, 3.387631594375202*^9}, {3.387631659760754*^9, 
   3.3876316634587*^9}, {3.387632420193797*^9, 3.387632424779722*^9}, 
   3.387713422544086*^9, {3.3877134615964403`*^9, 3.387713485212326*^9}, {
   3.3877135187364388`*^9, 3.387713607709196*^9}, {3.387713670511211*^9, 
   3.387713776156163*^9}, {3.387713824433495*^9, 3.3877139661471357`*^9}, {
   3.387714138629198*^9, 3.3877142167797747`*^9}, {3.387714287231863*^9, 
   3.387714726557173*^9}, {3.387714822647943*^9, 3.387714879346624*^9}, {
   3.3877150943732862`*^9, 3.387715112117076*^9}, {3.38771517185674*^9, 
   3.387715190120886*^9}, {3.3877154431454563`*^9, 3.3877154544724407`*^9}, {
   3.387715549538303*^9, 3.387715557472302*^9}, {3.387715635191495*^9, 
   3.387715635655015*^9}, {3.38771568275353*^9, 3.387715683050909*^9}, {
   3.3877157191842117`*^9, 3.387715870486404*^9}, {3.3877159064468603`*^9, 
   3.387715959737217*^9}, {3.3877162700910873`*^9, 3.387716342730336*^9}, {
   3.38771657302696*^9, 3.3877166342876997`*^9}, 3.3877167569282303`*^9, {
   3.387716788565392*^9, 3.3877167922905407`*^9}, {3.387717599509479*^9, 
   3.38771760036653*^9}, {3.387717667689435*^9, 3.387717691094186*^9}, {
   3.387717879242773*^9, 3.3877178856101227`*^9}, {3.387718240205652*^9, 
   3.387718245021476*^9}, {3.387718322524088*^9, 3.387718518570112*^9}, {
   3.387718558006309*^9, 3.387718589805678*^9}, {3.387718631743734*^9, 
   3.387718773787264*^9}, {3.387718870889304*^9, 3.3877189144725657`*^9}, {
   3.387719131809884*^9, 3.387719144881124*^9}, {3.387719381042098*^9, 
   3.387719382104034*^9}, {3.387719810774877*^9, 3.387720041194021*^9}, {
   3.387720082850738*^9, 3.38772016047925*^9}, {3.3877201977209387`*^9, 
   3.38772023392382*^9}, {3.387720297041733*^9, 3.387720297631022*^9}, {
   3.387721270228796*^9, 3.387721299051587*^9}, {3.3877253640365458`*^9, 
   3.387725402973144*^9}, {3.3877254923055563`*^9, 3.387725516582456*^9}, {
   3.3877997575830383`*^9, 3.3877997620517883`*^9}, {3.3878016593642883`*^9, 
   3.3878016628017883`*^9}, 3.3878017562549133`*^9, {3.3878021016767883`*^9, 
   3.3878021033017883`*^9}, {3.3878021560361633`*^9, 
   3.3878021719892883`*^9}, {3.3878026704111633`*^9, 
   3.3878026742080383`*^9}, {3.387824526231403*^9, 3.387824551679315*^9}, 
   3.3879070666145673`*^9, 3.388142508099938*^9, {3.3881428358520355`*^9, 
   3.3881428390708065`*^9}, {3.415108771971217*^9, 3.4151088134402323`*^9}, {
   3.4362122890178027`*^9, 3.4362123079907*^9}, {3.436212407513651*^9, 
   3.4362124163805375`*^9}, 3.436212534747373*^9},
 CellID->162346279]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 4, $CellContext`methodology$$ = 
    "sum of log likelihoods", $CellContext`model$$ = 
    "logit", $CellContext`plotrange$$ = -100, $CellContext`sa$$ = 
    False, $CellContext`\[Alpha]$$ = -2, $CellContext`\[Beta]$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], -2, "\[Alpha] parameter"}, -20, 20, 
      0.01}, {{
       Hold[$CellContext`\[Beta]$$], 2, "\[Beta] parameter"}, -20, 20, 
      0.01}, {{
       Hold[$CellContext`model$$], "logit", "model"}, {"logit", "probit"}}, {{
      
       Hold[$CellContext`i$$], 4, "dataset index"}, 1, 
      Dynamic[
       Length[$CellContext`mypts], SynchronousUpdating -> False], 1}, {{
       Hold[$CellContext`plotrange$$], -100, 
       "Min \[CapitalSigma] Log[L]"}, -500, -0.001}, {{
       Hold[$CellContext`sa$$], False, "display MLE"}, {True, False}}, {{
       Hold[$CellContext`methodology$$], "sum of log likelihoods", 
       "methodology"}, {"sum of log likelihoods", "WLS"}}}, Typeset`size$$ = {
    320., {197.5, 202.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`\[Alpha]$660$$ = 
    0, $CellContext`\[Beta]$661$$ = 0, $CellContext`model$662$$ = 
    False, $CellContext`i$663$$ = 0, $CellContext`plotrange$664$$ = 
    0, $CellContext`sa$665$$ = False, $CellContext`methodology$666$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`i$$ = 4, $CellContext`methodology$$ = 
        "sum of log likelihoods", $CellContext`model$$ = 
        "logit", $CellContext`plotrange$$ = -100, $CellContext`sa$$ = 
        False, $CellContext`\[Alpha]$$ = -2, $CellContext`\[Beta]$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$660$$, 0], 
        Hold[$CellContext`\[Beta]$$, $CellContext`\[Beta]$661$$, 0], 
        Hold[$CellContext`model$$, $CellContext`model$662$$, False], 
        Hold[$CellContext`i$$, $CellContext`i$663$$, 0], 
        Hold[$CellContext`plotrange$$, $CellContext`plotrange$664$$, 0], 
        Hold[$CellContext`sa$$, $CellContext`sa$665$$, False], 
        Hold[$CellContext`methodology$$, $CellContext`methodology$666$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`pts$ = 
         Part[$CellContext`mypts, $CellContext`i$$], $CellContext`is$ = 
         320, $CellContext`\[ScriptL]$}, $CellContext`\[ScriptL]$ = Map[
           Function[$CellContext`pt$, 
            $CellContext`likelihood[PDF[
              BinomialDistribution[
              1, #], #2]& , {$CellContext`\[Alpha]$$, \
$CellContext`\[Beta]$$}, {1, 
              Part[$CellContext`pt$, 1]}, 
             Switch[$CellContext`model$$, "logit", CDF[
               LogisticDistribution[0, 1], #]& , "probit", CDF[
               NormalDistribution[0, 1], #]& ], 
             Part[$CellContext`pt$, 2]]], $CellContext`pts$]; Pane[
          Grid[{{
             Graphics3D[{
               Part[
                ParametricPlot3D[{$CellContext`x, 
                  Switch[$CellContext`model$$, "logit", 
                   CDF[
                    LogisticDistribution[0, 1], 
                    
                    Dot[{$CellContext`\[Alpha]$$, $CellContext`\[Beta]$$}, {
                    1, $CellContext`x}]], "probit", 
                   CDF[
                    NormalDistribution[0, 1], 
                    
                    Dot[{$CellContext`\[Alpha]$$, $CellContext`\[Beta]$$}, {
                    1, $CellContext`x}]]], 0}, {$CellContext`x, 
                  Min[
                   Map[First, $CellContext`pts$]], 
                  Max[
                   Map[First, $CellContext`pts$]]}, PlotStyle -> {{
                    Dashing[{0.01, 0.01}], Orange}}], 1], 
               MapIndexed[
                Function[{$CellContext`pt$, $CellContext`ptindex$}, 
                 
                 With[{$CellContext`q$ = 
                   Dot[{$CellContext`\[Alpha]$$, $CellContext`\[Beta]$$}, {
                    1, 
                    Part[$CellContext`pt$, 1]}], $CellContext`pti$ = 
                   First[$CellContext`ptindex$]}, {
                   PointSize[0.02], 
                   Append[
                    ColorData[1][$CellContext`pti$], 0.5], 
                   Point[
                    Append[$CellContext`pt$, 0]], 
                   Append[
                    ColorData[1][$CellContext`pti$], 0.5], 
                   Point[
                    Append[$CellContext`pt$, 
                    Part[$CellContext`\[ScriptL]$, $CellContext`pti$]]], 
                   Line[{
                    Append[$CellContext`pt$, 0], 
                    Append[$CellContext`pt$, 
                    
                    Part[$CellContext`\[ScriptL]$, $CellContext`pti$]]}]}]], \
$CellContext`pts$]}, BoxRatios -> {1, 1, 1}, Axes -> True, 
              PlotRange -> {{0, 1}, {-0.1, 1.1}, {0, 1}}, 
              AxesLabel -> {"x", "y", "P(Y| \[Alpha], \[Beta]) "}, 
              ImageSize -> $CellContext`is$, AspectRatio -> 1]}, {
             Graphics[{
               MapIndexed[{
                 ColorData[1][
                  Part[#2, 1]], 
                 Rectangle[{
                   Max[-500000, 
                    Part[#, 2]], 0}, {
                   Max[-500000, 
                    Part[#, 1]], 1}]}& , 
                Partition[
                 Prepend[
                  Accumulate[
                   Map[Log, $CellContext`\[ScriptL]$]], 0], 2, 1]]}, 
              PlotLabel -> If[$CellContext`sa$$, 
                
                With[{$CellContext`best$ = $CellContext`mle[
                   BinomialDistribution[1, #]& , $CellContext`pts$, {
                    1, $CellContext`x}, {$CellContext`x}, 
                    
                    Switch[$CellContext`model$$, "logit", $CellContext`logit, 
                    "probit", $CellContext`probit], Method -> 
                    Switch[$CellContext`methodology$$, 
                    "sum of log likelihoods", "glmFit", 
                    Blank[], "NMaximize"]]}, {
                  Thread[{"\[Alpha]", "\[Beta]"} -> $CellContext`best$], 
                  CDF[
                   Switch[$CellContext`model$$, "logit", 
                    LogisticDistribution[0, 1], "probit", 
                    NormalDistribution[0, 1]], 
                   Dot[{1, $CellContext`x}, $CellContext`best$]]}], ""], 
              ImageSize -> $CellContext`is$, Frame -> {True, False}, 
              FrameLabel -> {"sum of the logs of the likelihoods"}, 
              PlotRange -> {{$CellContext`plotrange$$, 0}, {0, 1}}, 
              AspectRatio -> 1/20]}}], {320, 400}]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, -2, 
          "\[Alpha] parameter"}, -20, 20, 0.01, Appearance -> "Labeled", 
         ImageSize -> 
         Tiny}, {{$CellContext`\[Beta]$$, 2, "\[Beta] parameter"}, -20, 20, 
         0.01, Appearance -> "Labeled", ImageSize -> 
         Tiny}, {{$CellContext`model$$, "logit", "model"}, {
         "logit", "probit"}}, 
        Delimiter, {{$CellContext`i$$, 4, "dataset index"}, 1, 
         Dynamic[
          Length[$CellContext`mypts], SynchronousUpdating -> False], 1, 
         Appearance -> "Labeled", ImageSize -> Tiny}, 
        Delimiter, {{$CellContext`plotrange$$, -100, 
          "Min \[CapitalSigma] Log[L]"}, -500, -0.001, Appearance -> 
         "Labeled", ImageSize -> Tiny}, 
        Delimiter, {{$CellContext`sa$$, False, "display MLE"}, {
         True, False}}, {{$CellContext`methodology$$, 
          "sum of log likelihoods", "methodology"}, {
         "sum of log likelihoods", "WLS"}}}, 
      "Options" :> {
       ControlPlacement -> Left, 
        TrackedSymbols :> {$CellContext`\[Alpha]$$, $CellContext`\[Beta]$$, \
$CellContext`model$$, $CellContext`i$$, $CellContext`plotrange$$, \
$CellContext`sa$$, $CellContext`methodology$$}, 
        AutorunSequencing -> {1, 2, 3}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{571., {227., 232.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({SeedRandom[50807]; $CellContext`mypts = DeleteCases[
          Table[
           
           With[{$CellContext`\[Alpha] = 
             RandomReal[{-2, 2}], $CellContext`\[Beta] = RandomReal[{-2, 2}]}, 
            Table[
             With[{$CellContext`r = RandomReal[]}, {$CellContext`r, 
               RandomChoice[{
                  CDF[
                   NormalDistribution[
                   0, 1], $CellContext`\[Alpha] + $CellContext`\[Beta] \
$CellContext`r], 1 - CDF[
                   NormalDistribution[
                   0, 1], $CellContext`\[Alpha] + $CellContext`\[Beta] \
$CellContext`r]} -> {1, 0}]}], {
              RandomInteger[{30, 40}]}]], {10}], 
          Alternatives[{
            Repeated[{
              Blank[], 0}]}, {
            Repeated[{
              Blank[], 1}]}]]; $CellContext`logit[
          Pattern[$CellContext`x, 
           Blank[]]] = 
        Log[$CellContext`x/(1 - $CellContext`x)]; $CellContext`probit[
          Pattern[$CellContext`x, 
           Blank[]]] = Quantile[
          NormalDistribution[0, 1], $CellContext`x]; $CellContext`likelihood[
          Pattern[$CellContext`errorDensityFunction, 
           Blank[]], 
          Pattern[$CellContext`beta, 
           Blank[]], 
          Pattern[$CellContext`basis, 
           Blank[]], 
          Pattern[$CellContext`modelFunction, 
           Blank[]], 
          Pattern[$CellContext`resp, 
           Blank[]]] := $CellContext`errorDensityFunction[
          
          With[{$CellContext`p = 
            Dot[$CellContext`beta, $CellContext`basis]}, 
           $CellContext`modelFunction[$CellContext`p]], $CellContext`resp]; \
$CellContext`loglikelihood[
          Pattern[$CellContext`errorDensityFunction, 
           Blank[]], 
          Pattern[$CellContext`beta, 
           Blank[]], 
          Pattern[$CellContext`basis, 
           Blank[]], 
          Pattern[$CellContext`modelFunction, 
           Blank[]], 
          Pattern[$CellContext`resp, 
           Blank[]]] := Log[
          $CellContext`likelihood[$CellContext`errorDensityFunction, \
$CellContext`beta, $CellContext`basis, $CellContext`modelFunction, \
$CellContext`resp]]; $CellContext`likelihoodLines[
          Pattern[$CellContext`errorDensityFunction, 
           Blank[]], 
          Pattern[$CellContext`beta, 
           Blank[]], 
          Pattern[$CellContext`basis, 
           Blank[]], 
          Pattern[$CellContext`modelFunction, 
           Blank[]], 
          Pattern[$CellContext`resp, 
           Blank[]]] := Line[{{
            Part[$CellContext`basis, 2], $CellContext`resp, 0}, {
            Part[$CellContext`basis, 2], $CellContext`resp, 
            $CellContext`likelihood[$CellContext`errorDensityFunction, \
$CellContext`beta, $CellContext`basis, $CellContext`modelFunction, \
$CellContext`resp]}}]; $CellContext`mle[
          Pattern[$CellContext`errorDistribution$, 
           Blank[]], 
          Pattern[$CellContext`data$, 
           Blank[]], 
          Pattern[$CellContext`basis$, 
           Blank[]], 
          Pattern[$CellContext`vars$, 
           Blank[]], 
          Pattern[$CellContext`link$, 
           Blank[]], 
          OptionsPattern[{Method -> "NMaximize"}]] := 
        Block[{$CellContext`xmat, $CellContext`response, $CellContext`start, \
$CellContext`step, $CellContext`chi, $CellContext`invlink, \
$CellContext`partder, $CellContext`wtfun}, $CellContext`invlink = Evaluate[
             If[
              MatchQ[
               $CellContext`link$[#], 
               Alternatives[#, #^Blank[]]], #^(1/Exponent[
                $CellContext`link$[#], #]), 
              Simplify[
               ReplaceAll[$CellContext`mu, 
                Quiet[
                 Part[
                  
                  Solve[$CellContext`link$[$CellContext`mu] == #, \
{$CellContext`mu}], 1]]]]]]& ; $CellContext`xmat = 
           DesignMatrix[$CellContext`data$, $CellContext`basis$, \
$CellContext`vars$, IncludeConstantBasis -> False]; $CellContext`chi = 
           Array[$CellContext`\[Chi], 
             Part[
              Dimensions[$CellContext`xmat], 2]]; $CellContext`response = 
           Part[$CellContext`data$, All, -1]; Switch[
            OptionValue[Method], "NMaximize", $CellContext`t = Total[
               MapThread[
                Function[{$CellContext`datum$, $CellContext`resp$}, 
                 $CellContext`loglikelihood[PDF[
                   $CellContext`errorDistribution$[#], #2]& , \
$CellContext`chi, $CellContext`datum$, $CellContext`invlink, \
$CellContext`resp$]], {$CellContext`xmat, $CellContext`response}]]; 
            ReplaceAll[$CellContext`chi, 
              Last[
               NMaximize[$CellContext`t, $CellContext`chi]]], "glmFit", 
            If[$CellContext`model$$ === "logit", 
             
             LogitModelFit[$CellContext`data$, $CellContext`basis$, \
$CellContext`vars$], 
             
             ProbitModelFit[$CellContext`data$, $CellContext`basis$, \
$CellContext`vars$]]["BestFitParameters"], 
            Blank[], "not supported"]]; Null}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->84112096],

Cell[CellGroupData[{

Cell["CAPTION", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "Often regressions involve binary outcome data: the object is to predict \
some event that will or will not occur based on various data. This \
Demonstration shows how to derive the maximum likelihood estimates of the \
coefficients in probit and logit regressions that are typically used to model \
data with a binary outcome. You can specify a dataset for examination, make \
guesses as to the ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath"],
 " parameters, and choose a logit or probit regression model. The top panel \
shows the data, the current regression model (orange line) and the \
probability (likelihood) that each ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath"],
 "-value would occur for a given ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath"],
 "-value, given ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath"],
 ". The bottom panel shows the sum of the log of each of these likelihoods. \
Selection of maximum likelihood estimates of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath"],
 " will make this sum as large as possible and the displayed rectangle as \
small as possible. You can specify the minimum displayed value of the sum of \
the log likelihoods. If you are curious, you can also request a computation \
of the correct answer for each dataset, which may be done either directly or \
using an iterative weighted least squares (WLS) process."
}], "Text"]
}, Close]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DETAILS", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "The Demonstration employs two alternative methodologies to compute the \
maximum likelihood estimators: The first method uses global optimization \
routines to find the values of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath"],
 " that maximize the sum of the logs of the likelihoods of each data point. \
The second method uses an iterative weighted least squares process which \
makes assumptions about weights, figures out what coefficients minimize the \
residuals, figures out what weights are consistent with the resulting model, \
and so on until convergence is reached. Consistent with predictions, the \
results of the two methodologies appear to be the same in all cases. On \
larger datasets, the weighted least squares method is expected to be faster \
owing in part to the intricacies of global optimization."
}], "Text"],

Cell["\<\
The optimization code used here can be readily extended to address more \
complex models.\
\>", "Text"],

Cell["\<\
The controls of this Demonstration will generally respond more swiftly if \
\"compute MLE\" is unchecked.\
\>", "Text"]
}, Close]],

Cell[CellGroupData[{

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "\"",
 ButtonBox["Maximum Likelihood Estimators for Binary Outcomes",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
MaximumLikelihoodEstimatorsForBinaryOutcomes/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/\
MaximumLikelihoodEstimatorsForBinaryOutcomes/"],
 "\"",
 " from ",
 ButtonBox["the Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/\
MaximumLikelihoodEstimatorsForBinaryOutcomes/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/\
MaximumLikelihoodEstimatorsForBinaryOutcomes/"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/\
MaximumLikelihoodEstimatorsForBinaryOutcomes/"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Seth J. Chandler",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Seth+J.+\
Chandler"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Seth+J.+Chandler"]
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6]],

Cell[TextData[{
 "After work by: ",
 ButtonBox["Darren Glosemeyer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Darren+\
Glosemeyer"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Darren+Glosemeyer"],
 " and ",
 ButtonBox["J. Scott Long",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=J.+Scott+Long"],
     None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=J.+Scott+Long"]
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6],
 CellID->1967752510]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system (Version 6 or higher) is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[1, 1, 1]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
MaximumLikelihoodEstimatorsForBinaryOutcomes"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{771, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Maximum Likelihood Estimators for Binary Outcomes - Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[651, 23, 169, 3, 70, "Section"],
Cell[823, 28, 3700, 64, 70, "Section"],
Cell[4526, 94, 28959, 654, 70, "Input",
 CellID->162346279]
}, Open  ]],
Cell[CellGroupData[{
Cell[33522, 753, 14005, 298, 70, "Output",
 CellID->84112096],
Cell[CellGroupData[{
Cell[47552, 1055, 209, 6, 70, "Section"],
Cell[47764, 1063, 1744, 38, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49556, 1107, 209, 6, 70, "Section"],
Cell[49768, 1115, 957, 17, 70, "Text"],
Cell[50728, 1134, 113, 3, 70, "Text"],
Cell[50844, 1139, 129, 3, 70, "Text"]
}, Close]],
Cell[CellGroupData[{
Cell[51009, 1147, 355, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[51367, 1158, 1064, 31, 70, "Text"],
Cell[CellGroupData[{
Cell[52456, 1193, 442, 14, 70, "Text"],
Cell[52901, 1209, 725, 23, 70, "Text",
 CellID->1967752510]
}, Open  ]],
Cell[CellGroupData[{
Cell[53663, 1237, 815, 24, 70, "Text"],
Cell[54481, 1263, 1216, 33, 70, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature vT4s#1UHKba9EC0it0aQkGwa *)
