(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     59000,       1472]
NotebookOptionsPosition[     57319,       1413]
NotebookOutlinePosition[     57976,       1438]
CellTagsIndexPosition[     57933,       1435]
WindowTitle->k-Nearest Neighbor (kNN) Classifier - Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["k-Nearest Neighbor (kNN) Classifier", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
FP/69esnAAAAAAAAAAAAwM74B4thROM=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"yp", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"predictNNB", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], ",", "x1x2y", ",", "k"}], 
           "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"VoronoiNN", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2", ",", "y", ",", "yp"}], "}"}], "]"}], ",", 
        RowBox[{"SizePoint", "\[Rule]", "4"}], ",", 
        RowBox[{"LabelPlot", "\[Rule]", "Null"}]}], "]"}]}], ",", "g4"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "71", ",", "2", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", "k", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"SynchronousInitialization", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Get", "[", "\"\<ComputationalGeometry`\>\"", "]"}], ";", 
      RowBox[{"means", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.253433"}], ",", "1.74148"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.266693", ",", "0.371234"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.09647", ",", "1.23336"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.0612727"}], ",", 
           RowBox[{"-", "0.208679"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.70354", ",", "0.596828"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2.37721", ",", 
           RowBox[{"-", "1.18641"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.05691", ",", 
           RowBox[{"-", "0.683894"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.578884", ",", 
           RowBox[{"-", "0.0683458"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.624252", ",", "0.598738"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.67335", ",", 
           RowBox[{"-", "0.289316"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.19937", ",", "0.248409"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.302561"}], ",", "0.945419"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.0572723", ",", "2.41973"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.32932", ",", "0.819226"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.0793842"}], ",", "1.6138"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.50793", ",", "1.05299"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.61392", ",", "0.671738"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.00754", ",", "1.36831"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.454621"}], ",", "1.08607"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.79802"}], ",", "1.92978"}], "}"}]}], "}"}]}], ";", 
      
      RowBox[{
       RowBox[{"greenRV", "[", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"\[Sigma]", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1.`", "/", "5.`"}], "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "10"}], "}"}], "]"}]}], ";", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Random", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"means", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[Sigma]"}], 
              "]"}], "]"}], ",", 
            RowBox[{"Random", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"means", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[Sigma]"}], 
              "]"}], "]"}]}], "}"}]}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"redRV", "[", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"\[Sigma]", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1.`", "/", "5.`"}], "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"11", ",", "20"}], "}"}], "]"}]}], ";", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Random", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"means", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[Sigma]"}], 
              "]"}], "]"}], ",", 
            RowBox[{"Random", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"means", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "\[Sigma]"}], 
              "]"}], "]"}]}], "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"fs", "[", "x_", "]"}], ":=", 
       RowBox[{"Text", "@", 
        RowBox[{"Style", "[", 
         RowBox[{"x", ",", "16", ",", "Bold", ",", "Blue"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SeedRandom", "[", "29771083", "]"}], ";", 
      RowBox[{"n", "=", "100"}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"0", "&"}], ",", "n"}], "]"}], ",", " ", 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"1", "&"}], ",", "n"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xG", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"greenRV", "[", "]"}], "&"}], ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xR", "=", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"redRV", "[", "]"}], "&"}], ",", "n"}], "]"}]}], ";", 
      RowBox[{"x1x2y", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"xG", ",", "xR"}], "]"}], "]"}], ",", 
          RowBox[{"{", "y", "}"}]}], "]"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x1", ",", "x2", ",", "y"}], "}"}], "=", 
       RowBox[{"Transpose", "[", "x1x2y", "]"}]}], ";", 
      RowBox[{"g1", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"xG", ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "6", "]"}], ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0.75"}], "]"}]}], "}"}]}],
          ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
      RowBox[{"g2", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"xR", ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "6", "]"}], ",", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0.75"}], "]"}]}], "}"}]}],
          ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"EU", "[", 
        RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{
         RowBox[{"Most", "[", "u", "]"}], ",", 
         RowBox[{"Most", "[", "v", "]"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"GetNearest", "[", 
        RowBox[{"xy_", ",", " ", "x0_", ",", " ", "k_"}], "]"}], ":=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"xy", ",", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"x0", ",", " ", "0"}], "]"}], ",", " ", "k", ",", " ", 
         RowBox[{"DistanceFunction", "\[Rule]", " ", "EU"}]}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"predictNNB", "[", 
        RowBox[{"x0_", ",", " ", "xy_", ",", " ", "k_"}], "]"}], ":=", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "z", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"z", "=", 
           RowBox[{"Tally", "[", 
            RowBox[{"Last", "/@", 
             RowBox[{"GetNearest", "[", 
              RowBox[{"xy", ",", "x0", ",", "k"}], "]"}]}], "]"}]}], ";", " ",
           "\[IndentingNewLine]", 
          RowBox[{"z", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{"z", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"Last", "[", "#1", "]"}], "\[GreaterEqual]", " ", 
               RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Select", "[", 
              RowBox[{"z", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Last", "[", 
                  RowBox[{"First", "[", "z", "]"}], "]"}], "\[Equal]", 
                 RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}], "]"}], 
            "]"}], "//", "RandomChoice"}]}]}], "\[IndentingNewLine]", "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Options", "[", "VoronoiNN", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ShowLinesQ", "\[Rule]", "False"}], ",", 
         RowBox[{"LabelPlot", "\[Rule]", "\"\<Veronoi Diagram\>\""}], ",", 
         RowBox[{"LabelFrameQ", "\[Rule]", "True"}], ",", 
         RowBox[{"SizePoint", "\[Rule]", " ", "7"}]}], "}"}]}], ";", 
      RowBox[{
       RowBox[{"VoronoiNN", "[", 
        RowBox[{"x1x2y_", ",", " ", 
         RowBox[{"opts", ":", 
          RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "g", ",", "vv", ",", "n", ",", "diag", ",", "l", ",", "hs", ",", 
           "x", ",", "y", ",", "indxy", ",", "indpoints", ",", "xy", ",", 
           "vorvert", ",", "vorval", ",", "npts", ",", "rr", ",", "xylim", 
           ",", "xs", ",", "xmax", ",", "xmin", ",", "ymax", ",", "ymin", ",",
            "vorvertNew", ",", "vorvalNew", ",", "pl", ",", "SLQ", ",", "LFQ",
            ",", "SP", ",", "FL"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SLQ", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "ShowLinesQ", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pl", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "LabelPlot", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"LFQ", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "LabelFrameQ", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"SP", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "SizePoint", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", 
              RowBox[{"Dimensions", "[", "x1x2y", "]"}], "]"}], "\[Equal]", 
             "3"}], ",", "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "indxy"}], "}"}], "=", 
              RowBox[{"Transpose", "[", "x1x2y", "]"}]}], ";", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{"indxy", "=", 
              RowBox[{"indxy", "+", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
             RowBox[{"indpoints", "=", "indxy"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "indpoints", ",", "indxy"}], "}"}],
               "=", 
              RowBox[{"Transpose", "[", "x1x2y", "]"}]}], ";", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{"indpoints", "=", 
              RowBox[{"indpoints", "+", "1"}]}], ";", "\[IndentingNewLine]", 
             "\t", 
             RowBox[{"indxy", "=", 
              RowBox[{"indxy", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"xy", "=", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vorvert", ",", "vorval"}], "}"}], "=", 
           RowBox[{"ComputationalGeometry`VoronoiDiagram", "[", "xy", "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"npts", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"vorvert", ",", "ListQ"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rr", "=", 
           RowBox[{"Last", "/@", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"List", "/@", 
               RowBox[{"Apply", "[", 
                RowBox[{"List", ",", 
                 RowBox[{"Drop", "[", 
                  RowBox[{"vorvert", ",", "npts"}], "]"}], ",", "1"}], 
                "]"}]}], ",", "1"}], "]"}]}]}], ";", 
          RowBox[{"xylim", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", "#", "]"}], ",", 
               RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Join", "[", 
              RowBox[{"xy", ",", 
               RowBox[{"Take", "[", 
                RowBox[{"vorvert", ",", "npts"}], "]"}]}], "]"}], "]"}]}]}], 
          ";", 
          RowBox[{"xylim", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "[", "#", "]"}], ",", 
               RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Transpose", "[", "xy", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"xs", "=", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Max", "[", "#", "]"}], "-", 
                 RowBox[{"Min", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
              "xylim"}], "]"}], "*", "0.1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"xylim", "=", 
           RowBox[{"xylim", "+", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "xs"}], ",", "xs"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "xs"}], ",", "xs"}], "}"}]}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"ymin", ",", "ymax"}], "}"}]}], "}"}], "=", "xylim"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"vorvertNew", "=", "vorvert"}], ";", 
          RowBox[{"vorvalNew", "=", "vorval"}], ";", "\[IndentingNewLine]", 
          RowBox[{"vorvertNew", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"vorvertNew", ",", "npts"}], "]"}], ",", "rr"}], 
            "]"}]}], ";", 
          RowBox[{"vorvalNew", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Max", "@@", 
                  RowBox[{"Last", "[", "#", "]"}]}], ">", "npts"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"First", "[", "#", "]"}], ",", 
                  RowBox[{"RotateRight", "[", 
                   RowBox[{"Last", "[", "#", "]"}], "]"}]}], "}"}], ",", 
                "#"}], "]"}], "&"}], ")"}], "/@", "vorval"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"hs", "=", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "indxy", "]"}], "\[Equal]", "2"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.3", ",", "0"}], "}"}], ",", 
             RowBox[{
              RowBox[{"Max", "[", "indxy", "]"}], "\[Equal]", "3"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.3", ",", "0.5"}], "}"}], ",", "True", ",", 
             
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}], "/", 
                RowBox[{"Max", "[", "indxy", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Max", "[", "indxy", "]"}]}], "}"}]}], "]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"vv", "=", 
               RowBox[{"Last", "[", 
                RowBox[{
                "vorvalNew", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"n", "=", 
               RowBox[{"Length", "[", "vv", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"diag", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ii", "=", 
                   RowBox[{
                   "vv", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ";", 
                  RowBox[{
                  "vorvertNew", "\[LeftDoubleBracket]", "ii", 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"l", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"diag", ",", 
                 RowBox[{"First", "[", "diag", "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "l"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "vorvalNew", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"glines", "=", 
           RowBox[{"If", "[", 
            RowBox[{"SLQ", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
               RowBox[{"Line", "/@", "g"}]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"FL", "=", 
           RowBox[{"If", "[", 
            RowBox[{"LFQ", ",", 
             RowBox[{"{", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", "//", "fs"}], 
                 ",", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\"", "//", "fs"}]}],
                 "}"}]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{"hs", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "indxy", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",",
                     "0.15", ",", "1"}], "]"}], ",", 
                   RowBox[{"Polygon", "[", 
                    RowBox[{
                    "g", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "[", "indxy", "]"}]}], "}"}]}], "]"}], 
               ",", "glines"}], "}"}], ",", 
             RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "xylim"}], ",", "FL", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "\[Rule]", "pl"}], ",", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"AbsolutePointSize", "[", "SP", "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Hue", "[", 
                    RowBox[{
                    RowBox[{"hs", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "indpoints", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",",
                     "1", ",", "1"}], "]"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{
                    "xy", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "]"}]}], "}"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "indxy", "]"}]}], "}"}]}], "]"}]}],
                "\[IndentingNewLine]", "}"}]}]}], "]"}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", "5.0"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"green", "[", 
        RowBox[{"x1_", ",", " ", "x2_"}], "]"}], ":=", 
       RowBox[{"0.1", "*", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{
                "means", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "\[Sigma]"}], "]"}], 
             ",", "x1"}], "]"}], "*", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{
                "means", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "\[Sigma]"}], "]"}], 
             ",", "x2"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"red", "[", 
        RowBox[{"x1_", ",", " ", "x2_"}], "]"}], ":=", 
       RowBox[{"0.1", "*", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{
                "means", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "\[Sigma]"}], "]"}], 
             ",", "x1"}], "]"}], "*", 
           RowBox[{"PDF", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{
                "means", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "\[Sigma]"}], "]"}], 
             ",", "x2"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "11", ",", "20"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"g4", "=", 
       RowBox[{"ContourPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"green", "[", 
           RowBox[{"x1", ",", "x2"}], "]"}], "\[Equal]", 
          RowBox[{"red", "[", 
           RowBox[{"x1", ",", "x2"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x2", ",", 
           RowBox[{"-", "4"}], ",", "5"}], "}"}], ",", 
         RowBox[{"ContourStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"AbsoluteThickness", "[", "2", "]"}], "}"}]}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", "//", "fs"}], ",", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\"", "//", "fs"}]}], 
           "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.403913145503261*^9, {3.403920195008328*^9, 3.4039201951958327`*^9}, 
   3.4406376877444353`*^9, {3.44064084118184*^9, 3.4406409017890053`*^9}, {
   3.4406410960283403`*^9, 3.4406410996320095`*^9}, {3.4407202157220526`*^9, 
   3.4407202194661245`*^9}, {3.4622691221046977`*^9, 3.462269291148465*^9}, {
   3.462269327278528*^9, 3.4622693278869357`*^9}, {3.462269363392991*^9, 
   3.4622693644694047`*^9}, {3.4622694828749228`*^9, 
   3.4622694942318687`*^9}, {3.462269551718605*^9, 3.4622695549790473`*^9}, {
   3.462272281195998*^9, 3.4622723223181257`*^9}, {3.462272356607365*^9, 
   3.4622723704135427`*^9}, {3.4622724154201193`*^9, 3.462272449163352*^9}, {
   3.462272689796437*^9, 3.462272698704151*^9}, {3.4622727332273936`*^9, 
   3.462272752571642*^9}, {3.4622727923989525`*^9, 3.46227279381857*^9}, {
   3.4622731736678405`*^9, 3.4622731957109227`*^9}, {3.4622872439981375`*^9, 
   3.462287251078494*^9}, {3.463322804928909*^9, 3.46332281127919*^9}, {
   3.4633229551140347`*^9, 3.4633229585616784`*^9}, {3.463323041180338*^9, 
   3.4633230416483436`*^9}, {3.464101890458001*^9, 3.4641018990381107`*^9}, {
   3.4641020231065016`*^9, 3.4641020620446005`*^9}, {3.464104254424014*^9, 
   3.46410429855698*^9}, {3.464104329975783*^9, 3.464104347869212*^9}, {
   3.4641044012374964`*^9, 3.464104424528595*^9}, 3.4641052230580325`*^9, {
   3.4641052546640377`*^9, 3.464105276129913*^9}, {3.464446539803142*^9, 
   3.464446540910756*^9}, {3.4644465724387608`*^9, 3.4644465783044357`*^9}, {
   3.464620479904932*^9, 3.464620517385746*^9}, {3.4646211404281387`*^9, 
   3.464621172316288*^9}, 3.464621427706661*^9, {3.46462158303296*^9, 
   3.4646216042310457`*^9}, {3.464621726994842*^9, 3.464621734335855*^9}, {
   3.464621822561908*^9, 3.4646219212194347`*^9}, {3.464621959687077*^9, 
   3.46462196948321*^9}, {3.4647162986845922`*^9, 3.464716299889641*^9}, {
   3.464716351964814*^9, 3.4647164089185095`*^9}, 3.464716552321848*^9, {
   3.4648107626574507`*^9, 3.464810765313751*^9}, 3.4650590426473846`*^9, 
   3.465059073925785*^9, {3.465064594173625*^9, 3.465064602517375*^9}, 
   3.465064679064*^9, {3.4655672138530617`*^9, 3.4655672219198685`*^9}},
 CellID->499886299]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 1, 71, 2}}, Typeset`size$$ = {
    360., {164., 169.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`k$30021$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$30021$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Show[$CellContext`yp = 
         MapThread[$CellContext`predictNNB[{#, #2}, $CellContext`x1x2y, \
$CellContext`k$$]& , {$CellContext`x1, $CellContext`x2}]; \
$CellContext`VoronoiNN[
          
          Transpose[{$CellContext`x1, $CellContext`x2, $CellContext`y, \
$CellContext`yp}], $CellContext`SizePoint -> 4, $CellContext`LabelPlot -> 
          Null], $CellContext`g4], 
      "Specifications" :> {{$CellContext`k$$, 1, 71, 2, Appearance -> 
         "Labeled"}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`k$$}, SynchronousInitialization -> 
        False, SynchronousUpdating -> False}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{405., {208., 213.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>((
      Get["ComputationalGeometry`"]; $CellContext`means = CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA7ImuCz840L+TNeohGt37P7+dRIR/
EdE/63JKQEzC1z9oXDgQksUAQOscA7LXu/M/BnZGpSJfr79+VS5U/rXKvzds
W5TZoAVAbcmqCDcZ4z8Uyy2thgQDQJZbWg2J+/K/twvNdRrp8D+sx32rdeLl
v2yvBb03huI/J6fRPxx/sb+OzY5U3/njPxjrG5jcKOM/gy9MpgrG+j8KaY1B
J4TSvzjb3JieMPM/rBqEud3Lzz8z4gLQKF3Tv3aLwFjfQO4/aPPufstSrT9d
M/lmm1sDQBSzXgzlRPU/fA3BcRk36j8PstHehVK0v4qO5PIf0vk/HEKVmj0Q
DECbPdAKDNnwP9/DJced0vk/1F+vsOB+5T/mllZD4h7wP9uizAaZ5PU/ycnE
rYIY3b/jqrLvimDxP9vcmJ6wxPy/HJlH/mDg/j9XC6j4
        
        "]; $CellContext`greenRV[] := 
       Module[{$CellContext`i, $CellContext`\[Sigma] = 
          Sqrt[1./5.]}, $CellContext`i = RandomInteger[{1, 10}]; {
           Random[
            NormalDistribution[
             First[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]]], 
           Random[
            NormalDistribution[
             Last[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]]]}]; $CellContext`redRV[] := 
       Module[{$CellContext`i, $CellContext`\[Sigma] = 
          Sqrt[1./5.]}, $CellContext`i = RandomInteger[{11, 20}]; {
           Random[
            NormalDistribution[
             First[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]]], 
           Random[
            NormalDistribution[
             Last[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]]]}]; $CellContext`fs[
         Pattern[$CellContext`x, 
          Blank[]]] := Text[
         Style[$CellContext`x, 16, Bold, Blue]]; 
      SeedRandom[29771083]; $CellContext`n = 100; $CellContext`y = Join[
         Array[0& , $CellContext`n], 
         Array[1& , $CellContext`n]]; $CellContext`xG = 
       Array[$CellContext`greenRV[]& , $CellContext`n]; $CellContext`xR = 
       Array[$CellContext`redRV[]& , $CellContext`n]; $CellContext`x1x2y = 
       Transpose[
         Join[
          Transpose[
           
           Join[$CellContext`xG, $CellContext`xR]], {$CellContext`y}]]; \
{$CellContext`x1, $CellContext`x2, $CellContext`y} = 
       Transpose[$CellContext`x1x2y]; $CellContext`g1 = 
       ListPlot[$CellContext`xG, PlotStyle -> {
           AbsolutePointSize[6], 
           RGBColor[0, 1, 0, 0.75]}, Axes -> False, Frame -> True, 
         DisplayFunction -> Identity, PlotRange -> All]; $CellContext`g2 = 
       ListPlot[$CellContext`xR, PlotStyle -> {
           AbsolutePointSize[6], 
           RGBColor[1, 0, 0, 0.75]}, Axes -> False, Frame -> True, PlotRange -> 
         All]; $CellContext`EU[
         Pattern[$CellContext`u, 
          Blank[]], 
         Pattern[$CellContext`v, 
          Blank[]]] := EuclideanDistance[
         Most[$CellContext`u], 
         Most[$CellContext`v]]; $CellContext`GetNearest[
         Pattern[$CellContext`xy, 
          Blank[]], 
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := Nearest[$CellContext`xy, 
         Append[$CellContext`x0, 0], $CellContext`k, 
         DistanceFunction -> $CellContext`EU]; $CellContext`predictNNB[
         Pattern[$CellContext`x0, 
          Blank[]], 
         Pattern[$CellContext`xy, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]]] := Module[{$CellContext`z}, $CellContext`z = Tally[
            Map[Last, 
             $CellContext`GetNearest[$CellContext`xy, $CellContext`x0, \
$CellContext`k]]]; $CellContext`z = 
          Sort[$CellContext`z, Last[#] >= Last[#2]& ]; RandomChoice[
           First[
            Transpose[
             Select[$CellContext`z, Last[
                First[$CellContext`z]] == Last[#]& ]]]]]; 
      Options[$CellContext`VoronoiNN] = {$CellContext`ShowLinesQ -> 
         False, $CellContext`LabelPlot -> 
         "Veronoi Diagram", $CellContext`LabelFrameQ -> 
         True, $CellContext`SizePoint -> 7}; $CellContext`VoronoiNN[
         Pattern[$CellContext`x1x2y, 
          Blank[]], 
         Pattern[$CellContext`opts, 
          OptionsPattern[]]] := 
       Module[{$CellContext`g, $CellContext`vv, $CellContext`n, \
$CellContext`diag, $CellContext`l, $CellContext`hs, $CellContext`x, \
$CellContext`y, $CellContext`indxy, $CellContext`indpoints, $CellContext`xy, \
$CellContext`vorvert, $CellContext`vorval, $CellContext`npts, \
$CellContext`rr, $CellContext`xylim, $CellContext`xs, $CellContext`xmax, \
$CellContext`xmin, $CellContext`ymax, $CellContext`ymin, \
$CellContext`vorvertNew, $CellContext`vorvalNew, $CellContext`pl, \
$CellContext`SLQ, $CellContext`LFQ, $CellContext`SP, $CellContext`FL}, \
$CellContext`SLQ = OptionValue[$CellContext`ShowLinesQ]; $CellContext`pl = 
          OptionValue[$CellContext`LabelPlot]; $CellContext`LFQ = 
          OptionValue[$CellContext`LabelFrameQ]; $CellContext`SP = 
          OptionValue[$CellContext`SizePoint]; If[Last[
             Dimensions[$CellContext`x1x2y]] == 
           3, {$CellContext`x, $CellContext`y, $CellContext`indxy} = 
            Transpose[$CellContext`x1x2y]; $CellContext`indxy = \
$CellContext`indxy + 1; $CellContext`indpoints = $CellContext`indxy; 
           Null, {$CellContext`x, $CellContext`y, $CellContext`indpoints, \
$CellContext`indxy} = 
            Transpose[$CellContext`x1x2y]; $CellContext`indpoints = \
$CellContext`indpoints + 1; $CellContext`indxy = $CellContext`indxy + 1; 
           Null]; $CellContext`xy = 
          Transpose[{$CellContext`x, $CellContext`y}]; {$CellContext`vorvert, \
$CellContext`vorval} = 
          ComputationalGeometry`VoronoiDiagram[$CellContext`xy]; \
$CellContext`npts = Length[
            Select[$CellContext`vorvert, ListQ]]; $CellContext`rr = 
          Map[Last, 
            Flatten[
             Map[List, 
              Apply[List, 
               Drop[$CellContext`vorvert, $CellContext`npts], 1]], 
             1]]; $CellContext`xylim = Map[{
             Min[#], 
             Max[#]}& , 
            Transpose[
             Join[$CellContext`xy, 
              
              Take[$CellContext`vorvert, $CellContext`npts]]]]; \
$CellContext`xylim = Map[{
             Min[#], 
             Max[#]}& , 
            Transpose[$CellContext`xy]]; $CellContext`xs = Max[
             Map[Max[#] - Min[#]& , $CellContext`xylim]] 
           
           0.1; $CellContext`xylim = $CellContext`xylim + {{-$CellContext`xs, \
$CellContext`xs}, {-$CellContext`xs, $CellContext`xs}}; {{$CellContext`xmin, \
$CellContext`xmax}, {$CellContext`ymin, $CellContext`ymax}} = \
$CellContext`xylim; $CellContext`vorvertNew = $CellContext`vorvert; \
$CellContext`vorvalNew = $CellContext`vorval; $CellContext`vorvertNew = Join[
            
            Take[$CellContext`vorvertNew, $CellContext`npts], \
$CellContext`rr]; $CellContext`vorvalNew = Map[If[Apply[Max, 
               Last[#]] > $CellContext`npts, {
              First[#], 
              RotateRight[
               Last[#]]}, #]& , $CellContext`vorval]; $CellContext`hs = 
          Which[Max[$CellContext`indxy] == 2, {0.3, 0}, 
            Max[$CellContext`indxy] == 3, {0, 0.3, 0.5}, True, 
            
            Table[($CellContext`i - 1)/
             Max[$CellContext`indxy], {$CellContext`i, 
              Max[$CellContext`indxy]}]]; $CellContext`g = 
          Table[$CellContext`vv = Last[
               Part[$CellContext`vorvalNew, $CellContext`j]]; $CellContext`n = 
             Length[$CellContext`vv]; $CellContext`diag = 
             Table[$CellContext`ii = Part[$CellContext`vv, $CellContext`i]; 
               Part[$CellContext`vorvertNew, $CellContext`ii], \
{$CellContext`i, $CellContext`n}]; $CellContext`l = 
             Append[$CellContext`diag, 
               First[$CellContext`diag]]; $CellContext`l, {$CellContext`j, 
             Length[$CellContext`vorvalNew]}]; $CellContext`glines = 
          If[$CellContext`SLQ, {
             AbsoluteThickness[1], 
             RGBColor[0, 0, 0], 
             Map[Line, $CellContext`g]}, {}]; $CellContext`FL = 
          If[$CellContext`LFQ, {FrameLabel -> {
               $CellContext`fs["\!\(\*SubscriptBox[\(x\), \(1\)]\)"], 
               $CellContext`fs["\!\(\*SubscriptBox[\(x\), \(2\)]\)"]}}, {}]; 
         Show[
           Graphics[{
             Table[{
               Hue[
                Part[$CellContext`hs, 
                 Part[$CellContext`indxy, $CellContext`i]], 0.15, 1], 
               Polygon[
                Part[$CellContext`g, $CellContext`i]]}, {$CellContext`i, 
               Length[$CellContext`indxy]}], $CellContext`glines}, 
            AspectRatio -> Automatic, Frame -> True, 
            PlotRange -> $CellContext`xylim, $CellContext`FL, 
            PlotLabel -> $CellContext`pl, Epilog -> {
              AbsolutePointSize[$CellContext`SP], 
              Table[{
                Hue[
                 Part[$CellContext`hs, 
                  Part[$CellContext`indpoints, $CellContext`i]], 1, 1], 
                Point[
                 Part[$CellContext`xy, $CellContext`i]]}, {$CellContext`i, 
                Length[$CellContext`indxy]}]}]]]; $CellContext`\[Sigma] = 
       Sqrt[1/5.]; $CellContext`green[
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]]] := 0.1 Sum[PDF[
            NormalDistribution[
             First[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]], $CellContext`x1] PDF[
            NormalDistribution[
             Last[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]], $CellContext`x2], {$CellContext`i, 
           10}]; $CellContext`red[
         Pattern[$CellContext`x1, 
          Blank[]], 
         Pattern[$CellContext`x2, 
          Blank[]]] := 0.1 Sum[PDF[
            NormalDistribution[
             First[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]], $CellContext`x1] PDF[
            NormalDistribution[
             Last[
              
              Part[$CellContext`means, $CellContext`i]], \
$CellContext`\[Sigma]], $CellContext`x2], {$CellContext`i, 11, 
           20}]; $CellContext`g4 = 
       ContourPlot[$CellContext`green[$CellContext`x1, $CellContext`x2] == \
$CellContext`red[$CellContext`x1, $CellContext`x2], {$CellContext`x1, -4, 
          5}, {$CellContext`x2, -4, 5}, ContourStyle -> {
           AbsoluteThickness[2]}, PlotPoints -> 30, PlotRange -> All, 
         AspectRatio -> Automatic, FrameLabel -> {
           $CellContext`fs["\!\(\*SubscriptBox[\(x\), \(1\)]\)"], 
           $CellContext`fs["\!\(\*SubscriptBox[\(x\), \(2\)]\)"]}]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->45349443],

Cell[CellGroupData[{

Cell["CAPTION", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "In a typical classification problem we wish to predict the output class, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1"}], "}"}]}], TraditionalForm]], "InlineMath"],
 ", given ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", "2"}], TraditionalForm]], "InlineMath"],
 " inputs, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "2"], TraditionalForm]], "InlineMath"],
 ". In the prototypical problem illustrated above, the observed training data \
consists of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "200"}], TraditionalForm]], "InlineMath"],
 " observations equally divided between the two classes. The 0/1 values are \
color-coded green and red. Based on this training data, our object is to find \
a predictor for new data, designated the test data. One method is to take the \
",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " nearest neighbors of the new inputs and predict the new output based on \
the most frequent outcome, 0 or 1, among these neighbors. By taking ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " odd we avoid ties. This is the kNN classifier and the idea is easily \
generalized to more than two output classes and more than two inputs. The kNN \
classifier is one of the most robust and useful classifiers and is often used \
to provide a benchmark to more complex classifiers such as artificial neural \
nets and support vector machines."
}], "Text"]
}, Close]]
}, Open  ]],

Cell[TextData[{
 "In this simple example, Voronoi tessellations can be used to visualize the \
performance of the kNN classifier. The solid thick black curve shows the \
Bayes optimal decision boundary and the red and green regions show the kNN \
classifier for selected ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 "."
}], "Text"],

Cell[TextData[{
 "Based only on this training dataset, it can be shown that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "17"}], TraditionalForm]], "InlineMath"],
 " is the best possible choice for ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 ". With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "17"}], TraditionalForm]], "InlineMath"],
 ", the expected misclassification rate on future data is minimized. See \
below for details."
}], "Text"],

Cell[TextData[{
 "In practice, though, we need to base the choice of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " solely on the training dataset. The pseudo-likelihood method of Holmes and \
Adams (2003) produces ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["k", "^"], "=", "7"}], TraditionalForm]], "InlineMath"],
 " while leave-one-out cross-validation yields ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["k", "^"], "=", "3"}], TraditionalForm]], "InlineMath"],
 ". Linear or logistic regression with an intercept term produces a linear \
decision boundary and corresponds to choosing kNN with about three effective \
parameters or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[DotEqual]", "67"}], TraditionalForm]], "InlineMath"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["DETAILS", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell["\<\
In \[Section]2.3.2 of [1], Hastie et al. pointed out that Voronoi \
tessellations may be used to visualize the performance of the kNN classifier \
and produced several examples. The data we use is generated independently of \
the mixture data used in those examples, but the overall setup is the same, \
that is, each class is generated from a mixture of ten normal distributions \
with the same means and variances as suggested in \[Section]2.3.4 of [1].\
\>", "Text"],

Cell[TextData[{
 "For this model, it can be shown that the optimal Bayes misclassification \
rate is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Eta]", "=", 
    RowBox[{"20.76", "%"}]}], TraditionalForm]], "InlineMath"],
 ". This assumes perfect knowledge of the model. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "\[Rule]", "\[Infinity]"}], TraditionalForm]], "InlineMath"],
 " as the training sample size, ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath"],
 ", also increases, the misclassification rate of kNN will tend to ",
 Cell[BoxData[
  FormBox["\[Eta]", TraditionalForm]], "InlineMath"],
 " for test data."
}], "Text"],

Cell[TextData[{
 "With a given finite set of training data (in the present case, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "200"}], TraditionalForm]], "InlineMath"],
 "), we can ask what is the best possible choice of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " in the kNN algorithm to predict future test data. This can be determined \
by simulation. We simulated a test sample of size ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "6"], TraditionalForm]], "InlineMath"],
 " and calibrated the misclassification rate for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", "3", ",", "\[Ellipsis]", ",", "101"}], 
   TraditionalForm]], "InlineMath"],
 ". It was found that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Eta]", "^"], "=", 
    RowBox[{"23.09", "%"}]}], TraditionalForm]], "InlineMath"],
 " when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "17"}], TraditionalForm]], "InlineMath"],
 " and that the standard deviation for ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Eta]", "^"], TraditionalForm]], "InlineMath"],
 " was sufficiently narrow to exclude other possible values of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 "."
}], "Text"],

Cell["\<\
In-depth treatments of the kNN method are provided in chapter 13 of [1] and  \
Hastie et al. (2009, Ch. 13) and \[Section]6.2 of [3].\
\>", "Text"],

Cell[TextData[{
 "[1] T. Hastie, R. Tibshirani, and J. Friedman, ",
 StyleBox["The Elements of Statistical Learning: Data Mining, Inference, and \
Prediction,",
  FontSlant->"Italic"],
 " 2nd ed., New York: Springer, 2009. "
}], "Text"],

Cell[TextData[{
 "[2] C. C. Holmes and N. M. Adams, \"",
 ButtonBox["Likelihood Inference in Nearest-Neighbour Classification Models",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://biomet.oxfordjournals.org/cgi/content/abstract/90/1/99"], 
    None},
  ButtonNote->"http://biomet.oxfordjournals.org/cgi/content/abstract/90/1/99"],
 ",\" ",
 StyleBox["Biometrika",
  FontSlant->"Italic"],
 ", ",
 StyleBox["90",
  FontWeight->"Bold"],
 ", 2003 pp. 99\[Dash]112."
}], "Text"],

Cell[TextData[{
 "[3] B. D. Ripley, ",
 StyleBox["Pattern Recognition and Neural Networks",
  FontSlant->"Italic"],
 ", Cambridge, UK: University Press, 1996."
}], "Text"]
}, Close]],

Cell[CellGroupData[{

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "\"",
 ButtonBox["k-Nearest Neighbor (kNN) Classifier",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/KNearestNeighborKNNClassifier/"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/KNearestNeighborKNNClassifier/"],
 "\"",
 " from ",
 ButtonBox["the Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/KNearestNeighborKNNClassifier/",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/KNearestNeighborKNNClassifier/"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/KNearestNeighborKNNClassifier/"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Ian McLeod",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Ian+McLeod"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Ian+McLeod"]
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system (Version 6 or higher) is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[1, 1, 1]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
KNearestNeighborKNNClassifier"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{710, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"k-Nearest Neighbor (kNN) Classifier - Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[637, 23, 155, 3, 70, "Section"],
Cell[795, 28, 3700, 64, 70, "Section"],
Cell[4498, 94, 28907, 689, 70, "Input",
 CellID->499886299]
}, Open  ]],
Cell[CellGroupData[{
Cell[33442, 788, 12797, 279, 70, "Output",
 CellID->45349443],
Cell[CellGroupData[{
Cell[46264, 1071, 209, 6, 70, "Section"],
Cell[46476, 1079, 1607, 39, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[48109, 1122, 354, 8, 70, "Text"],
Cell[48466, 1132, 477, 14, 70, "Text"],
Cell[48946, 1148, 805, 22, 70, "Text"],
Cell[CellGroupData[{
Cell[49776, 1174, 209, 6, 70, "Section"],
Cell[49988, 1182, 479, 7, 70, "Text"],
Cell[50470, 1191, 648, 18, 70, "Text"],
Cell[51121, 1211, 1263, 37, 70, "Text"],
Cell[52387, 1250, 157, 3, 70, "Text"],
Cell[52547, 1255, 236, 6, 70, "Text"],
Cell[52786, 1263, 485, 15, 70, "Text"],
Cell[53274, 1280, 171, 5, 70, "Text"]
}, Close]],
Cell[CellGroupData[{
Cell[53481, 1290, 355, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[53839, 1301, 978, 29, 70, "Text"],
Cell[54820, 1332, 427, 14, 70, "Text"],
Cell[CellGroupData[{
Cell[55272, 1350, 815, 24, 70, "Text"],
Cell[56090, 1376, 1201, 33, 70, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature lTj#A8i1Ed1UABTuHl4kYaQb *)
