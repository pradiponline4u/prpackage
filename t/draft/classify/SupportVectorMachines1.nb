(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    446973,       9598]
NotebookOptionsPosition[    339897,       7306]
NotebookOutlinePosition[    438545,       9346]
CellTagsIndexPosition[    438264,       9334]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Mathematica", "\[RegisteredTrademark]"], TraditionalForm]]],
 " ",
 "Journal"
}], "OnlineHeader"],

Cell[CellGroupData[{

Cell["A Flexible Implementation for Support Vector Machines", "Title"],

Cell["\<\
Roland Nilsson
Johan Bj\[ODoubleDot]rkegren
Jesper Tegn\[EAcute]r\
\>", "Author"],

Cell[TextData[{
 "Support vector machines (SVMs) are learning algorithms that have many \
applications in pattern recognition and nonlinear regression. Being very \
popular, SVM software is available in many versions. Still, existing \
implementations, usually in low-level languages such as C, are often \
difficult to understand and adapt to specific research tasks. In this \
article, we present a compact and yet flexible implementation of SVMs in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", traditionally named ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 ". This software is designed to be easy to extend and modify, drawing on the \
powerful high-level language of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Abstract"],

Cell[CellGroupData[{

Cell["Background", "SectionFirst"],

Cell[TextData[{
 "A ",
 StyleBox["pattern recognition problem",
  FontSlant->"Italic"],
 " amounts to learning how to discriminate between data points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 " belonging to two ",
 StyleBox["classes,",
  FontSlant->"Italic"],
 " defined by class labels ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", "i"], "\[Element]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"+", "1"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], TraditionalForm]]],
 ", when given only a set of examples ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "i"], ",", " ", 
     SubscriptBox["y", "i"]}], ")"}], TraditionalForm]]],
 " from each class. These problems are found in various applications, from \
automated handwriting recognition to medical expert systems, and pattern \
recognition or ",
 StyleBox["machine learning",
  FontSlant->"Italic"],
 " algorithms are routinely applied to solve them."
}], "Text",
 FontSize->14],

Cell[TextData[{
 "It may be helpful for newcomers to relate this to a more familiar problem: \
standard statistical hypothesis testing for one-dimensional ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 ", such as Student\[CloseCurlyQuote]s ",
 StyleBox["t", "TI"],
 "-test [",
 ButtonBox[
 CounterBox["Reference", "Casella"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Casella"],
 ", ch.\[NonBreakingSpace]8], can be viewed as a very simple kind of pattern \
recognition problem. Here, the hypotheses ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "0"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "1"], TraditionalForm]]],
 " correspond to classes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"+", "1"}], ",", 
    RowBox[{"-", "1"}]}], TraditionalForm]]],
 ", and the familiar"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"g", "(", "x", ")"}], "=", 
    RowBox[{"{", GridBox[{
       {
        SubscriptBox["H", 
         RowBox[{"0", ","}]], 
        RowBox[{
         RowBox[{"if", " ", "x"}], "<", 
         OverscriptBox["x", "_"]}]},
       {
        RowBox[{
         SubscriptBox["H", "1"], ","}], 
        RowBox[{
         RowBox[{"if", " ", "x"}], ">", 
         OverscriptBox["x", "_"]}]}
      }], ")"}]}], ","}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]]],
 " is the mean of within-class means,"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    OverscriptBox["x", "_"], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SubscriptBox["l", "1"]], 
        RowBox[{
         SubscriptBox["\[Sum]", 
          RowBox[{
           RowBox[{"i", ":", 
            SubscriptBox["y", "1"]}], "=", 
           RowBox[{"+", "1"}]}]], 
         SubscriptBox["x", "i"]}]}], "+", 
       RowBox[{
        FractionBox["1", 
         SubscriptBox["l", 
          RowBox[{"-", "1"}]]], 
        RowBox[{
         SubscriptBox["\[Sum]", 
          RowBox[{
           RowBox[{"i", ":", 
            SubscriptBox["y", "1"]}], "=", 
           RowBox[{"-", "1"}]}]], 
         SubscriptBox["x", "i"]}]}]}], ")"}]}]}], ","}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["l", "c"], "=", 
    RowBox[{"|", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", ":", 
        SubscriptBox["y", "1"]}], "=", "c"}], "}"}], "|"}]}], 
   TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", "0"], "<", 
    SubscriptBox["H", "1"]}], TraditionalForm]]],
 ", is called the ",
 StyleBox["decision rule",
  FontSlant->"Italic"],
 " or sometimes simply the ",
 StyleBox["classifier",
  FontSlant->"Italic"],
 ". We say that the decision rule ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]]],
 " is induced from data ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 ", in this case determined by computing ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "However, real pattern recognition problems usually involve high-dimensional \
data (such as image data) and unknown underlying distributions. In this \
situation, it is nearly impossible to develop statistical tests like the \
preceding one. These problems are typically attacked with algorithms, such as \
artificial neural networks [",
 ButtonBox[
 CounterBox["Reference", "Haykin"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Haykin"],
 "], decisions trees [",
 ButtonBox[
 CounterBox["Reference", "Russell"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Russell"],
 ", ch.\[NonBreakingSpace]18], Bayesian models [",
 ButtonBox[
 CounterBox["Reference", "Friedman"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Friedman"],
 "], and recently SVMs [",
 ButtonBox[
 CounterBox["Reference", "Vapnik"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Vapnik"],
 "], to which we will devote the rest of this article. Here we will only \
consider data that can be represented as vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    SuperscriptBox["R", "n"]}], TraditionalForm]]],
 "; other kinds of information can usually be changed to this form in some \
appropriate manner."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Support Vector Machines", "Section"],

Cell[TextData[{
 "SVMs attempt to find a hyperplane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalPi]", 
      RowBox[{"w", ",", "b"}]], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"w", ".", "x"}], "+", "b"}], "=", "0"}]}], ",", " ", 
    RowBox[{"x", "\[Element]", 
     SuperscriptBox["R", "n"]}]}], TraditionalForm]]],
 " that separates the data points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 " (meaning that all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 " in a given class are on the same side of the plane), corresponding to a \
decision rule"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "(", "x", ")"}], "=", 
   RowBox[{
    RowBox[{"sign", "(", 
     RowBox[{
      RowBox[{"w", ".", "x"}], "+", "b"}], ")"}], "."}]}], 
  TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "In SVM literature, ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]]],
 " is often referred to as the ",
 StyleBox["weight vector",
  FontSlant->"Italic"],
 "; ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " is called the ",
 StyleBox["bias",
  FontSlant->"Italic"],
 " (a term adopted from neural networks). This idea is not new; it dates back \
at least to R.A. Fisher and the theory of ",
 StyleBox["linear discriminants ",
  FontSlant->"Italic"],
 "[",
 ButtonBox[
 CounterBox["Reference", "Fisher"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Fisher"],
 "]. The novelty of SVMs lies in how this plane is determined: SVMs choose \
the separating hyperplane ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"w", ".", "x"}], "+", "b"}], "=", "0"}], TraditionalForm]]],
 " that is furthest away from the data points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]]],
 ", that is, that has maximal ",
 StyleBox["margin ",
  FontSlant->"Italic"],
 "(Figure 1). The underlying idea is that a hyperplane far from any observed \
data points should minimize the risk of making wrong decisions when \
classifying new data. To be precise, in SVMs we maximize the distance to the \
closest data points. We solve"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["max", 
     RowBox[{"(", 
      RowBox[{"w", ",", "b"}], ")"}]], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["min", "i"], 
      RowBox[{"d", "(", 
       RowBox[{
        SubscriptBox["\[CapitalPi]", 
         RowBox[{"w", ",", "b"}]], ",", 
        SubscriptBox["x", "i"]}], ")"}]}], ")"}]}], ","}], 
  TraditionalForm]], "NumberedEquation"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", 
     RowBox[{
      SubscriptBox["\[CapitalPi]", 
       RowBox[{"w", ",", "b"}]], ",", 
      SubscriptBox["x", "i"]}], ")"}], "=", 
    RowBox[{"|", 
     RowBox[{
      RowBox[{"w", ".", 
       SubscriptBox["x", "i"]}], "+", "b"}], "|", 
     RowBox[{"/", 
      RowBox[{"||", "w", "||"}]}]}]}], TraditionalForm]]],
 " is the distance between data point ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " and the plane ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPi]", "w"], TraditionalForm]]],
 ", subject to the constraint that this plane still separates the classes. \
The plane ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalPi]", "w"], TraditionalForm]]],
 " that solves (1) is called the ",
 StyleBox["optimal separating hyperplane",
  FontSlant->"Italic"],
 " and is unique [",
 ButtonBox[
 CounterBox["Reference", "Vapnik"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Vapnik"],
 "]. ",
 StyleBox["MathSVM", "TI"],
 " provides algorithms for determining this plane from data."
}], "Text",
 CellChangeTimes->{3.477633304046875*^9}],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.575304 0.123471 0.276845 0.0953614 [
[.08142 .26435 -7.0625 -10 ]
[.08142 .26435 7.0625 0 ]
[.32836 .26435 -7.25 -10 ]
[.32836 .26435 7.25 0 ]
[.82225 .26435 -4.5 -10 ]
[.82225 .26435 4.5 0 ]
[.5628 .08612 -14.5 -5 ]
[.5628 .08612 0 5 ]
[.5628 .18148 -13.9375 -5 ]
[.5628 .18148 0 5 ]
[.5628 .37221 -8.4375 -5 ]
[.5628 .37221 0 5 ]
[.5628 .46757 -9 -5 ]
[.5628 .46757 0 5 ]
[.5628 .56293 -8.8125 -5 ]
[.5628 .56293 0 5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.08142 .27685 m
.08142 .2831 L
s
gsave
.08142 .26435 -68.0625 -14 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
68.500 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(4) show
1.000 setlinewidth
grestore
.32836 .27685 m
.32836 .2831 L
s
gsave
.32836 .26435 -68.25 -14 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
68.500 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.82225 .27685 m
.82225 .2831 L
s
gsave
.82225 .26435 -65.5 -14 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.125 Mabswid
.14316 .27685 m
.14316 .2806 L
s
.20489 .27685 m
.20489 .2806 L
s
.26663 .27685 m
.26663 .2806 L
s
.3901 .27685 m
.3901 .2806 L
s
.45183 .27685 m
.45183 .2806 L
s
.51357 .27685 m
.51357 .2806 L
s
.63704 .27685 m
.63704 .2806 L
s
.69877 .27685 m
.69877 .2806 L
s
.76051 .27685 m
.76051 .2806 L
s
.01969 .27685 m
.01969 .2806 L
s
.88398 .27685 m
.88398 .2806 L
s
.94572 .27685 m
.94572 .2806 L
s
.25 Mabswid
0 .27685 m
1 .27685 L
s
.5753 .08612 m
.58155 .08612 L
s
gsave
.5628 .08612 -75.5 -9 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
68.500 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.5753 .18148 m
.58155 .18148 L
s
gsave
.5628 .18148 -74.9375 -9 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
68.500 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.5753 .37221 m
.58155 .37221 L
s
gsave
.5628 .37221 -69.4375 -9 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.5753 .46757 m
.58155 .46757 L
s
gsave
.5628 .46757 -70 -9 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.5753 .56293 m
.58155 .56293 L
s
gsave
.5628 .56293 -69.8125 -9 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 11.000 moveto
%%IncludeResource: font Helvetica-Oblique
%%IncludeFont: Helvetica-Oblique
/Helvetica-Oblique findfont 8.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(3) show
1.000 setlinewidth
grestore
.125 Mabswid
.5753 .10519 m
.57905 .10519 L
s
.5753 .12427 m
.57905 .12427 L
s
.5753 .14334 m
.57905 .14334 L
s
.5753 .16241 m
.57905 .16241 L
s
.5753 .20056 m
.57905 .20056 L
s
.5753 .21963 m
.57905 .21963 L
s
.5753 .2387 m
.57905 .2387 L
s
.5753 .25777 m
.57905 .25777 L
s
.5753 .29592 m
.57905 .29592 L
s
.5753 .31499 m
.57905 .31499 L
s
.5753 .33406 m
.57905 .33406 L
s
.5753 .35313 m
.57905 .35313 L
s
.5753 .39128 m
.57905 .39128 L
s
.5753 .41035 m
.57905 .41035 L
s
.5753 .42942 m
.57905 .42942 L
s
.5753 .4485 m
.57905 .4485 L
s
.5753 .48664 m
.57905 .48664 L
s
.5753 .50571 m
.57905 .50571 L
s
.5753 .52478 m
.57905 .52478 L
s
.5753 .54386 m
.57905 .54386 L
s
.5753 .06705 m
.57905 .06705 L
s
.5753 .04798 m
.57905 .04798 L
s
.5753 .02891 m
.57905 .02891 L
s
.5753 .00983 m
.57905 .00983 L
s
.5753 .582 m
.57905 .582 L
s
.5753 .60107 m
.57905 .60107 L
s
.25 Mabswid
.5753 0 m
.5753 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 .4 1 r
.015 w
.5082 .06265 Mdot
.61452 .42832 Mdot
.84539 .21398 Mdot
0 g
.008 w
.49423 .03982 Mdot
.23125 .01472 Mdot
.4547 .05357 Mdot
.5082 .06265 Mdot
.35343 .066 Mdot
.3515 .11592 Mdot
.31763 .12413 Mdot
.25141 .04801 Mdot
.02381 .1853 Mdot
.09305 .07774 Mdot
.6 g
.60063 .54586 Mdot
.7536 .46098 Mdot
.73596 .47305 Mdot
.97619 .37956 Mdot
.61452 .42832 Mdot
.85189 .45594 Mdot
.72117 .33321 Mdot
.84539 .21398 Mdot
.68935 .5615 Mdot
.91823 .60332 Mdot
0 g
.5 Mabswid
.17614 .60332 m
.19281 .58783 L
.19925 .58185 L
.20949 .57234 L
.22431 .55857 L
.22616 .55685 L
.24284 .54136 L
.24937 .53529 L
.25951 .52587 L
.27444 .51201 L
.27619 .51038 L
.29286 .49489 L
.2995 .48873 L
.30954 .4794 L
.32456 .46545 L
.32621 .46391 L
.34289 .44842 L
.34962 .44217 L
.35956 .43293 L
.37469 .41889 L
.37624 .41744 L
.39292 .40195 L
.39975 .39561 L
.40959 .38646 L
.42481 .37233 L
.42627 .37098 L
.44294 .35549 L
.44987 .34905 L
.45962 .34 L
.47494 .32576 L
.47629 .32451 L
.49297 .30902 L
.5 .30248 L
.50964 .29353 L
.52506 .2792 L
.52632 .27804 L
.54299 .26255 L
.55013 .25592 L
.55967 .24706 L
.57519 .23264 L
.57634 .23157 L
.59302 .21608 L
.60025 .20936 L
.60969 .20059 L
.62531 .18608 L
.62637 .1851 L
.64304 .16961 L
.65038 .1628 L
.65972 .15412 L
.67544 .13952 L
Mistroke
.6764 .13863 L
.69307 .12314 L
.7005 .11624 L
.70975 .10765 L
.72556 .09296 L
.72642 .09216 L
.7431 .07667 L
.75063 .06968 L
.75977 .06118 L
.77569 .0464 L
.77645 .04569 L
.79312 .0302 L
.80075 .02312 L
.8098 .01472 L
Mfstroke
[ .01 .01 ] 0 setdash
.02381 .51255 m
.02614 .51038 L
.04282 .49489 L
.04887 .48927 L
.05949 .4794 L
.07393 .46599 L
.07617 .46391 L
.09284 .44842 L
.099 .44271 L
.10952 .43293 L
.12406 .41943 L
.12619 .41744 L
.14287 .40195 L
.14912 .39615 L
.15954 .38646 L
.17419 .37287 L
.17622 .37098 L
.1929 .35549 L
.19925 .34958 L
.20957 .34 L
.22431 .3263 L
.22625 .32451 L
.24292 .30902 L
.24937 .30302 L
.2596 .29353 L
.27444 .27974 L
.27627 .27804 L
.29295 .26255 L
.2995 .25646 L
.30962 .24706 L
.32456 .23318 L
.3263 .23157 L
.34297 .21608 L
.34962 .2099 L
.35965 .20059 L
.37469 .18662 L
.37632 .1851 L
.393 .16961 L
.39975 .16334 L
.40967 .15412 L
.42481 .14006 L
.42635 .13863 L
.44302 .12314 L
.44987 .11678 L
.4597 .10765 L
.47494 .0935 L
.47638 .09216 L
.49305 .07667 L
.5 .07022 L
.50973 .06118 L
Mistroke
.52506 .04694 L
.5264 .04569 L
.54308 .0302 L
.55013 .02366 L
.55975 .01472 L
Mfstroke
.97619 .09242 m
.95979 .10765 L
.95113 .1157 L
.94312 .12314 L
.92644 .13863 L
.92607 .13898 L
.90977 .15412 L
.901 .16226 L
.89309 .16961 L
.87642 .1851 L
.87594 .18554 L
.85974 .20059 L
.85088 .20882 L
.84306 .21608 L
.82639 .23157 L
.82581 .2321 L
.80971 .24706 L
.80075 .25538 L
.79304 .26255 L
.77636 .27804 L
.77569 .27866 L
.75969 .29353 L
.75063 .30194 L
.74301 .30902 L
.72634 .32451 L
.72556 .32523 L
.70966 .34 L
.7005 .34851 L
.69299 .35549 L
.67631 .37098 L
.67544 .37179 L
.65964 .38646 L
.65038 .39507 L
.64296 .40195 L
.62629 .41744 L
.62531 .41835 L
.60961 .43293 L
.60025 .44163 L
.59294 .44842 L
.57626 .46391 L
.57519 .46491 L
.55958 .4794 L
.55013 .48819 L
.54291 .49489 L
.52623 .51038 L
.52506 .51147 L
.50956 .52587 L
.5 .53475 L
.49288 .54136 L
.47621 .55685 L
Mistroke
.47494 .55803 L
.45953 .57234 L
.44987 .58131 L
.44286 .58783 L
.42618 .60332 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "PlacedGraphics",
 ImageSize->{288, 177.938},
 ImageMargins->{{30, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],
 ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-4.66947, -2.90315, \
0.0282897, 0.0366287}}],

Cell[TextData[{
 StyleBox["Figure ", "SB"],
 StyleBox[
 CounterBox["NumberedFigure"], "SB"],
 StyleBox[". ", "SB"],
 "Two-class data (black and grey dots), their optimal separating hyperplane \
(continuous line), and support vectors (circled in blue). This is an example \
output of the ",
 StyleBox["SVMPlot", "MR"],
 " function in ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 ". The width of the \[OpenCurlyDoubleQuote]corridor\[CloseCurlyDoubleQuote] \
defined by the two dotted lines connecting the support vectors is the margin \
of the optimal separating hyperplane."
}], "NumberedFigureCaption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving the Optimization Problem", "Section"],

Cell[CellGroupData[{

Cell["The Primal Problem", "SubsectionNoSpace"],

Cell["\<\
It turns out that the optimal separating hyperplane solving (1) can be found \
as the solution to the equivalent optimization problem \
\>", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["min", 
      RowBox[{"w", ",", "b"}]], " ", 
     FractionBox["1", "2"]}], "||", "w", 
    SuperscriptBox["||", "2"], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subject", " ", "to", " ", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["w", "T"], 
         SubscriptBox["x", "i"]}], "+", "b"}], ")"}]}], "\[GreaterEqual]", 
     "1"}]}], ","}], TraditionalForm]], "NumberedEquation"],

Cell[TextData[{
 "referred to as the ",
 StyleBox["primal",
  FontSlant->"Italic"],
 " problem. Typically, only a small subset of the data points will attain \
equality in the constraint; these are termed ",
 StyleBox["support vectors",
  FontSlant->"Italic"],
 " since they are \[OpenCurlyDoubleQuote]supporting\[CloseCurlyDoubleQuote] \
(constraining) the hyperplane (Figure 1). In fact, the solution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"w", ",", "b"}], ")"}], TraditionalForm]]],
 " depends only on these specific points. Therefore, the method also is a \
scheme for data compression, in the sense that the support vectors contain \
all the information necessary to derive the decision rule."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Dual Problem", "Subsection"],

Cell[TextData[{
 "For reasons that will become clear later, ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]]],
 " often has very high dimension, which makes the primal problem (2) \
intractable. Therefore, we attack (2) indirectly, by solving the ",
 StyleBox["dual problem",
  FontSlant->"Italic"]
}], "Text"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["min", "\[Alpha]"], " ", 
    RowBox[{
     SuperscriptBox["\[Alpha]", "T"], "Q\[Alpha]"}]}], "-", "\[Alpha]"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"subject", " ", "to", " ", 
     SubscriptBox["\[Alpha]", "i"]}], "\[GreaterEqual]", "0"}], ",", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "T"], "\[Alpha]"}], "=", "0"}], ","}], 
  TraditionalForm]}], "NumberedEquation"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["q", 
       RowBox[{"i", " ", "j"}]], ")"}], "=", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["y", "i"], 
       SubscriptBox["y", "j"], 
       SubscriptBox["x", "j"], 
       SubscriptBox["x", "i"]}], ")"}]}]}], TraditionalForm]]],
 ". This is a quadratic programming (QP) problem, which has a unique solution \
whenever ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]]],
 " is positive semidefinite (as is the case here). It is solved numerically \
in ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " by the function ",
 StyleBox["QPSolve", "MR"],
 ". (At this point we need to load the ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " package; see Additional Material.)"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", "\"\<E:\\\\work\\\\thesis\\\\kaiTi\\\\nb\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "MathSVM`"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"<<", "Statistics`NormalDistribution`"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResetDirectory", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.477629633*^9, 3.47762965665625*^9}, {
   3.477629721234375*^9, 3.47762972559375*^9}, 3.477629781734375*^9, {
   3.47762981471875*^9, 3.47762981696875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "QPSolve"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"QPSolve[Q,p,a,b,c,y,\[Tau]] solves the quadratic programming \
problem min \[Alpha].Q.\[Alpha]+p.\[Alpha], subject to a\[LessEqual]\[Alpha]\
\[LessEqual]b and y.\[Alpha]=c. QPSolve uses the GSMO algorithm described by \
Keerthi et al. \[Tau] is a solution tolerance parameter (0.01 or so is \
usually good enough for SVMs). Q must be a positive semidefinite matrix to \
guarantee convergence.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.477629828953125*^9},
 CellTags->"Info3477658628-6996725"]
}, Open  ]],

Cell[TextData[{
 "The variable \[Alpha] has ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"dim", " ", "\[Alpha]"}], "=", "l"}], ","}], TraditionalForm]]],
 " the number of data points, so the matrix ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]]],
 " has ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["l", "2"], TraditionalForm]]],
 " elements, which may be quite large for large problems. Therefore, ",
 StyleBox["QPSolve", "MR"],
 " employs a divide-and-conquer approach [",
 ButtonBox[
 CounterBox["Reference", "Keerthi"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Keerthi"],
 "] that allows for solving (3) efficiently without storing the full matrix ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]]],
 " in memory."
}], "Text"],

Cell[TextData[{
 "Having solved the dual problem for \[Alpha] using ",
 StyleBox["QPSolve", "MR"],
 ", we obtain the optimal weight vector ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]]],
 " and bias term ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 ", that is, the solution to the primal problem (2), using the identities"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{"w", "=", 
   RowBox[{
    SubscriptBox["\[Sum]", "i"], 
    RowBox[{
     SubscriptBox["\[Alpha]", "i"], 
     SubscriptBox["y", "i"], 
     SubscriptBox["x", "i"]}]}]}], TraditionalForm]], "NumberedEquation"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["w", "T"], 
        SubscriptBox["x", "+"]}], "+", 
       RowBox[{
        SuperscriptBox["w", "T"], 
        SubscriptBox["x", "-"]}]}], ")"}]}]}], ","}], 
  TraditionalForm]], "NumberedEquation"],

Cell[TextData[{
 "where in (5) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "+"], ",", 
    SubscriptBox["x", "-"]}], TraditionalForm]]],
 " are any two support vectors belonging to class ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", "1"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1"}], TraditionalForm]]],
 ", respectively (there always exist at least two such support vectors) [",
 ButtonBox[
 CounterBox["Reference", "Vapnik"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Vapnik"],
 "]."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A Simple SVM Example", "Subsection"],

Cell[TextData[{
 "Enough theory\[LongDash]let us generate some data and solve a simple SVM \
problem using ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RandomArray", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"len", "/", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RandomArray", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"2", ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"len", "/", "2"}], ",", "2"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"len", "/", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"len", "/", "2"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "InputOnly"],

Cell[TextData[{
 "For this elementary problem, we use the simple SVM formulation (2) provided \
in ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " by the ",
 StyleBox["SeparableSVM", "MR"],
 " function."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]", "=", 
  RowBox[{"SeparableSVM", "[", 
   RowBox[{"X", ",", "y", ",", "\[Tau]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.2863006067334851`", ",", "0", ",", "0", ",", 
   "0.2176506043327714`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0.5039512110662566`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.4776300113125*^9}]
}, Open  ]],

Cell[TextData[{
 "The returned vector \[Alpha] is the solution found by ",
 StyleBox["QPSolve", "MR"],
 " for the dual formulation (3) of the SVM problem we just constructed. For \
this specific problem, the dual formulation used is exactly that described by \
(3), that is"
}], "Text"],

Cell[BoxData[
 FormBox[GridBox[{
    {"Q", "=", 
     RowBox[{
      RowBox[{"(", 
       SubscriptBox["q", 
        RowBox[{"i", " ", "j"}]], ")"}], "=", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["y", "i"], 
        SubscriptBox["y", "j"], 
        SubscriptBox["x", "j"], 
        SubscriptBox["x", "i"]}], ")"}]}]},
    {"p", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\[Ellipsis]", " ", ",", 
       RowBox[{"-", "1"}]}], ")"}]},
    {"a", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0", ",", "\[Ellipsis]", " ", ",", "0"}], ")"}], ",", " ", 
      RowBox[{"b", "=", 
       RowBox[{"(", 
        RowBox[{"0", ",", "\[Ellipsis]", " ", ",", "0"}], ")"}]}]}]},
    {"c", "=", "0"}
   }], TextForm]], "DisplayFormula",
 GridBoxOptions->{
 GridBoxAlignment->{
  "Columns" -> {Right, Center, {Left}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
 GridBoxSpacings->{"Columns" -> {
     Offset[0.27999999999999997`], {
      Offset[0.175]}, 
     Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
     Offset[0.2], {
      Offset[0.4]}, 
     Offset[0.2]}, "RowsIndexed" -> {}}}],

Cell[TextData[{
 "The support vectors are immediately identifiable as the nonzero ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]]],
 ". (4) and (5) are implemented as"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WeightVector", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7280208433509512`"}], ",", 
   RowBox[{"-", "0.6889525131462995`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.477630098921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Bias", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y"}], "]"}]], "Input"],

Cell[BoxData["0.32759946970677734`"], "Output",
 CellChangeTimes->{3.477630106578125*^9}]
}, Open  ]],

Cell[TextData[{
 "A plot similar to Figure 1 is produced by the ",
 StyleBox["SVMPlot", "MR"],
 " function. As in Figure 1, the solid line marks the optimal hyperplane, and \
dotted lines mark the width of the corridor that joins support vectors \
(highlighted in blue)."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SVMPlot", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayTogether", "::", "\<\"obslt\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The DisplayTogether and \
DisplayTogetherArray functions are obsolete in Version 6. GraphicsArray and \
Show may be used directly in the same role.\\\\\\\"\\\", \
\\\"MT\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.47763013146875*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6], PointSize[0.015], 
    PointBox[{{-1.7859058175447173`, 0.9158589034008169}, {
     0.6282144434793633, -1.635158525006701}, {0.7013499912919701, 
     1.1812060744236677`}}]}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{-3.264694248293151, -2.8353480626369176`}, \
{-1.7859058175447173`, 
     0.9158589034008169}, {-5.231282793205264, -1.6296540765802074`}, \
{-2.6467551811375643`, -2.2170540036329203`}, {
     0.6282144434793633, -1.635158525006701}, {-1.6613175842247812`, \
-3.6817417771046856`}, {-1.208723385494718, -1.370269288078924}, \
{-2.147026986615023, -2.3759549666815794`}, {-1.4699155659811018`, \
-3.329607070794099}, {-1.2139796658238642`, -2.4500887209670315`}}]}, 
   {GrayLevel[0.6], 
    PointBox[{{0.7013499912919701, 1.1812060744236677`}, {3.1609843022525475`,
      1.2607823459455574`}, {2.13680380714331, 1.9971008359873672`}, {
     1.3353118605327554`, 0.7648285872860847}, {1.8306265779925308`, 
     1.984215383740883}, {2.7595145553330096`, 2.7122790951467004`}, {
     1.700471667928016, 2.0134908698521623`}, {1.2389723637477283`, 
     3.2285885788134747`}, {0.9173588033170554, 2.9442188117823385`}, {
     1.2207604435896158`, 0.9608403588935355}}]}, 
   GraphicsComplexBox[CompressedData["
1:eJxl3XVUVVnfwPFLIxYWDuoYY2GhY2B7jg0GxqiP3ZjYNeYotmKgY3eijo7d
cS42JmOLopigoJSkxOu71v7+7lrXv571Xfd65vHuzz5nn8PmWmbgmM5+tiaT
aY6zyfT//3v3+ly/x7GFzXXChzrXmZjXvPKobanDLpbuvHnOs0UehaQLLzSt
GtiqoPSTcX+1bTS4gPT63tn2bgGu0ieXZ8x4reWXbjA4LW7V9LzSRv2Uga1O
55Zukf/b4/TEXNKh7xO8D3k6S/ueizvff4Sj9MMVXzwL77WX7u4Xs+PGG1vp
iAafCk//1Ub6aul7+fscyzboe7dDk69U+i79bPK1F5V3pEq/LRMSEvTLN+nY
OxeC01bEWzpubHEj32dpU6thUYFZb6U96hlDTj57Kr39Zq+sHf5XpEtfWran
/ZGjGt3/ysT/pix/IL0595USo7tHSi86ebvj9uFR0hP7PZr3YNpX6SPzRve2
vZ4ovff5+MmbfFMsx/OcsrL203TpVXOnH7jbL0u6Raw2sNZEky7j49Ys7q96
ttINmraYcSfTTvrkyFa53EMcpGus9V7rN99Jep+5TdljPrmk8eZxvMfT6zm5
xRuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcab9LKG403
Gm803mi80Xij8UbjjcYbjTcab3I85Y3Gm3z+ypuMj/Im46e8yfgqbzTeaLzR
eCsR2HZv96Uu4o3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuON
xhuNN2nljcYbjTcabzTeaLzReKPxRuONxhuNNzme8kbjTT5/5U3GR3mT8VPe
ZHyVNxpvNN5ovLn6NZ702S2XeKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm803mi80Xij8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4k89f
eZPxUd5k/JQ3GV/ljcYbjTcab/ZNqreYsdNJvNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTeaLzReKPxJq280Xij8UbjjcYbjTcabzTeaLzReKPx
JsdT3mi8yeevvMn4KG8yfsqbjK/yRuONxhuNtzS3MoXyeTqKNxpvNN5ovNF4
o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTepJU3Gm803mi80Xij8Ubj
jcYbjTcabzTe5HjKG403+fyVNxkf5U3GT3mT8VXeaLzReKPxFhtX8O22s/bi
jcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403aeWNxhuN
NxpvNN5ovNF4o/FG443GG403OZ7yRuNNPn/lTcZHeZPxU95kfJU3Gm803mi8
Rd60P/p7SzvxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8Ubj
jcabtPJG443GG403Gm803mi80Xij8UbjjcabHE95o/Emn7/yJuOjvMn4KW8y
vsobjTcabzTeHu1I+etKmI14o/FG443GG403Gm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuNNWnmj8UbjjcYbjTcabzTeaLzReKPxRuNNjqe80XiTz195
k/FR3mT8lDcZX+WNxhuNNxpvN6dF+3btbRJvNN5ovNF4o/FG443GG403Gm80
3mi80Xij8UbjjcYbjTcabzTeaLxJK2803mi80Xij8UbjjcYbjTcabzTeaLzJ
8ZQ3Gm/y+StvMj7Km4yf8ibjq7zReKPxRuNtSvCJhvfuZxl4o/FG443GG403
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuNNWnmj8UbjjcYbjTcabzTe
aLzReKPxRuNNjqe80XiTz195k/FR3mT8lDcZX+WNxhuNNxpvfXusf57wMUO8
0Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/EmrbzReKPx
RuONxhuNNxpvNN5ovNF4o/Emx1PeaLzJ56+8yfgobzJ+ypuMr/JG443GG423
lrlnTCmSnSreaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8
0XiTVt5ovNF4o/FG443GG403Gm803mi80XiT4ylvNN7k81feZHyUNxk/5U3G
V3mj8UbjjcZb1Yv9itQvkizeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80XiTVt5ovNF4o/FG443GG403Gm803mi80XiT4ylvNN7k81fe
ZHyUNxk/5U3GV3mj8UbjjcZboTHNj/eumijeaLzReKPxRuONxhuNNxpvNN5o
vNF4o/FG443GG403Gm803mi80XiTVt5ovNF4o/FG443GG403Gm803mi80XiT
4ylvNN7k81feZHyUNxk/5U3GV3mj8Ubjjcbbt6a+O00Lv4o3Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN6klTcabzTeaLzReKPxRuON
xhuNNxpvNN7keMobjTf5/JU3GR/lTcZPeZPxVd5ovNF4o/F2eU+RV61PRos3
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN6klTcabzTe
aLzReKPxRuONxhuNNxpvNN7keMobjTf5/JU3GR/lTcZPeZPxVd5ovNF4o/G2
MleE+4p3b8UbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm/SyhuNNxpvNN5ovNF4o/FG443GG403Gm9yPOWNxpt8/sqbjI/yJuOnvMn4
Km803mi80Xi7EO79z8Gy4eKNxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTdp5Y3GG403Gm803mi80Xij8UbjjcYbjTc5nvJG400+f+VN
xkd5k/FT3mR8lTcabzTeaLwdaXG45WTTXfFG443GG403Gm803mi80Xij8Ubj
jcYbjTcabzTeaLzReKPxRuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpsc
T3mj8Safv/Im46O8yfgpbzK+yhuNNxpvNN62d6j1sN3HveKNxhuNNxpvNN5o
vNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTdp5Y3GG403Gm803mi80Xij
8UbjjcYbjTc5nvJG400+f+VNxkd5k/FT3mR8lTcabzTeaNkfsrnIyw7LQjTZ
H6Ja9oeolv0hqmV/iGrZH6Ja9oeolv0hqmV/iGrZH6Ja9oeolv0hqmV/iGrZ
H6Ja9oeolv0hqmV/iGrZH6Ja9oeolv0hNPtDVMv+ENWyP0S17A9RLftDVMv+
ENWyP0S17A9RLftDVMv+ENWyP4TjsT9EtewP4fNnfwjjw/4Qxo/9IYwv+0NU
y/4Q1bI/RLXsD3GcMdl9xCPxRsv+ENWyP0S17A9RLftDVMv+ENWyP0S17A9R
LftDVMv+ENWyP0S17A9RLftDVMv+ENWyP0S17A9RLftDVMv+ENWyP4Rmf4hq
2R+iWvaHqJb9Iaplf4hq2R+iWvaHqJb9Iaplf4hq2R+iWvaHcDz2h6iW/SF8
/uwPYXzYH8L4sT+E8WV/iGrZH6Ja9oeoxtvmbZP/uuYYKd5ovNF4o/FG443G
G403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReJNW3mi80Xij8UbjjcYbjTca
bzTeaLzReJPjKW803uTzV95kfJQ3GT/lTcZXeaPxRuONxtu9hoebz3r2QbzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8SatvNF4o/FG
443GG403Gm803mi80Xij8SbHU95ovMnnr7zJ+ChvMn7Km4yv8kbjjcYbjTfT
syinugdixBuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTca
b9LKG403Gm803mi80Xij8UbjjcYbjTcab3I85Y3Gm3z+ypuMj/Im46e8yfgq
bzTeaLzReHNv4Pox9WK8eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3mi80Xij8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4k89feZPx
Ud5k/JQ3GV/ljcYbjTcabzUXVfV+tDdJvNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxJq280Xij8UbjjcYbjTcabzTeaLzReKPxJsdT
3mi8yeevvMn4KG8yfsqbjK/yRuONxhuNt7ZPvA8cWZEi3mi80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4k1beaLzReKPxRuONxhuNNxpv
NN5ovNF4k+MpbzTe5PNX3mR8lDcZP+VNxld5o/FG443G2+ByfnmW/Zku3mi8
0Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4k1beaLzReKPx
RuONxhuNNxpvNN5ovNF4k+MpbzTe5PNX3mR8lDcZP+VNxld5o/FG443G28zx
c0YPH5Ap3mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4
k1beaLzReKPxRuONxhuNNxpvNN5ovNF4k+MpbzTe5PNX3mR8lDcZP+VNxld5
o/FG443G21rzlrCWbXLEG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpv0sobjTcabzTeaLzReKPxRuONxhuNNxpvcjzljcabfP7Km4yP
8ibjp7zJ+CpvNN5ovNF46+7Uxz3I3UbHG403Gm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuONxhuNNxpv0sobjTcabzTeaLzReKPxRuONxhuNNxpvcjzl
jcabfP7Km4yP8ibjp7zJ+CpvNN5ovNGyfvMc2SZnma14o2X9plrWb6pl/aZa
1m+qZf2mWtZvqmX9plrWb6pl/aZa1m+qZf2mWtZvqmX9plrWb6pl/aZa1m+q
Zf2mWtZvNOs31bJ+Uy3rN9WyflMt6zfVsn5TLes31bJ+Uy3rN9WyflMt6zeO
x/pNtazf+PxZvzE+rN8YP9ZvjC/rN9WyflMt6zfVeBvbder0Ubb24o3GG403
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNN2nljcYbjTcabzTe
aLzReKPxRuONxhuNNzme8kbjTT5/5U3GR3mT8VPeZHyVNxpvNN5ovM2YsfDg
i8kO4o3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNN2nl
jcYbjTcabzTeaLzReKPxRuONxhuNNzme8kbjTT5/5U3GR3mT8VPeZHyVNxpv
NN5ovC3atSbCJ8ZRvNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxJq280Xij8UbjjcYbjTcabzTeaLzReKPxJsdT3mi8yeevvMn4KG8y
fsqbjK/yRuONxhuNt79v7cp3pp+zeKPxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4
k89feZPxUd5k/JQ3GV/ljcYbjTcab3sTjmoVHuUSbzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi8SStvNN5ovNF4o/FG443GG403Gm80
3mi8yfGUNxpv8vkrbzI+ypuMn/Im46u80Xij8UZ7Nmre7PL0wuZ/r0fGZZ3N
I99fQ/v/E/py6VBnnebP0/z5X19Vrhjnnkv80vx567b+7/N96bxO87r1/3+O
N2vOu4dtTxQ2j+9YboZ70bxmFy8X07ZnzjrN62+Hjj7uMiWXzus0/3+t/zz/
ff689X+fP8/r1t//zvE4vvV/n+Px951VeV+VltGO5sTZNzpouxz18XYbM55M
cJDPg+b1IS+Xhg7LsTP/2e3a5cRX9nrPkzPXZyyxldfpzCpX6uwtZqf7Lh8z
NNDNRt5PB9iE7OvRzUafd++yf6MWOQbvp/P+O7NusXI52ojZe13698o0eD/N
651rLtk3d3y6UbTH1F/nbPqu1Xs/qlXw4hR5nS5jP8kuumCaVnptp/e3tifJ
++kqh8d+8l3yTXP0rhPw9XS8vJ/m9RdJv+vltsYYdXr63z9pk6Dt/1/69JF3
Psjr9CyXsBH1Ez9rXyfPGeOX/FreT6/qf8PL6c07bUkT16ikTo/k/XS7UTMd
Dmx7rrXL0+SifZ8QeT/N6/FBQb5Tg4O16JrPGizNuK61eLxgcEiNuxqv06Uf
Vuqa4rHHcNx1osGDhuHyfrrR8lM1594IM05+WfVmR9xbeT/N61GLb+/pGRKt
FX57Y2PUp1eGewX7EYVWf5XX6ZSN/jYVFnw0KgwoWXRIzUR5P/22xaQ63dd9
MZocbjC1WfFkeT89NPVS7ZZdEo3uWd1elLRPk/fTvD627YTG32MztD7trvi+
eplsLNmwYtvTx1nyOv3HjhvDpvilGw+SHpt69jPpvJ/2Sbkd4Po103hV7P3v
Nx/a6Lyf5vXPTRMHennb6dvLD7vXpaHJnDLM9PfuC/byOl2s44heO3JszLYr
810r+LujvJ9eO80/+ssVO3O+0yVSZu9xkvfTrntGT2qwyEHOZ7yfZr4zf5mv
1t/3aj1/+f5N2vr7FJm/zFfr78Nj/jJfrb/PjPnLfLX+Pirr+cv3+9DW3/fC
/GW+Wn9fB/OX+Wr9fQvW85ffR6etf5+Z+ct8tf59VOYv89X69wmZv8xX698H
s56//L4Lbf37Fsxf5qv1fnnmL/PVer+z9fxlfyZtvZ+Q+Svz22o/GPOX+Wq9
n4f5y3y13o9hPX/5+S9t/fNO5i/z1frnVcxf5qv1zxus5y/PK2nr53nMX+ar
9fMY5i/z1fp+mvnLfLW+H2L+Mr+5HnN9Pr998LZKSx3NQbmdJ3Qu7KQfntpt
9Hk3B7PbG4ePDh0d9HVVGuR5Xc3WvOmUXY+zS+30pfZVX4w9azKXDrS543/D
Rs8+17CLw5JsY8+AnCal7Uz6e/9SiR47vhtdRmcMCp6ZqR0L+1ht7P1ko697
ik++5DRtY8Ct26s/JhrDriZUn+SfrJmG9344+nucMX7MlyIv3yVom2vEtMn6
33sjvfaD1PmnYrXHHn55F+eJMPIuDb3yx54P2rj4pHlFh/9nNLs8p1Rzjwit
dqRL4jq308ajl5GjL+a+p50/069w4zn/aXrndzE+YwK1Uglhm/8tF6EFjh/8
+6OZt4zLhXcUdB38Xiu57Mps3wEvjNUVFt8128Vr08eOmPg85L1xcOKe6lti
E7WhxSbsy/0wxrh6OSRo6uNkrfLbxl9Ljk8wXrm+Sup66cd1vW4z5zMZ3wzX
Q25n8q3M1twCW/3WaW6asWam+7JJF0x6njdtGn3OnWns2F3x0rsatrqtV4du
c//OMc4mNi9tdnfQZ1yrVG/5chvzNffOnTyXO+qpcVWuhXe2M/+n9w/YbPtj
HVTMs3PFog6ynrpXevHZP1Oc9DrLIhYkhjmYu6QsqFq1pqP+qxZSzi3a1vz8
9rxtr0fZ6wV+OZ4UPMHG3HdHQMHV+211l7c+8ydk5xjvJs+e3+qDSY9fXa3s
uiJZRtj6zPikptnapdRvfV81TzXCm6c96Xk2Q9u7/1mmTa9vxvuvSRdCaqRq
gb0ubCz/4+/9dUPcTo99SdqpWU6HnutRRlqLmEUrSsVr897eiy495o1hF3k3
IrbaJ21XYFWfsAZPjaJe1/afK/FWm7Vv8pyLnjeMbr9MjXEt+kQrWN93u3O/
G1pagW15jz0wtC9d1j9L7vxUG9Z476rXp84Y+67PO1Jr+hut5rtz7Up0fGTk
yUmut6fkF21+8SE99fpvjO3t12V7/pmgjbs2evn4NtHGmU3H++ce8E3rM2bK
5d294owHn+5fjvJJ1Xbn0aeP9Eoy7Bc4L9xePEvbOKDFGnsjxcg3YtXEJrYm
feUp78NbWmcYxYO27zk42UZfkLt9qFdYllHr9QWnxf3s9SZH9iUMPWgya463
66U+dNDPhh+YdWKsrblttefD/byd9NoOh3Lb1LE3d+8StfHhBct4Wa+fuR7K
eluNH831k+sX60uuXzTz605Ju5XtzqTJ+Z71GOd7mvnR2+Zcdc8pp+X8yPpF
fh6gGt8pfTO61gz+rnE9Zv3N9ZrGX6Uh97vO620vvauzd+P2O+3M/P991rJA
yLmqGXJ9Yz3L9Y/GV3Qxfdyqgl+k790pm/9Upc8y301tbo5cUd5brhesD7me
0PgJH3hxYmy7KOlvR54/uVnns/x9P9eNLXe1ZobG+Zf1FudnGh8Vz/z7pFiM
rfSh23XiOu2xk/sb6/nJeofxZf3BfOR8SbNe4e8v32eixpvrN/OL8x/N9Z6/
r+z/V+PP9Y/5wvmM5nrJ34/rFdcXfOOf8xNtff+7pNOp3sd7O8t6kX9vAv9N
T8Sc7t/SSV7HF+tJmusT3vDJ58v1ivMh60Xr+0PWl1zPOF/yOp8/60ua6x3n
T9aH1veDrCe5/nF+Zb1ofX/I+pLrI+dfjsd6kvUnzfs5P3M85hPrUZrrLfOL
+Ygvrr+c31lvWt9fsj7l+sz5n9fxx/qU5vrN9YD1pfX9JOtRrudcL1hvWt9f
sj7les/1hOPJ/aVav9K8n+sNx+P8wXqWZv3A+YTzD/OL9QTXK9ar1venrG9Z
b3A943Xmn+w/Yf2q1iNc31ifWt+Pyv46tT7h+sd61fr+lPUt6xeujxyP9Szr
X5r3c/3keJwvWQ/TrIc4f3K+5fzC+ojrL+td6/tb1sesn7g+8zrnH9bHNOsr
rtecb7k+cf7k+sL5kOsD5yf59zvUeoz1MvernG9Yj7F+5vzP/SznF5r1Gutr
zkfcz/I6623uVzn/sJ5jfcD5gvMN6zvW45wvuD9lvcd6nPtP5j/rPdbnXI+4
P2W+06wHWb9zfuD+lNdZz3P/yfmA9SLrF+Yv85/1I+t95i/3m6wnWe/L7xep
+ch6kvU/10fuN5l/NOtN7g+Yr9xv8jr3C7L/Qs1P1qOsr5hPzEfWp9xPMJ9k
P5Var3I/wf0h84P1KvcXXK+5f2Q+0Kxnuf9g/nD/yOvcj+Cd6y8euR7ih+sL
48v5nvHg/MnnxfmMvx/nB/77zFeuv6yXmE801xfWQ/ikOX+y3mG8ac4PrGf4
/GiuxzzvYT5x/eV6w/MQfHJ94XzK8wLGm/Mn9wvD12/dmPrZ0fxn97zu07yc
fvr3blr823JWweqWf5+kRn33+FKdbMxNo/bZHj9hef6VeCt/46ZdLN+Pzfni
w/GKS1eOtnzf8aXQe6P/OZZk5Itd9Oypn+V51tjj3dp/25380/c9Pvtc3//y
JMv38y1wW1QrLSvSyNhRvOmdZh9kfs8aMLqrS8Drn74/5uSGOuEb9lyz7P+e
NKvvgMvPtad9ruazW7Jenift7jjifO9fQn/6fef+73aWvhZm+f3U570OHGy9
O0Er0MN/Ua32sTIfy/sN6zAzKv6n35/oXOykTepTy373xrZO+b/6mPSsfDnx
FStbnudsaP37jNwxlv183A8Mie1X5aGDZX/WtAGBZ6+9c9Dti8x81G6K5flL
99/dNl56avn5oN/y1pvqfnDWXzjcHHVrtqN5/O8TB7v0cNIL7LwaV/6Vvbm0
/8py/l9t9KDF40bd8ck2qua/+KXJQJOeETJi3Fz778ba9j1CNzmla6b7Pb63
e5poHF59rFfTuGQtLN/ebKdycUa+gk9O56r9UetR60vtgrPCDH3ropdd7CK1
8OCVFca3/se4vO61c9GaQVr8qXGrY9pGaE1fugeu3HzdCB5xPWRhjQ9a/8A1
v23pFGN8iMvofMUlRftldkK2R0i8MfO0TYc8HdO18I4FC+SelWY06rp44I5L
Jt1wOTvLb+13w/lsYGTLAbb68TZ6TlgdO3OHtes3zC/mrO8PLuSVHWJvLpmx
qWjli7n02NcROaVLOespf1z3/POwgzkjwCU0aZWjXjn+8pGHeezNG4plGAEn
bPW+XybGjI3NMfZerLC4q4eNfr386LiKwZlG0rOLJ3Ku52jF/ev22JOWbuyK
n79q9PRUrdbIbjP31U4wLni9Lld40DetfutttsarGCPl9ozyg9t90hZezqi6
2/mp4dG9epvDxd9pf3gbU01RV4wa0z/EenV9oa0dcHFk31vrtTafsg60n3zC
yL/LuNYk5o32dUDPMlmz/jOa1Lx7MWxStDbtwdcTzepHG+6BqY9KDvumebdq
tDJ1+Ffj6B/ZYUMPpWo9i7dtMrhEolH+f2vapV3K0O4e+tC6nkuG8ZvT0h1J
K2z040MDT676Lcv4MmJ5qfU17fQGm58MOjfG1jz8/dqetXycdM/0/RujvtuZ
vbw3Pnsa46zH2U4IKdf65+ftkX0W/ZH93UHuj3qUHZ/HIa+DecfH59+Pffz5
+fud6F7Xcpe0Nzv8Gzz2fnnL8/aIUi+WrZ1ked7O/dT5CdXruuu25lNB+f7p
c83y/H2lXbOb5YpYnr+zPtmTbbu/wkDL83ivRc+v9PyYbQyfNOlDzOCfn8+X
LXSozjBny/P5fFtnB0+q/N3w7vPl69Yoy/et83w+3aOL+9x26Ua63qVStYWZ
sp45WO78oPMVLM/nOT+HNfmeuWVlstHb+betPtd/fl6/r8vOyDOPEuT+yMOI
2R34Jc4w7scVHOKQ+tPze9PjVYuCf481FvRdmrl1ruXnb3WbJXpVKxsv90Pc
T/1retMh4ux7I6ztsbeT53+R9VCtQrP/t/qq5fk966Hz3ft6VphneZ4/fN7B
5F55HhrrwtvfOWwX/dPz/Rr9k6eWrXRDnu+XHlO2QMkJRwyXv/Z4zJj1SO6f
eL7vfbX1riLPDmg7iweUG5F+V9ZP1eqfTX2RfFme73P9qrrjTvl1bR5oUT1D
qtQNPfzT8/6ocutvF9lied7vmj8hKqP7e23Qy2a/bql04afn//XSfewjC0dr
OdPfbp9bIELWX1sm7+q1x+eN3A9xP7Xk7vdGBwLjtAaHH39c5PJe1l+PopzG
+9+2PP9n/RUX9qRBgwDLzwNsWtmFVu2frE0o3SCrQ+Cnn34+4Ha++v9KNUmV
51+Va/T+UKBEunZly8bw/vuS5P6Jnw802bNogn1GhlbwXK3tD5wtP+/r9+SO
X4vhKXL/xPV96Io3Kz6dzNaOJvpVORX6888Lbjb6tVtUPcvPC/6YUmtLZEVb
vU2V9ac2LMn46ecHL4/6vH/uZqc38501pIaj5ed/w1628Rl+yvLzAu6nEipM
Hn/nm70eNKJo1Z1DLD8/OJ32Lt8LN8v+O9Z79pt3mowHlvXhiidnWp8JcdJf
LTiSUOjGzz9fKFbg/vKjRyw/X9jd9sPjA9ty6T4b49f91iSXfqDYsYbmV45m
xwp1V113dND7Bxo1q4+wNRcKHdRrwzQ7/W+PCyeW3DCZZzqZ6qaUytTWre2f
uqZEijH8XG+v1UvStWMPZ+4+OiDJeDyj3umzbRK0XGeCXKp1+WC8nF929aXB
sdqpTs7lvVZHGJ6XO/m6fbqlBa3vtuuGV5g219l5U8USu7QTdXeenRj9Qlvi
k/x0SGSEMSok/ORAU5y2+hfv1tGlPxi+Ht+6TbuWqCWuHbnriF+yEfk2d2h6
3Wwtpv7BC2Hd04xbU4JNKQdM+t2VG4Im/2oyn7kXtKXRY3vd/MX/5q79NuZ5
NdcUfzPFUZ/9aHu1iDsOessmIePmNLQzB065m3JYt9enhV9MernexmyevsL9
lI2d3jwgbcGd1ibzuMEPR5U9mKUNzBg0qYHxY91/oKopdHWGdqdmn6kJU78Z
oc9zf/34JFHb+dd6x8kbftxHaLdM7jPjtAnxS/K9z/fWOJRRe8LEsp+1xUsr
x3rcf2Z86DLZVt/zULtWcFW3kd2vaL+dHFW9R/6Lmrni4E09Qp5oFx8HZx49
/NR4nP7wrPv5GO1Q3x3Plzm/NQKuxj97/FuCtjX94V9xRpRx4dKLdfYe37Sc
+uv95z5PMgr/5dy265pM7X1Sk/CIhB/n2Vb5W28Nz9GCr/aLNf7NNh6UWNn3
s5293kqzq7bsncm8dfbql8v3OuhTGp5++WiYrbmy64CTn5o66R6nV7WvGuCs
f6ra2rfML47mGxP3vopZa3nezfO/8tMLpU6b4GheN3XBCVdvy/4Kv5C9uzvW
y9Gq9x2a9GpAutEiPpfW3BQu94fHb16J+Pb4ubb5vxcbfs27X5s4x6ZIXGvL
z+dzR1yt0619ouFd3OHukcQMrcst3avpAst+kgwXc/fYUo66v2/XAa1W25kv
/NN1enR1R71+0WZBlXfbmV+NcdWHZudohV2H1/y91o/r+LqLCwNaWPZjvNr0
/XQF3yQtaPKi19PXfDKaL5q0OGtzkjbq3aZ5xRp9NjYGjGjb4etL7dXRvX67
Hwwwlm5wn5ic94E8TyoztaxjteVPjMPtWlwv81uM9qS4zYr/rXtkuKwNazjp
l8/aKs9eG7WFCcbA4XbL+5bJ0KIH3Wo6s22WPE8Z1T1vw8Zrso2M5vYvxqTY
6dXcUjruj84yXjfPrzXdZKefqqaPut/E8jy6SqOJfzg/sfz7hcM/jmvY5ppJ
j5zgf+Tx4++Ge4+XpabZW/a78Hxkw7O1X0e7ZxoPp5W77Pre8v3btb/3KhSw
4o3mM36QXcSZc0af4Z9ORs+xPH/mecrFogsDjg00jBsus5ZcWGH5/phGu/Lf
KJcSZ6xzMLmem5Wm/Ru0tVDRfJbnzzx/2Z7ccusv1dI0r9mDnOL+sfz+g39Y
3+jEvvbmymWKp83ukkuvvsvn9PyKlufPPI/u49mzpqdHLn2nX2Z0M+9c+r1X
3ssmfHI0e/U03HKSHfWSoc3DZkyyNzfPinn933AHvbOf3vnZA1tzh+2/7N8d
YacvtGn8qFYNG/O7v1886b/URj/4dIzntD+zjNSTwx/k+ZipzfAe6BX95cd9
e+blwcfupmsfZ/dqsO3HdeTXbXHV5jdN09x/7X4hwyHR8Prgba5cKVmz/2fn
7EFzvhgdquzsHOaa+GPc1yz6L+WjEfY2JTQm/osWHLhwpeYfaRQ/aTvnZfB7
LeDpnXGrxt0ysjfe//tDYJj2bcc236y3odqSuw/+jDt0ROseN2LdTsdwrbfd
9egblbYbzbULrTd6R2quHYcObXn3jjH+XqhW9eFHbdcK3xF5boYbO/o8rXup
zxdt+/mJruf/fmcMm5xY1ONbgtb107AetyJijds7MoOKvEzRpkbbOG/c9s3I
qOGyJHhIljZg575J306nGj4znJundf1xPcuZfrBMi3SjuqdLQJuKNnr9s78V
m9E70/gelNcUF2qrl5kQuvDJxBzjWrLrrNX+9vpctzPT1reyMQf1KJxZN7+j
Hl8mud3L9XbmZmPcz3rOddaPOFc6VuSCk243vWX++60czKG+AS3O77LXRx1v
UmiBja35ScK/eZcXtdN3dGi45k1fk7lP85bjp3Sy1f9sOOFgyeI5RmzBxrka
jM/WfA76nQhcmWbY91i76XWP79rR933PNG+bbFRqViL1fydTNN+zXZp0GxRv
9Lp3r/iuefGa1mV54KKj74xPHh17Bz37rJVaYlPpS/tww3bM/q9e5igtPiOp
Rq8rD407+X4du/HiE62qU66Lxzad1Qb42k8YcOaqVql/n22uMx5qE4fdOfJi
pNl44Xil+btl77SzNvd29p8RaWwuGLdhbqd4bf6k4rOKHPpo1A5PXnNn7Y/z
RPXLMWOufTJyGqcXGlc/WZu31PM//0JJhuddxzx2V79rI1s+bnKjSopx/e+8
zu1y5Wgte3d45xuWYRSJzB2yOc1GzzXM9/Wc2SbzP8EFL35o7KBnXS3jdjiP
rXlybreGSyId9ckTlh699sNx74tFp7086qT/H6Haq94=
    "], {{{}, {}}, {{}, 
      {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV02VgFHQcx+EbCBsh3UqMLikJ6VZSYHTDAFFiA0lhwEanIJ3S3R0C0o2g
IA0KikqXdD68+Nzz/f3v7V1oeGRYRFAgEIjrIyo4EAgLCQR2MITTmYe5lUs7
3eW5jLvUyf6ZM9RPdd27uVyF7ML6VBWUWv291+MexuM+duZepuEA1ud+xudB
RvAA03IFDyvSPsSZilYD9xGuVCW7sirqqHuWYlTEvYp5+YmO2114jOk4kA35
CxPwJLvyBD/iIDbir0zIHzlYje3fuFqn9a37FGdriJq4f+caFbU/UzF9ro81
1HtTnuGHPMduPMv0HMZmPM9EvMjuvMAMXMvL6mFf4hwNV3P3Fa5TFbuqvtAf
7rkaoeLu9czH/Lpq9+SfzMiRbMFrTMy/2Yt/MRNHsSWvMwnncbRa2f9wg/5T
b/e/nK8xau2+wY0qYZdSSVVTqL73Hs6bTMrb/I63mJlj2YZ3mIz32Id3mYWb
+EB97ftcoHFq637Izaph11R1PXIv1A8q7d7CAiyox3YU/2dWjmc7PmFyPnv/
2+dTZuMEfsXnTMFFnKj29gtu1Sv1d7/kYk3S1+7X3KYydjmV1ZfKrsnev+Eb
pmTg/f9Fb905OIUdGKRUiq1oxVJO/eT7OIzRB1rinqqOdlxtt2uzjmopWEu9
TdM7S5qL3g==
        "]]}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxl3XVwFNnagPGJK4HFXRaXxd16cOfii9tiwReCO2RxCE7w4LCLu4VuLHiQ
ECRISIJGiBAn8vFVneedquGvW0/N0Mud85vTp7tPQqmhE7oNtzWZTO+cTab/
/9+HAYuGB0fnNeqEjHSu45XDWHPStsRxV0t3277g5dIKeaTzLjGtG9o6t/Tz
v+d1aDzsN2nf/ln2+Rfmkj67On12qJZTuuGw1Nh1s3JI6w2Sh7Y+7ybdMmdi
cFqCi/TdD/Ftj1Z1lu58Kfby4NGO0kE+MVXzHrCX7j08avftMFvptw2/5p1V
zEb6ZsnAnANOZel04P27STcq/pB+OfXW60q7U6TDS127trZgonT0gysHU33i
LB07sYjuESltaj3q88rMcOkK9fURZ1++kPa70y9z99gb0iWvrtrf6cRJjR58
w+vJtNVPpbe73Sg6vvd76aVn73fx8/ws7TXomffTmd+kT3iP728bkCB94NWk
qds6J1uOV3Xamtov0qTXLZr178NBmdIto7WhtbxMZhmf/M1j59W3lW7YrOXs
Bxl20mfHtHYpdM1BuvqmtpuG/+MkfchoX/pUOxdpvFU43edFQLabeKPxRuON
xhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjTVp5o/FG443GG403
Gm803mi80Xij8UbjTY6nvNF4k89feZPxUd5k/JQ3GV/ljcYbjTcab0VXdjjQ
e4WreKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjTVp5
o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4k89feZPxUd5k/JQ3GV/ljcYb
jTcab7mGN5kSmd9FvNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxJq280Xij8UbjjcYbjTcabzTeaLzReKPxJsdT3mi8yeevvMn4KG8y
fsqbjK/yRuONxhuNN/um1VrO3uMk3mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4k1beaLzReKPxRuONxhuNNxpvNN5ovNF4k+MpbzTe
5PNX3mR8lDcZP+VNxld5o/FG443GW2r+Unk8qjqKNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8UbjjcYbjTcabzTepJU3Gm803mi80Xij8UbjjcYbjTca
bzTe5HjKG403+fyVNxkf5U3GT3mT8VXeaLzReKPxFh2bO3zXRXvxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcabtPJG443GG403Gm80
3mi80Xij8UbjjcabHE95o/Emn7/yJuOjvMn4KW8yvsobjTcabzTe3t+xP1mj
lZ14o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuNNWnmj
8UbjjcYbjTcabzTeaLzReKPxRuNNjqe80XiTz195k/FR3mT8lDcZX+WNxhuN
Nxpvz3Ynz7vx2Ea80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vNF4o/EmrbzReKPxRuONxhuNNxpvNN5ovNF4o/Emx1PeaLzJ56+8yfgobzJ+
ypuMr/JG443GG423OzO/dO7Z3yTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG
443GG403Gm803mi80XiTVt5ovNF4o/FG443GG403Gm803mi80XiT4ylvNN7k
81feZHyUNxk/5U3GV3mj8UbjjcbbtINnGgU+ytTxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm803mi80Xij8UbjjcabtPJG443GG403Gm803mi80Xij8Ubj
jcabHE95o/Emn7/yJuOjvMn4KW8yvsobjTcabzTeBvbxfRX/KV280Xij8Ubj
jcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/EmrbzReKPxRuONxhuN
NxpvNN5ovNF4o/Emx1PeaLzJ56+8yfgobzJ+ypuMr/JG443GG423Vm6zp+XL
ShFvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLxJK280
3mi80Xij8UbjjcYbjTcabzTeaLzJ8ZQ3Gm/y+StvMj7Km4yf8ibjq7zReKPx
RuOtiv+gfA3yJYk3Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuN
NxpvNN6klTcabzTeaLzReKPxRuONxhuNNxpvNN7keMobjTf5/JU3GR/lTcZP
eZPxVd5ovNF4o/GWZ0KL0/2rJIg3Gm803mi80Xij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN6klTcabzTeaLzReKPxRuONxhuNNxpvNN7keMobjTf5
/JU3GR/lTcZPeZPxVd5ovNF4o/GW2KzzHtOSb+KNxhuNNxpvNN5ovNF4o/FG
443GG403Gm803mi80Xij8UbjjcYbjTdp5Y3GG403Gm803mi80Xij8UbjjcYb
jTc5nvJG400+f+VNxkd5k/FT3mR8lTcabzTeaLxd35/vXZuzX8QbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm/SyhuNNxpvNN5ovNF4
o/FG443GG403Gm9yPOWNxpt8/sqbjI/yJuOnvMn4Km803mi80Xhb4/K2kE9E
uHij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG401aeaPx
RuONxhuNNxpvNN5ovNF4o/FG402Op7zReJPPX3mT8VHeZPyUNxlf5Y3GG403
Gm9XQtr+d6R0iHij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4
o/FG401aeaPxRuONxhuNNxpvNN5ovNF4o/FG402Op7zReJPPX3mT8VHeZPyU
Nxlf5Y3GG403Gm8nWh5vNdX0ULzReKPxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8SatvNF4o/FG443GG403Gm803mi80Xij8SbHU95ovMnn
r7zJ+ChvMn7Km4yv8kbjjcYbjTe//9UK6vjpgHij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG401aeaPxRuONxhuNNxpvNN5ovNF4o/FG
402Op7zReJPPX3mT8VHeZPyUNxlf5Y3GG403WvaHbM/35n+rrmmyP0S17A9R
LftDVMv+ENWyP0S17A9RLftDVMv+ENWyP0S17A9RLftDVMv+ENWyP0S17A9R
LftDVMv+ENWyP0S17A9RLftDaPaHqJb9Iaplf4hq2R+iWvaHqJb9Iaplf4hq
2R+iWvaHqJb9IaplfwjHY3+IatkfwufP/hDGh/0hjB/7Qxhf9oeolv0hqmV/
iGrZH+I4e2qh0c/EGy37Q1TL/hDVsj9EtewPUS37Q1TL/hDVsj9EtewPUS37
Q1TL/hDVsj9EtewPUS37Q1TL/hDVsj9EtewPUS37Q1TL/hCa/SGqZX+Iatkf
olr2h6iW/SGqZX+Iatkfolr2h6iW/SGqZX+IatkfwvHYH6Ja9ofw+bM/hPFh
fwjjx/4Qxpf9Iaplf4hq2R+iGm/bd02dd8vxvXij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG401aeaPxRuONxhuNNxpvNN5ovNF4o/FG
402Op7zReJPPX3mT8VHeZPyUNxlf5Y3GG403Gm+BjY63mPvyo3ij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG401aeaPxRuONxhuNNxpv
NN5ovNF4o/FG402Op7zReJPPX3mT8VHeZPyUNxlf5Y3GG403Gm+ml5+d6v0b
Jd5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReJNW3mi8
0Xij8UbjjcYbjTcabzTeaLzReJPjKW803uTzV95kfJQ3GT/lTcZXeaPxRuON
xluhhrk+pfjHiTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm803qSVNxpvNN5ovNF4o/FG443GG403Gm803uR4yhuNN/n8lTcZH+VNxk95
k/FV3mi80Xij8VZzaZW2zw58F2803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovEkrbzTeaLzReKPxRuONxhuNNxpvNN5ovMnxlDcab/L5
K28yPsqbjJ/yJuOrvNF4o/FG463D87b/nvBJFm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuONxhuNNxpvNN5ovEkrbzTeaLzReKPxRuONxhuNNxpvNN5o
vMnxlDcab/L5K28yPsqbjJ/yJuOrvNF4o/FG421YmeHuq6aniTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803qSVNxpvNN5ovNF4o/FG
443GG403Gm803uR4yhuNN/n8lTcZH+VNxk95k/FV3mi80Xij8TZn0oLxnkMy
xBuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcab9LKG403
Gm803mi80Xij8UbjjcYbjTcab3I85Y3Gm3z+ypuMj/Im46e8yfgqbzTeaLzR
eNtk7Hjcqn22eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4k89feZPxUd5k/JQ3
GV/ljcYbjTcab72dBhRaW8jGjDcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm803qSVNxpvNN5ovNF4o/FG443GG403Gm803uR4yhuNN/n8
lTcZH+VNxk95k/FV3mi80XijZf1WdUz77FW24o2W9ZtqWb+plvWbalm/qZb1
m2pZv6mW9ZtqWb+plvWbalm/qZb1m2pZv6mW9ZtqWb+plvWbalm/qZb1m2pZ
v9Gs31TL+k21rN9Uy/pNtazfVMv6TbWs31TL+k21rN9Uy/pNtazfOB7rN9Wy
fuPzZ/3G+LB+Y/xYvzG+rN9Uy/pNtazfVONtYs8Zs8bZ2os3Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN6klTcabzTeaLzReKPxRuON
xhuNNxpvNN7keMobjTf5/JU3GR/lTcZPeZPxVd5ovNF4o/E2e/aSI6+nOog3
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN6klTcabzTe
aLzReKPxRuONxhuNNxpvNN7keMobjTf5/JU3GR/lTcZPeZPxVd5ovNF4o/G2
dO/Gt+2iHMUbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm/SyhuNNxpvNN5ovNF4o/FG443GG403Gm9yPOWNxpt8/sqbjI/yJuOnvMn4
Km803mi80XjbcG+vx4VBzuKNxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTdp5Y3GG403Gm803mi80Xij8UbjjcYbjTc5nvJG400+f+VN
xkd5k/FT3mR8lTcabzTeaLwdiD+plXvmIt5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTeaLzReJNW3mi80Xij8UbjjcYbjTcabzTeaLzReJPj
KW803uTzV95kfJQ3GT/lTcZXeaPxRuONrtq4RfPrs/IaxwLex2ZedJffX0OP
/e/umxUjnc00f57mzxd7V6l8bCEX8Uvz563b+r/P70vndZrXrf/+HG/ugoig
DmfyGpO6lJldqEAOw7Wuq2nXS2czzevhI8efdp3mYuZ1mr+v9Z/nv8+ft/7v
8+d53fr3v3M8jm/93+d4GZVv1DlQ2E4+z+m9bl1PeGcvvdDm2qE+vWzMe3Y9
verTys3g/XSOY3PqFS6TrW2afnNVqScu8n6a15d3Pdf/dH9no0CfGcUWbPuh
za10qHKrL47yOl3Kfordl9yp2iS7renPJzvI++nKxyd+7bw8URvxZsXdUdl2
8n6a1/ueneObvtzWqNN37KOzNvFa59UTRq7MbyOv03NdH49ukBCpeQdeH9u4
ZbbO++l1g2/XdQqL0EbPP+A6uF+GzvvpjuPmOPy765XWrebyQ4smpcn7aV6v
/2Fc64PLkvUvNV82XJEeoJXc1PXDPb/v8jpdMqhiz+QK+3XHtnUWfjsfJ++n
G68+V3PR7cf66+81zGV2Rsn7aV4//GfarDEPPup5w29v/fz1nf5t6oIJw5NC
5XU6eetYm3KLP+nLm+b6/L3rM3k/Hd5ySp3em2P0ju5N/e0HXJP30yNTrtZu
1SNBj1u7tvOMgwc13k/zesvgxcOuVX+oDeh4o/O7N0m6494zDZ82CpHX6e67
b4+aNjxNPxuzLmx3bLi8n26XfH9hrm8Z+udl9/f3vfZF3k/zeqFy9qPzrP+m
+ZUdFdijkckoN6R4gRE1E+R1unCX0f12Z9sYTY83nNG8SJK8n940c+yXmBt2
Ru/MXq+L26fK++lc+8dPabjUwZjYYXKTH9Hp8n6a15dv8dn1IjhTW/loou2S
jk7G0+/Bpr6DTGZepx3TJ/kE5XIx3hX+UONOkI2Z99MLy0wpWjLY1YhsljC0
bls7eT/N68mjTBv2XbE3Z3SednjsFnfDdo3Hrdw1HOV1evqMGXUvDvAwPM4X
TZ6/30neT6c98Q+z/S2XzKe8n2b+Z75gfuDfA2A+sf73LZg/mC+sf1+89fzB
79+mrX8fM/MH84X179Nl/mC+sP59qNbzB78vkrb+fYPMH8wX1r8vjvmD+cL6
930xfzBfWP++Juv5g99HQ1v/PhTmD+YL699nwfzBfGH9+wis5w9+fpq2/nlf
5g/mC+uf12T+YL6w/nk75g/mC+ufl7KeP/j5DNr65xGYP5gvrPeTM38wX1jv
B7aeP9hPKPOJ1X475g/mC+v9UswfzBfW+12YP5gvrPcrWM8fPK+krZ8HMn8w
X1g/z2H+YL6wvh9vPX9wf422vt/F/MF8YX2/gvmD+cL6epP5g/mF9ci2c3Z9
Lq6wM0c13vFXeH93o+RKmwdjb9uYQ/P51PT64mrsH5LdtKSdyRz0bb6No5eL
0WN8+l8H52Rol/2G7aq4wtEYWCi5nUdSqnZ8Rq/xl/M7GKNuxlebMjZJ29ut
bZNOe+yMSRNi8r2JiNdW2Fd5PfGiyUir/TTln3PRWtalRj0clmfpOVbcvdF9
/0ftw9gSCRV2/9CbX19QokWFt9qD4nZrOl5I1Z+9eT/e3y1Q27rw3v31nxJ0
c7eIqHYTVmomz/5B43/E6isnDavxbM49PfBB6ZznKkbqxVfdmN95yGs9uMLw
HMvc3+qzJo72enXtg/533HfvAp5P9JGFJx9yC4rSa793Tdic/7xeKbzJt+KT
4vX+NpeqVZ12XitZr7nzhfREvUT84+3HyrzV8q9s/XvXRan69by7c+ca9kFz
D2vfONItQ0888er5nTqRmm3d//VatCFbP+K1v9qO6ARt9q2K9VevtjFuXr+2
dkZwkpYSW/lWSDc7412ud997Xv25zipctVv5Ag5G8sD0njUP/tBiWlYPnfza
0dg4p9CqKVdM5lETao41djkbu/eVvxpR3dYcsaV2mvswV+Po/TqxXffbmQfe
rLu4TwV341ahbl2rrnY0v/pWP8+B6BzGE/Pghdttnc09CjXySziRU9afr+57
7wodZy/r04G7F+Zef9jWPLxi/g7/7XEzIqbO/6f1R5O5j61z4SZVXY3Hvhlx
35tlac3ORJ0f3MrJCGmR+rzvxXStzqq3ixMeOxgfvn2/cq16ilZxxKOe3v3t
jW9bYvdUOPRd+63g6e8HJ9sYqS2jlvqUiNNcw9v9MzkrW7d7//Bt9B9ftbj1
f5TenC9TL1D31uFLRcO1l61+u3apSrreq+CMqFwFnmsHDr/MsOmXqKf+tivH
qae6trLfla1lf47LqCYH1oWeu6B/KWz+e13uGL1mxKWORbs8073DA7+UnBCm
/1NkRF9zgzB978oq7R43fKH/fWv86kntv+hzD01d4F/1tj5gwrTr+/rF6qb2
d8b4lG2r7XM3zxpT97se08P3ZVK3F9rWIS032uvJ+qEA7xO1ZoVpa861Pb6j
TboeMtTfK7rjZ22xW6e7dR9n6n6dNmdVnR6vNT1xKH7kEZNxYdvpwW5DErWL
If/OPTPR1nj69dH1z+1StNoOR91s6tgbkfWiy9ysma4dr3bct1Oag+Exep1X
U1uTuVLfk2W3+jsZRdb67T8y1ca83/v0qU8LXIzyF449Lxxlay55/KxWq7Wb
oTner58S5GDe9ur8g3muOYwOf7zyHN7WyZzf/lKfB4EeRu8en7cGXXGW8eV8
z/hbX2/wOt93PLCeoFkfcP3A+oBmPrh9e9Ljzdk/1wPqfMp6m/Mpzff51ONP
f0x8lCTnH9annH9ovo+XLwzK22TBE5mvWc8xX9N8n3IdzX/BY02Wxt+v0+u0
L4EXnWW9wPUJ6wkav8W0a2Xyf7H05soN3UP/sDX4+19NSRz4rkWKnH9Z73N+
pvF5bq7T0Vfmz9Lbq0e1z/zzg8w3uRt09nMedFvOZ6yfZX+5avy5ZyfV3188
Rnp9uWUPDbs4+f9vv9h5iV+RTI3zA+tRzh80vmqFXnFaNsjSFxNalDQKOcj5
wPp6lPUg8wXnA5r1I5+f/P5n5YP1FN9/5nea9Refl/y+FOWF9QjfZ+ZrmvUL
nw/rB/xwPuf7yfxLc/7n8+D8y/mU7xPfP+ZXWtbrav3NepvvF83ny/zL95PP
T/a/qOZ8zPzMetv6+p71Oedn5m/W39bX+6zXOX8zv3M81ues52nez/zP8fg+
sb6nWQ/w/eL7iA/WB5w/WL9b3y9gvc/6gfMLr+OH9T7N+oLzDet16/sDrO9Z
b3A+Yv1ufb+A9T7rEc5XHE/uF6jrAZr3cz7jeMwfXB/QrG+YT5h/+H6w3uF8
yPrf+n4D1wushzhf8jrfH64X5HpArZc4f7Let76/ID9PrNZPnF9Z/1vfb+B6
gfUV51+Ox/UB1xM07+f8zPGYL+XncVSzXmP+lPlWzQ+s3zi/c/1gfb+C6w3W
d5z/eZ35Q/YvqGb9x3qA6wXr+xNcX7AeZL3A9YP1/QquN1gvsp7geFxfcD1C
837WGxyP8wPXJzTrT84XnF+YH1mPsl5hvrS+38H1CutV1jOcPzhfcz7gfMv8
zvmS+VrOd2r+5H4G61uuX7hfwXzJ+pb1C/Mb8yPrXa5vmN+4P8H6l+sb7j8w
X7H+5XqH8x/3J5ifaNbHXA8xn3F/gte5PuL+A/MX62fWV8w3zFesp7l+Yr7h
fgPra66fuJ/A/MH6muspzsfcb2C+oFl/c73F/ML9Bl7n+ov7CcwnrM9Z//H9
Z/5gvc71Gd9/+XlXtX7n+oz7A3yfWb9zvcb6gPsHfH9p1vdcz/F95/4Br3N9
x/0Bvt+s/1mf8n3k+8z1ANd/fB+5H8D1Add/XO/z/eL6gOtBru+5H8D1P816
hetFvi+sL/DN+Rp/nD/xwvmI8eT8wOfPfMvnw/zH/x9Zf6r1DetJ1ps052/W
i3yfaM5PrAfxSTP/st5jvGnWa9w/5XqK9RnrIe5fMj+w/uF8z/09vm+c3zmf
cf8Lv5y/mK+5P4QH5mc+D9bjrA9pxo/rN+ZnuV+svNDMv3J/QDXXk/x57h/h
i9fNnycbm4tY7jcn3AtJL3vZcj9577Fmdc70tfx7kMy/20YH1P3a3TLfLk3a
cih5ioMx6XT0Hf9JlvvDL2ZeahJyMumXf99okFuzlb9dsvx7NBuqVMxociFb
v1M9opRv/48yXxadl5l/z9nQX35fetHxxQ+u9k6U+TFh0a3lh+/E6S8WPU1a
3GWj3J/1zNex/h8n7/zy+z1bDCq/7+puy+9jDMsX9fxL9+d6s3v7Do6sFS3z
29Ud9oM2h8T98vuCHD9oc57NfC7zWY+ArtNqnw3XNrTZZmpezHJ/tMb8hyvK
vrP8/LrsPzvf12vYU8vPI+/bfXpNu9WJWvcaHd68mmi5n7m704fdHZ7Y//Lz
MsUHX/2Yes3y8w1l9rvZxF61Ma/eczzBL8GyH/jN1bYXcnd3/WV/Z0efYcWe
zbTsxxtsv/a/gN5O5q5e7T3cE2zMUYnFTvS79fP8W2Dai3fDTeaSawvXPP+7
i/FjwMPtrz3StH0FcqcUcXcw8u0rV21BcpL28rTHjGmedsabmlcHLmv+SStx
1GH+hME/dA994qJnv73Xln7MWlSuSKo+4GTERzfb9Vrhj6+LvH8dq7v1mRG3
dmiAHtUzsHTnrl/19WOOzirWIkqv75iSMWPoaf3khDmVv16M07dfvBTmOsPQ
Jpt3Nrk/9edxNqzZd3z6B613esv/yvr80FeV3rm9mV2UtqD54nw1atoZfz4Y
YS6ZmKp57erTceBVeyNu/bjGng0ytGCn0T0fbXc2prTQXv2vlq35zrAmKzMq
uBrmg83/TAy2MxevVOrB1vU5jZXenXPV9nEx3/v9zOHfL9ianxwoEXt0k5vx
8tb7SUmVbcwOLYr+7ZLoYmS7LHA7ZzKZR85dFPrkvLPhbJM+/NjCFO3q8FwX
7ja0N0q36Z7afXSilmCTo2FZX1vjRvSwBxF9v2qRuVyy8thl6snTC8RXrRSh
dW9na3vfP03fNDJ5ypemb7Sm20pGP8uTor8KvzK5i+0ZfVGx4BKbN0Xr3Usu
D8oc8kTvsfp2eQf3T/rRk44eNyp90efs3vRtcECAPrNsj6/T+n3T3UMyVtYr
sU3T3ju+SQmL1zNrVq37SLunDd/xt1eqbbr+vd9mv1T/z1rHPwuGdyuSqZeO
2ue7vO03zWlD0ZmFx9oaK0f9dX1W1xQtPS72RJtUO6NM9dFXb25K1+ocvRX5
zNPBsK9w5OKdvZla53NBcR+Huhh9k8wF99jbmZvnOVg+T6yrUa5Py02tD/68
bp51vrr3Qw9j79OOT8L8nc2jppj3Pr7/6/OuTj51tt7Osvx72jd7lOgemNPN
KNjn4NuBY3593tWwsIt7cEnL864ToQk3X9dwMY6U6RrqnWj590V53lV2/5s5
4c2djQHOFwrl2ZAh68Oc0cV77K5led7F+eG36idiY4c5Glcf/bO6WtCvz78y
Ly0akrnY8vxr8vxxhe197YzSm7vbdcyd8svzsC+t/gxyPWxrRJeNjfZeY3me
vtOlV/k81ePkeliupx9XalXwvsnYEzLjRvNdMZb15Z429Qe9szwPY305/3zG
uA4hludjY5s/Du2d8UMf5pnv5xfqyy/Py3o/3Nt1RHHL87KWvafdmGxO1fdv
rx2Z59QzuX7meVnViPZ1FgxN1j/08ju4ZXCgrEfHer2Y6Tbghjwvk+ftafEF
tx9I0D+WLrY9/dSJX56fXS5WM21ccIxcH6+v9erN0kKResRwxwJN+13+5Xna
mHbzjb0DPumDB3YPjXr7RtazgZ9fz3xVLUyuh7merhm5Pefp+2/10SU9HP3j
ImQ969THvNbvpOV5GuvZYosmNW5ywfJ8LeFMsU1d1/rre9dOKuo96esvz9vO
5hlZKWhKd7nf6R0zsZrpj6ta3+d1I2du+y7XzzxvG1Gi6LK8joHa4YRHx6N/
WJ63pXp4ThnYP1mun1lf9LoQf3ZnwlutdWXbRo+v/Pr8be6Jf9cX+vuTXB8f
2Gp3IqtKpBbxV+2A03PSf3keF+jd/0HElxitWLDvm5nZ2fL87Wxqwa7Jxy3P
37ieXldlie2fJxK0t4s/1qo22PI8ziHfqfyjcll+3pz18/n874s3Hmt5Pnd/
hfvRqu1TtSp756b5Gb8+rws3NWhUqkK63P9NnjL8bh7HDC3Wc85I/xqWn8/j
eZ1z1No/HT9kagVT27VPDrM8r9MW5/+j2jrL8zrWX1tGJ11MemQyD88bkXNU
81+f3x0JLdX2y1HL87u6hev7hG23M5+tPjv41Z5fn+dd69H5ecgKe3MXz2OD
/f+y7AeYnjKzRXIey/5i1lvBd2cOe+jpaN7xT5ty1W5anufdypPXZZSX5Xke
19ORTQ8m6G0sz/e8Zvg3uFjXxRy7+32UXxnL875WT4q1ajDXznyud6mqplE/
r9O3nGwfXdzOvLH9+4sd7NyNiAJernXLZ2jjZ+WbYhxzNEYn+flm30zTqp0q
59B7rIPReNWR5Wld47XyO12uzE/6ed10wK1h08nR2jkv99kX9mfpnq0SvuYt
fV8reynRpUGt7/rgMT4Rpz3/1YJtR9YLmx2nf3Mqu3zkjbd6+6zJgz7Zhuq3
Ugb5jcr9UY8O7T3heswTfcXilEcTBybp/V0d+zR681q7mzWy77Diqfpa/6y6
r/0jtK1LQw8+L2QyKjXp03a1Z4K26uOpd3YHbAzDfnDLF8eStPB/NxXfk8vJ
+De0Ub//1pjMXo2TK7otdTZqvK9Zb2AxW3OdiTMHmme5G/FX2uSNaudorviw
08ZxTh7GlZId1vlEO5mvzlvy/n8t7c07XEuP69Ygh/Hcq02zv05naj3+KHAm
93wn49slvyDnbenasrt56o5/62BUjZx3rdy7BC1HF7cfTwP+//72qYO+K2K1
ZtFOc6qWMRmhE/3rdfKN1A7UCvG782+mPm9T6y7a9SAtvljqkrfBifqGy8dG
9Frkr/XuFb9iw5p4/fcNL46dWvdC9w8wKl8JCNffNblY0yM9TC86YcTIHtNf
6qMXdbicv8Nn3bxm54TAaff0zRXLbGnx9LtedVbq4MNdg7W5Efccd0Ym67ce
LDs0olaYpp2JKjj/YJY+8FXPe18D4rQ89dq1iAk1GYl+/QNquidqccU2/rez
g62xwyfBPtg9RRuZUWXRivaOxpJ+XvVPzc3W+vUxXbrw3MnwWdtka+YQG/Pl
a7luVDzrZri7tQ72ne5gPl78Q1qvZj8/p/Htujcp4mTO6vvnoWk3PYwt06Oj
up5xNq+2y7HYZbbleRTXU8U/P/duMjyHUaj60cBXzyzPp3hedWlT27d1jrmY
Fx56uq5lmJ35cI09nQ4/dpf75y/udggzYtyNWVcO5I0pbXmemWaO3Jfcw7Lf
7e6TwtPXaNlaw9CC34d1dTY+5thiel0rRO6XdHHdUDkx4ZV2ecEPh4XTk/Uc
l3aUcWlk2S+170GXoflbJ+jpL4KfVF39ULv7+oS39wLLfqJvnW589vJ2MC6n
TLyU402m9rv5+rIgW5O5yoUtuT0uORvLB5aaPqqrZT9c8nOt8Pql3zWHT3cr
vStpaxz2/dq/yb7vWnaFlYVnV7M16txsuKWz21ttd63Mls/apegxs5afGhDy
RO7/XliZe86sfcH6m2d9HV7fj9AbhlRv1nvmM31ppZuHB3t+0CsV/xyQPS9e
f9T2zqvtdre1+dtHdN3cNFPuf3Ypdvfl475ZerWU+l3CpsRpAQ4L53iGZerf
Oh/KXy0qVjs51WOrZykHI7jVhFmXXTM1u075tnWwszwvOnu/nGezA27GkCM+
v70c5WCeG9lvSvFubkahmrfOxua0PC9ad8Ro0nKqu7HtW+WykXdM5jyjt3Ud
vMLFuN/Yo2CMq2V/Ivf7EjPmjOp92MVo0HzpqeQ4y78nale05SWbnWHa+M2m
G9OjU/U/Uk9sOrPN8nyI+4MP161yHVctTa8Y8+1Omf6W34c/bmH5kvs/x+qh
PfoGxb85rb21fVGzQ+I3uZ/N/cSYZYVnv5h5TAu8kJ3fZZfl9znVu7Mvq1s/
e8MlfExm/lE/tBl6AT13KcvzIe4/jm30v4WFC/zQKrwOm+N92vK86H23sXN9
quc0Nv/3MG55Ocvzoar9a25qrDubndNHpfzx8/r5xjw/jz9/Xj/n3bHRMPnY
mFOL7Fhzqr+rMSDg7f6OMRnakB6bNngWcDK83OvVT3iWpm2OW5f/lpeDsfD4
Xza32qZqJ5qufTFpr72xPenK+tHVk7SPIav6BJrsjLON8pfLVTBBKzxt+euK
A22MXXahE8dkx2jby3lcdp2WrX8Njizf/9wHrcEPu2bFfH6u597sCv9w+LHm
Oja57Qr7RD0pKM+J6FIntcn7Yjs21+P06OgliVsX7dQ7L3i5o1GDb/qLBwH3
W69/oJdMuLf/8LHPulPnuUVz/Beixw/1P1qgTJj+dOtKz0aLI3Tvg4PGuNUK
1hffmX+q/aNofcKuCbV619mi5365qnZf30T9ZvPs/gmbXmqpa2vvOXMiRV9b
fVU5t+fhWtQ3p1dhjX+Oa+r633sU+aQ9PXSsdeOeGXrvJbsLf9ofrV0a2vPM
pnHZessVf7o09o3XunhkrUltbmOEdBvo8M/bRO1qoUZ/Nd5oZzSZO2repFtp
2v6gsMebjjoa5xwvN7KtYDL7Vj/rdLOBs7Fw9NWLB+7ZmHOHFt8bku1sjCxq
pKZuszU7NE545bTS1ag1/8bUHU3tzam+t3LVKehuZEcEJDYLczBHJvm2Gbov
h3G/zb1JnxY5mVd3yO5XoKet+d3DnY/sq7oZ/yt98s2MGVlaG0ffoMtfnAxP
T9cJJYb80Gbv2dCzQGtHw6fbmnubryRr91f6+JZ8amdcf9c8NnxFnFb71tLt
L1aajPPt6tv99jlSe3LdtcmIZ5n6I5+1G88FftYcBjnp12pk6CO6xPhvCXmu
PX+UFlDtYJK+5ck+j8EJNzXN+fu9T0MS9CYfK+d7W8PQz198sjvhe6Qe9f7j
j/fj3uun6o77a4f/a/1Cj1ovNu78pB+qvu9TQpeH+i6PkJZx577q7XMvSw5s
ZOjFZ13KrOL+Xd9wOn7YYPenmkOdIWOWlEnWE5649/QuFaqFdnidM+fddF3X
txbfMfir9nzQhqSw2SYjZ2zfJe8bftfuXRlZJaeLrXHg3JBFFecnay3HPLld
9pGt8Xfh4TaBv6dqlcpOrzP/s4Ox+/CktEFHs7TiCzuMPTrZydhx4crMHmkm
88pVS5vG33IxOgVeq9dhnJ357zbVjnR452582Hin1oZTjubh+2wjpo/2ME6k
3T9Zv6ez+f8AsUakTg==
    "], {{{}, {}}, {{}, 
      {Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwV0negj2UYBuDfsfcuoyIzpLIpISkrOxJlj8xzjMwI2coeFcpIy8hWtiOc
YxShOMee2ZvKyvX+cX33/bzPf9/75m0T0zA6KhKJFPHplyoS6U9bPmYQA3mY
MhL5XDagIavNC+QjeZ6IHsf/+kF+ZqE5igv6l3IGX5CEQ85+YZR+UQ6WQ0hG
PElpxxq7RTI5b5OSHaSgPWvtF8tUNCLBvI6f9NRc0tPKnaQh0byeJXo6Luuj
5VjGMJMObHC+VKanMRnZRQY+YKP9MpmJd8jCbjLTkSv22eRvZOWweRPL9Se4
qn8lv2YWT3LE2WY+1a/JofITcvA72elErN0KmZMmPMUectGZLfYr5dO8y1Hz
r6zSn+G6nkfuJTfHzFtZrT/LDf0zOZ5xzKYL28K9yrw0JT9/kI+ubA93KgvQ
jELsoyDduGlfWO7nOY6b41ijF+GWPlfOYw5FOeEsngn6bTlMDqcYB3ie6PAm
7NbKF3iPl/iTF4kJ9x/ehSzO+5w07wpvQS/BHb2U/IuSnDLvZoNemrv6RDmZ
SXxD93C/zjfKMjSnHAcpS49wb+HeZXla8AqHeJme/GP/qkygAqfNe8I70Cvy
r/6t/I75VOKMs71M0f+TI+RIXiORyvQKd2MXK6vQkqrhHfI6H4a7sd8i36AV
Z837w1vR3+SeXj28S6pxznwgvBW9Bvf1qXI60/ie3uG/O98ma9Kat8IbpBZ9
wj+23y5r04a64Q1Sh748sP9R1ucH6vG3s4/kAB4Dmo6qtg==
        "]]}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxl3Hd4Tvf/+PHsYVXNGkVrq4+9quR97K2q9l6xawtqBFV7q1GiKDFr1i5O
Yu8ZK0YiITFCdgTBz/e6Xs/X/btuf/V6XnccdV6P+5z3ffJOvuk1tLW/m4uL
y1NvF5f/+++l07/534zLFVI1vJ9P1VFZQxbudiu8M5OjWwdNuTOzVE7tXDNc
FvdqmEP71vDAZrX6fKm9ossHjzxTs2vvm/92QoT5Qrtmn/T4xeOzatvfp/Vq
eCCzdv0vUm6+SfLVPvc4sfH2cj7aLQ/H/9djoJf2jQUvy+Xa6KHdwf/FujOP
3LQf1HyWa/zXrtoni1z+ouueDzZ9+cK51BOl32nfCTh1r8y619pR34SGLvoq
RTvu4pFN6QsSHB0/rICd7bm2S8P+sXPfR2mXqmH33Xfntvbas53frxt8QrvI
sXnBLXbtNnSPE6OujZl/XTso84mCQzpEas/cd6HV2gGx2qO6h027/usr7V3T
hnRxO52kvfHuiIBVLdMcxys3ZmGV22+0F/82fuul7u+168eZXpVHuVg6nzx1
4wNruGnXrFN/wsUMd+19gxr65gv11K6wrPEy/9+9tTeHNC26p4mvNt5K/dvx
9umPmdUbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm/a
4o3GG403Gm803mi80Xij8UbjjcYbjTc9nnij8abnX7zpfMSbzk+86XzFG403
Gm803grObbaxw5xM6o3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNN23xRuONxhuNNxpvNN5ovNF4o/FG443Gmx5PvNF40/Mv3nQ+4k3n
J950vuKNxhuNNxpv2f1rj36ex1e90Xij8UbjjcYbjTcabzTeaLzReKPxRuON
xhuNNxpvNN5ovNF4o/GmLd5ovNF4o/FG443GG403Gm803mi80XjT44k3Gm96
/sWbzke86fzEm85XvNF4o/FG483Dr3z9CX97qzcabzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803rTFG403Gm803mi80Xij8UbjjcYbjTca
b3o88UbjTc+/eNP5iDedn3jT+Yo3Gm803mi8pef5Jme2cl7qjcYbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403bfFG443GG403Gm803mi8
0Xij8UbjjcabHk+80XjT8y/edD7iTecn3nS+4o3GG403Gm9x8Tmi1hzyUG80
3mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovGmLNxpvNN5o
vNF4o/FG443GG403Gm803vR44o3Gm55/8abzEW86P/Gm8xVvNN5ovNF4izzr
sbtiA3f1RuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8Ubjjcab
tnij8UbjjcYbjTcabzTeaLzReKPxRuNNjyfeaLzp+RdvOh/xpvMTbzpf8Ubj
jcYbjbewdWmBJ666qjcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803rTFG403Gm803mi80Xij8UbjjcYbjTcab3o88UbjTc+/eNP5iDed
n3jT+Yo3Gm803mi8nf31acu2XVzUG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxRuONxhuNNxpv2uKNxhuNNxpvNN5ovNF4o/FG443GG403PZ54o/Gm
51+86XzEm85PvOl8xRuNNxpvNN7GbNr7w+Ur72280Xij8UbjjcYbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/GmLd5ovNF4o/FG443GG403Gm803mi8
0XjT44k3Gm96/sWbzke86fzEm85XvNF4o/FG461bxxV3E2PeqjcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803rTFG403Gm803mi80Xij
8UbjjcYbjTcab3o88UbjTc+/eNP5iDedn3jT+Yo3Gm803mi8Ncg8YUzuD6/V
G403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv2uKNxhuN
NxpvNN5ovNF4o/FG443GG403PZ54o/Gm51+86XzEm85PvOl8xRuNNxpvNN7K
Hu2e+/vcqeqNxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYb
jTdt8UbjjcYbjTcabzTeaLzReKPxRuONxpseT7zReNPzL950PuJN5yfedL7i
jcYbjTcabzmH1vu3S9kk9UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vNF4o/FG443Gm7Z4o/FG443GG403Gm803mi80Xij8UbjTY8n3mi86fkXbzof
8abzE286X/FG443GG423lDot/3aZ8Uq90Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/GmLd5ovNF4o/FG443GG403Gm803mi80XjT44k3
Gm96/sWbzke86fzEm85XvNF4o/FG4+14cO6HjfY9VW803mi80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovGmLNxpvNN5ovNF4o/FG443GG403
Gm803vR44o3Gm55/8abzEW86P/Gm8xVvNN5ovNF4W+j7IN+C6Cj1RuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8Ubjjcabtnij8UbjjcYbjTca
bzTeaLzReKPxRuNNjyfeaLzp+RdvOh/xpvMTbzpf8UbjjcYbjbcj4Y23/VM0
XL3ReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8aYt3mi8
0Xij8UbjjcYbjTcabzTeaLzReNPjiTcab3r+xZvOR7zp/MSbzle80Xij8Ubj
bVf9nQ0CXC6pNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTca
bzTetMUbjTcabzTeaLzReKPxRuONxhuNNxpvejzxRuNNz7940/mIN52feNP5
ijcabzTeaLyt/bHyjeYxG9UbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm/a4o3GG403Gm803mi80Xij8UbjjcYbjTc9nnij8abnX7zp
fMSbzk+86XzFG403Gm+07g8Jyn3/x3mhRveHSOv+EGndHyKt+0OkdX+ItO4P
kdb9IdK6P0Ra94dI6/4Qad0fIq37Q6R1f4i07g+R1v0h0ro/RFr3h0jr/hBp
3R9Csz9EWveHSOv+EGndHyKt+0OkdX+ItO4Pkdb9IdK6P0Ra94dI6/4Qjsf+
EGndH8L5Z38I82F/CPNjfwjzZX+ItO4Pkdb9IdK6P8RrQkC+gWHqjdb9IdK6
P0Ra94dI6/4Qad0fIq37Q6R1f4i07g+R1v0h0ro/RFr3h0jr/hBp3R8irftD
pHV/iLTuD5HW/SHSuj+EZn+ItO4Pkdb9IdK6P0Ra94dI6/4Qad0fIq37Q6R1
f4i07g+R1v0hHI/9IdK6P4Tzz/4Q5sP+EObH/hDmy/4Qad0fIq37Q6TxFrQm
IPCUV6R6o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuNN
W7zReKPxRuONxhuNNxpvNN5ovNF4o/GmxxNvNN70/Is3nY940/mJN52veKPx
RuONxtvlH3bWm3TniXqj8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vNF4o/FG401bvNF4o/FG443GG403Gm803mi80Xij8abHE2803vT8izedj3jT
+Yk3na94o/FG443Gm8udWO/qW1+oNxpvNN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTetMUbjTcabzTeaLzReKPxRuONxhuNNxpvejzxRuNN
z7940/mIN52feNP5ijcabzTeaLzlq5k95vXRBPVG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxpu2eKPxRuONxhuNNxpvNN5ovNF4o/FG
402PJ95ovOn5F286H/Gm8xNvOl/xRuONxhuNt0ozyzYO25is3mi80Xij8Ubj
jcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF40xZvNN5ovNF4o/FG443G
G403Gm803mi86fHEG403Pf/iTecj3nR+4k3nK95ovNF4o/HW7FbjrbsWpKk3
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN60xRuNNxpv
NN5ovNF4o/FG443GG403Gm96PPFG403Pv3jT+Yg3nZ940/mKNxpvNN5ovPUp
5p9l3tg36o3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuN
N23xRuONxhuNNxpvNN5ovNF4o/FG443Gmx5PvNF40/Mv3nQ+4k3nJ950vuKN
xhuNNxpvE0dMGTKgZ4Z6o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxRuNNW7zReKPxRuONxhuNNxpvNN5ovNF4o/GmxxNvNN70/Is3nY94
0/mJN52veKPxRuONxtuykNVXGzT9qN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReNMWbzTeaLzReKPxRuONxhuNNxpvNN5ovOnxxBuN
Nz3/4k3nI950fuJN5yveaLzReKPx1sG7a75F+VwtvNF4o/FG443GG403Gm80
3mi80Xij8UbjjcYbjTcabzTeaLzReKPxpi3eaLzReKPxRuONxhuNNxpvNN5o
vNF40+OJNxpvev7Fm85HvOn8xJvOV7zReKPxRuv6rdygph/nuak3Wtdv0rp+
k9b1m7Su36R1/Sat6zdpXb9J6/pNWtdv0rp+k9b1m7Su36R1/Sat6zdpXb9J
6/pNWtdv0rp+o1m/Sev6TVrXb9K6fpPW9Zu0rt+kdf0mres3aV2/Sev6TVrX
bxyP9Zu0rt84/6zfmA/rN+bH+o35sn6T1vWbtK7fpPE2rO248b+4eag3Gm80
3mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN60xRuNNxpvNN5o
vNF4o/FG443GG403Gm96PPFG403Pv3jT+Yg3nZ940/mKNxpvNN5ovE2YMOOf
ewGe6o3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNN23x
RuONxhuNNxpvNN5ovNF4o/FG443Gmx5PvNF40/Mv3nQ+4k3nJ950vuKNxhuN
NxpvM9cvfdDkhZd6o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzR
eKPxRuNNW7zReKPxRuONxhuNNxpvNN5ovNF4o/GmxxNvNN70/Is3nY940/mJ
N52veKPxRuONxtsf59dnO9jdR73ReKPxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8aYt3mi80Xij8UbjjcYbjTcabzTeaLzReNPjiTcab3r+
xZvOR7zp/MSbzle80Xij8UbjbWPiblMizFe90Xij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/GmLd5ovNF4o/FG443GG403Gm803mi80XjT
44k3Gm96/sWbzke86fzEm85XvNF4o/FGl6tVr+7x8blCdpyOjH9/KIv+/hp6
8LZz9+f087Fo/jzNn//6YZmS8fl81S/Nn3du57+f35fO6zSvO///c7xJU6Jv
NNubK2REq2IT8uXNGpKpWiaXNXd8LJrXo/oN+TfTGF+L12n+f53/PH8/f975
7+fP87rz73/neBzf+e/nePx7azz+peGmWWl20uQzP5r1n+6zy356fH5tss3r
NK97Na469dWBBHtsu1PHkx56WPeSK1rF/nqhr9MZ352oujG/u7Wl/Zvxgy4+
0a+np7qGbu7YztV6FTBlqH9qhH49nXXHxOr5i300s/2yxyb/FKZfT/N68yx+
Rz26htp5O477esqqdyZh0aKW4zZtMrxOf+Mx2v1pjnRT/+b0PqEVLhm+nv5u
57BnLWenGK/1e2te/yFcv57m9X0vFz9aFx9lqnYafGWfa6KJnXUhuFPoU32d
npTp6sDvk56bfCU8BuZc8kq/nl7c40w170fRpkTPQnn7VkrSr6eb/zLRc+ua
u8ZvZ81xdQuk6tfTvN7hfbt7hTzSzdNKd2rOeXvaDGs2sva7uLf6Ol3kRum2
aaWC7dl/Llhz++Z7/Xq61vz9lX47c9W+nnzTpVN3F4uvp3n9Yf7HFc/ecLVy
RZ1ZGfvsof28TlKvao3d9XU6beVg1xLTY+y0/i5/bDjioV9PR9UfXbXD8pe2
28Jsp3JU9NKvp/u9PlalQZskO9uBgmmTg73162le5/2Ifzzj1/n3Lzh75ufh
aeefb8Yzfp1/PhXP+HX++UI849f558OcPfPzNrTzz1/gGb/O++fxjF/n/c/O
ntkfSjvvL8Qzfp33h+FZvTvt78Ezfp33Zzh75vvPtPP3P/GMX+fvX+EZv87f
f3D2zPNS2vn5Hp7x6/x8Bs/4df58jWf8On8+cvbMeozmes31e8/VmP8Nu5Jq
L8rsM7J1Lm9r5dTzF5bEJNl5HnnGeLbytC5fLPrF/tLP7VX73TsemuNuBVV4
0fR9+8d2kbmuFwefcbVulvLPOivLAzu450e/Iu4u1vCE5Gl5B1yz2wx523vT
xAzTxfVw+XJjDphu+dKaZEtNN/8d7J6r9pRrpv/JxPKjB6eawolXg3YUe2BG
DH2Z+350oknZdffW2arPzZsq11//vj/OLCkx61KIe4LJOufciZ+Dn5h/RgWX
Xx2XZOoen1K4XqkH5uTx0EXjbqaasPuRQ45mvmzSur1tW2nTO2O1jn7RZOhc
k317noPZFn4wc0f0qRg28by9dGK+eaOPuFiF5p2Y3LLnPXv7harxPwW7W+OH
DRx1N/SxfSipXpGQfJ5Wv/wjN2e+8cI+la/1T+Xme1llomq/KjQi0b5m9Zga
5Pbp80SRWYfGpn1aj2y5k+HaOcVukza9bNlKXtbT/NbwxTle2ncvTFsT8YuH
tX+S9/a7Vqzdbd3UHEu2uFnToi4/LTL0kR0dMPn3hk9crPVzyza5WvO2fXVF
RkJynQ/GpenZQQuKNzbh9dJvdTr01uT4vuVan+5nzONXyUdCK7w2L9usuJPa
+rZ59Wf836U2J5vwXkdHxTWPNen1X8xcUDjBZPmYWiO40EvjHnnpQdz/npm1
LZZ/KDc20eStdmrL4YJR5uCqf3tk7pli2n017kX2vLfM8+pxxU5WemvSv1yT
dc9123hM95mxtsB707/2xsUR+w/a2QYuHuXn5mJVij7cvGCrMLvkwR238r9w
s34v0LeT9f0ju3LEEe9Z3T2s4aeGzB/R9KltvC7UeH3D0+o6dMzxDZ3j7Wb/
uzvAv7G3Xk+5Xur6Qc4fzfWV6xv3Y65vNN6qRGZKWp7ngM31gPuXfv9FGi8P
sz9Mbnss3XD9Zf3B9ZlmnnM7H1lZ/NPcaZcBXW4MeRevf/+kzQFTjpY7Y3M9
437O9Y5mXptPT9tVefwj7eO51uXI3uex/v9df3bleGyT14brA/dHrh808yiw
aG3wPwGOXreh5LHoCm5W1+YnWj68n6r3Mz5v0BuyWOMHVUu2O7SJXXnjiI82
6ztd3zr55n7GfLi/4Jn3P839iH+v7h+XeXF9xifvZ5rrOf8+rqf8/zqvP1tX
mr35txFv9H7N79/C17HXKd0e1nutrzNv7uc010Pmjxf+/Vwfeb9zv3Zer3J/
5/rJ9YDXOT/c32mur1wfuD87r0+5n3O95frB/dp5vcr9nesx1xeOx/2c+z/N
13P94Xj4Zj1Ac33HO+8P5s/1nusX93vn9S7rA+4HXN94HR+sD2juF1zvuL87
r29ZD3D/4HrI/d55vcv6gPsL10uOp+tdWT/QfD3XU47H+5n1BM39ivc31wP8
c//iesx6wXm9zPqC+xvXa15nvcD6QtcPcv/j+s16g+sH6w2a+yPXE97/XB95
P3N94/2nv69L7qesP1gP837ifsp6hOsP62XePzT3W9YrvN9YL/M66xfWw7y/
uB9zf+H9wPuJ+zPrG94PrH+5X7O+YX2Lb+7XrHe4HrL+1f3s0tzPWQ/hn/Uv
r7M+0v0I4p37Pfc//f6e+Ob+z/oJn6xnWQ+wfmK9ijfWA6yn8MJ6Fl806wXW
W3hkPcvrrL84HutZ1hfO6zGu18yX6yfz4HrE+eL6wL+P9xt/P/75+/DN9Zn7
HR5prj/cz5iv3t/kesvnKTxxfeV6wucN5sP1g/XUpC/utN4elGafHXWviHcF
789+f9vggOZVTjdx/L6tAn+vfPfuWow9z31MJmuH4/OjiX1Q/3ILx+974P1Q
vmmTnm02zVb/647sCfq3ykWzsVjxp4kdHJ8HfeOSumRbkfrZzy+eb7+wQ2iG
4+fNvi5bd9GcUS9N2ZxteriUfqJ+I+tFLBnRMuKz/dAzwrZ9nfrSsX911zGP
muFb3psD1feXDDyxSj+PxcyZ6Tc38Nxn+3emNOn8/fWFjv0WS4/NOHNyiId1
L7bygI9949TbzLIXTe8Ux/P+ytPn7V7+yMcatu3U0y0hqXad0od/HdjW2wqP
PhbXY3ySHdf7Vs2Lz12tosFBz38vet9+4+XusaabizUjq3vqiYKX7fK1n6R2
dnljSjQ4/mDMxmumyW9+M12fpprfej+4tOq/h6ZO4svss4vHmJE5F/j3/SbZ
xLy1Bm19FmEy3Vvac2ffNHP73f729U/ON56XN95+suSDCex+uOSCW6fty+dv
DVge52KV3T7xXMEeL+w8m6O+vR3sZU1Y6H+9/9kEOypzzNrxjX2sw7eL5plS
wMcKbnR8oGehFPv0r60ifl7gZWWb/N+QI3cS7L45rFtRu9ysMvnbJmZu/8ge
uW/wmn3FXK3U3AuSklfctO+sHtd6ydyPZk2436rqWU/atSK/tMuNem3ahF25
6VvxjmlbYtBPYZ1TTIdxqVF51keZktv+mPS49jOzaeec2NBJiaZj9Ubry2eN
Nn5jFkdnOplijs8P6/37oHDTYvqkiJLhr82heL+ops/32k+/ulmmQYH/+75X
maEZq67Zeyfc2fzsqKtVL/lW5+ONntoV0yKjp4V5Wjn7Fas+ZuwrO6Pj456l
x3hbo17W8F326fPs2aOxEZc+3X+mt1uw9mq7JPvDyEod3+X3tfwK1zm32/r8
+c2wldtOHj6W4vj9wMUDq52NTLLj3Ta7W5GfP89psqv15ptuifZP50eP7VLY
8fzmu1pblhYd6nh+w/qw4dzkvI/mPbfdd9zf8/yY43nO/cLZr+7O5niew/0o
/kCdiDx5ovX+tXTVtd97731o711U7+XYbp8/72l0pnCLP2vd1s9DEU/ulfpr
1hU7cumsDwfDHb9Pg+c9frXHHvBdGWIvGpdQo9GvGXr/qte1/cib+RzPe7ge
eZb6q53f7MMmxTq2vfehz5//bKiU2bvY4pu63kvzOmpe+T4wHXzmfjs5/fPn
QX//Ur3WfSvKFFpeMsuhAMfzzSu/zm/YKE+Cru9YH6bUeTZq48Fnxu3oc9dt
g17q/a/PtIMBZ7Y6ngdx//t2zqV2NVY4ng9Vd3n7uExAkjnTbPqL6GefPy9q
NrrEyK/bpOjnw+7PW7tmr5RmBvTM0+9x0zBdD/K8aFT3wAVu2dPNkMje62ou
vqT3y+T3K0f9M/+4Pi/iev1XkzvbYi+8M6G/NC48ruyOz54fnapc8ezFGY7n
R4PDym2L2ONiuf4cWDTj9ZHPnielZ2uQdGedqxX05/BeBRo80PvtIM9BtYb3
fqTrO9aHmacNn3wh0N3y9Vt9pk2xx3q/XR9wpXWNJ47nSdxvC79Zne1YV8fz
pS2V97Y90NzLsna6Piyw8dlnz5sqDzkftOsHb13/HdscGb2ljI81rkjflKiS
8Z89f2oUnVZm/af355kJl/vGFfG1gjf88eXUhmn2ja8nbi7h7mnFDxvwJKbE
CzsiZMvwNwHuVsijzi/bBD22876e03v/Vxmm+Kqg/T822GN+DPwqrESrN6ZF
SkPPym2vmiGDT0aPq5doZvq439v86T7+hf8PcX7t4syB5dlv1DwYbzzM7j15
d543Q7zW3gtq+c4sb+IaXG31crOvUI0/Cgz/YIrNOVW87/sHdmDkvRLze7hb
3b+v8Kpf+Sd2s/oRGyp9+v9qcTGmXu1zntb0GsMelR/8yu40NGfW7LU9rPZb
ej1b/SjWrtTtl6eBj92sCbF1W1WtGGVnatN9ZfSG92bi9L4bI5essYuuPFh2
1ty3Jm7QgAsXqp82Pc8tz7/pSpJJsDIedn/6xKQViur455B4U/iq7+3EEXFm
5LR/dqza8czEvDxZpsqnf1fjnBv3WjNvmHV/B3VN3/bGbN9RNr3zqiPm+4Hr
O9ZJzDAd845tuvvibXtlufDYHxa4WeMCZ03OmjfK9l/8wD+yooe1bWiX+mer
PLUPbro5acqVT/Pecaf33Ek+1pw3J7a0j0+xcy8aFTN2oeN5C5+P34SFZt67
PdUuv+fbk2V+cHw/5MOuSteyV/xovouP9VjrHWpvuP7rxG0XHd8vyDMjeUHq
wbvmlt+fET/7ppu1Mdn8Lgc6vr8z+uXqkvvdvKz6X+0/VLB7vD17/apFjct6
WaUvHyo/0DvBDugeNLjk64+m26TUjIqLz9iHr3RcHlTd8f2REz0OtD2cM9lk
bM0TN7nDE3N/jOv+o0uTTfEH6T3+a/DYfLBWvv/x2n2TMHf5Wtcar03xA5ur
zqtzXT9PzfKvsuDhmNv2/HtjN3hPc7NGdb12v93eMHtT245nF5dwsyIb+3ve
/P+e/8ev+nvDP/mT7aPL+n8MmOpruTXNNrpLDcfzkHEd6nZeesXx+0qrPTzw
09ZQF6try5lpW3++bvcdvbWk9wfH8w8+D+V/cLrC3sk37EH/hlwrc9vx8/b9
wkcOdpvyyBQr/ce3XZemmnnh39ws2N/x/IPPTzd31jqcp16q8S+VtXmbE479
ohX8P5xvuM/xPITnI/Ncpl4uvMjXGta17se/6/taP3c9UzJjUZrt3trzf92T
vKyUike3Z9uaaGdPrZhWsa+n9V/Y4N5zzsXZBVd0sz3C3a25DboPeuMXY++c
+83LkBmu1pwHS1/VenjHXhic+uHiwwzzLskz/86QP8yWFy0XjTj9xuR7F3Ci
6/GLZv/88Z0a1Ew3R7OcuxvyIsxcCQuLe/7Np39X7qQ+I1wemaf5ywUu9E0y
RzZ87OIxJ9a4Hc9WdHDUS/Oicta2y3K/Mi3+yB/e5c/HpsOphRsOJiWbPh0/
NowZetXMaPNXUNOJb02WM4vqJH2/yxQuGLxiyfH3xi974/bHv1xnPw/cnKeG
/0fT6Ia3e33vS3bo+vazrLauVq1rhQ5mfhJuz/Pu7P3ktZs15H6XAzXXR9sd
BnX7fdZKD6twpp9cmsbF2b5TetednM3beu135ZfA+Yn2zcd9Q4rt9rEmugw9
O/qgtxW6NOS7f5sn28sanu1UYK2HVSxr3351pz2z1z9LKfoqp7uVPLHD0F1v
ouzSP8yZebuFm3V48PqYy/0j7Glu56q+HfjBuIbszVfw7V57deNvz65p/c6M
O3Rg48hOtjlRcXPRr3akmbhVt661DrhnUo52atx7YoL5ebBXxxZXn5sCPv33
fXn+uQl9P2vz0O0JpkrL0EYHdseaeT3nlcjVKsmUv9T821Vrb5kjCSsLbQxP
N2Uv9L7da9JJ8/PBdfnjC2eYfS8GNw8PDrHvJbZt+uq3T+vUb/c3iZwdaY84
1KVh9XPuVutl7sWX/hdj+33d4+S9QZ5WzVZbF8ffeGYXvdLTvVxtL8s96l21
1m4Jdnwl/ynXI7yt/wdDprjM
    "], {{{}, {}}, {{}, 
      {Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwNw+dWiAEAANCvX54jZETZI6XMbBFZySh7VCh7b1FmZIXsLZtsIqmQLSRC
j+Hec25oakZiekgQBGWGNgqCZ45wm1085UlPONLb9naUn02yq40tdbR9PO9F
L3jHfTbxuWPMdZxfHGuBTX1hsnmm+NXx7revE61xglGGWeYk4y3xnnedbDeb
ecl+nvaMaX4z1QM296VT3O40vzvVg7aw3OnuMNqWvnKG/Z3lD2caY7gVznaA
ly32ivc9ZCsrneNO0611rodtbZUZ7nKeP8200IEusM75djfC12Y5yIc+8oHZ
xhrpVQd71nMu8pcLPWIb37jY3S71t0s8alvfusw9xtnOapc7xJXWu8Ietved
qxzqNW943cces4PvXW2+a/3jGovs6AfXudcN/nW9x01wk//caE87+dHNDjPH
BrfYy85+cqvDvWmit3zqE/8DApNveA==
        "]]}, {}, {}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  DisplayFunction:>$DisplayFunction,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4776301318125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonseparable Data", "Subsection"],

Cell[TextData[{
 "Often the assumption of separable training data is not reasonable (it may \
fail even for the preceding simple example). In such cases, ",
 StyleBox["NonseparableSVM", "MR"],
 " should be used. This SVM variant takes a parameter ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]]],
 " that determines how hard points violating the constraint in (2) should be \
penalized. This parameter appears in the objective function of the primal \
problem, which now is formulated as [",
 ButtonBox[
 CounterBox["Reference", "Vapnik"],
  BaseStyle->"Hyperlink",
  ButtonData:>"Vapnik"],
 "]"
}], "Text"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["min", 
     RowBox[{"w", ",", "b", ",", "\[Xi]"}]], " ", 
    FractionBox["1", "2"]}], "||", 
   RowBox[{"w", ".", "w"}], "||", 
   RowBox[{
    RowBox[{"+", "C"}], 
    RowBox[{
     SubscriptBox["\[Sum]", "i"], 
     SubscriptBox["\[Xi]", "i"]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"subject", " ", "to", " ", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "i"], ".", "w"}], "+", "b"}], ")"}]}], 
    "\[GreaterEqual]", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Xi]", "i"]}]}], ",", " ", 
   RowBox[{
    SubscriptBox["\[Xi]", "i"], "\[GreaterEqual]", "0."}]}], 
  TraditionalForm]}], "DisplayFormula",
 CellChangeTimes->{{3.477630559609375*^9, 3.4776305615*^9}},
 FontSize->14],

Cell[TextData[{
 "Large ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]]],
 " means high penalty, and in the limit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "\[Rule]", "\[Infinity]"}], TraditionalForm]]],
 " we obtain the separable case."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]", "=", 
  RowBox[{"NonseparableSVM", "[", 
   RowBox[{"X", ",", "y", ",", "0.5", ",", "\[Tau]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.2840558772819816`", ",", "0", ",", "0", ",", 
   "0.2159441227180184`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0.5`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.477630565109375*^9, 3.477630685484375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SVMPlot", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6], PointSize[0.015], 
    PointBox[{{-1.7859058175447173`, 0.9158589034008169}, {
     0.6282144434793633, -1.635158525006701}, {0.7013499912919701, 
     1.1812060744236677`}}]}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{-3.264694248293151, -2.8353480626369176`}, \
{-1.7859058175447173`, 
     0.9158589034008169}, {-5.231282793205264, -1.6296540765802074`}, \
{-2.6467551811375643`, -2.2170540036329203`}, {
     0.6282144434793633, -1.635158525006701}, {-1.6613175842247812`, \
-3.6817417771046856`}, {-1.208723385494718, -1.370269288078924}, \
{-2.147026986615023, -2.3759549666815794`}, {-1.4699155659811018`, \
-3.329607070794099}, {-1.2139796658238642`, -2.4500887209670315`}}]}, 
   {GrayLevel[0.6], 
    PointBox[{{0.7013499912919701, 1.1812060744236677`}, {3.1609843022525475`,
      1.2607823459455574`}, {2.13680380714331, 1.9971008359873672`}, {
     1.3353118605327554`, 0.7648285872860847}, {1.8306265779925308`, 
     1.984215383740883}, {2.7595145553330096`, 2.7122790951467004`}, {
     1.700471667928016, 2.0134908698521623`}, {1.2389723637477283`, 
     3.2285885788134747`}, {0.9173588033170554, 2.9442188117823385`}, {
     1.2207604435896158`, 0.9608403588935355}}]}, 
   GraphicsComplexBox[CompressedData["
1:eJxl3XV0FNffgPFNNoZ7IEDxQrBAkVAsM7gHKfDD3UlxKVpcgxcIUtwLxV1m
AwQImhI0JEiQBEKIu72859znu+csf/U8Z5dp2fu5M3cmN9vyQ8Z3G25vMpnm
u5hM///PB7cWDn/6tailfshIl/pT8lnWnrQvezy3tbttn/9imXsR6aJLTeuH
tC4s/Wzinx2aDCsk7dcv28F1QUHps6vTZ7/RCkg3GpYas35WPmmjYfKQ1ufz
SLcskPg0LT6XdOCHuLbHPFykvS/FXB40xkk6eE20R9EDDtK9hkftvv3OXjqs
0eeis36yk75Z7mGB/qeyDfrhvcCkG1UzpF9MC3hVbXeKdHh5f/91JRKlv96/
cjB1Tay1YyaUMvJ/kTa1HhXhmxUu7f6rMeLsi+fSu+70zdrtc0O63LVV+zud
OKnRg25M+W/66sfS2/PcKD2u11vpZWfvddk1OkJ6ysAnix7P/CZ9YtG4fva3
4qUPvJw0bZt3svV4HtPX1nueJr1+4awjDwZmSbf8qg2pO8Wky/i4No/581d7
6UbNWs6+n2mWPju2dS43f0fp2pvabhq+2Fn6kKV9xVPtcknjzf107+e3cvKI
NxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTepJU3Gm80
3mi80Xij8UbjjcYbjTcabzTe5HjKG403+fyVNxkf5U3GT3mT8VXeaLzReKPx
Vtq3w4FeK3OLNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTca
bzTepJU3Gm803mi80Xij8UbjjcYbjTcabzTe5HjKG403+fyVNxkf5U3GT3mT
8VXeaLzReKPxVnB406lfXHOJNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTepJU3Gm803mi80Xij8UbjjcYbjTcabzTe5HjKG403+fyV
Nxkf5U3GT3mT8VXeaLzReKPx5uBVq+XsPc7ijcYbjTcabzTeaLzReKPxRuON
xhuNNxpvNN5ovNF4o/FG443GG403aeWNxhuNNxpvNN5ovNF4o/FG443GG403
OZ7yRuNNPn/lTcZHeZPxU95kfJU3Gm803mi8pbqWL5Lfw0m80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/EmrbzReKPxRuONxhuNNxpv
NN5ovNF4o/Emx1PeaLzJ56+8yfgobzJ+ypuMr/JG443GG423rzGFw3dedBBv
NN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLxJK2803mi8
0Xij8UbjjcYbjTcabzTeaLzJ8ZQ3Gm/y+StvMj7Km4yf8ibjq7zReKPxRuPt
7R2Hk7+0Mos3Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv
NN6klTcabzTeaLzReKPxRuONxhuNNxpvNN7keMobjTf5/JU3GR/lTcZPeZPx
Vd5ovNF4o/H2ZHfynzeC7MQbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm/SyhuNNxpvNN5ovNF4o/FG443GG403Gm9yPOWNxpt8/sqb
jI/yJuOnvMn4Km803mi80Xi7MzPSu0c/k3ij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/FG401aeaPxRuONxhuNNxpvNN5ovNF4o/FG402O
p7zReJPPX3mT8VHeZPyUNxlf5Y3GG403Gm/TD55p/PBRloE3Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN6klTcabzTeaLzReKPxRuON
xhuNNxpvNN7keMobjTf5/JU3GR/lTcZPeZPxVd5ovNF4o/E2oLffy7hP6eKN
xhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTdp5Y3GG403
Gm803mi80Xij8UbjjcYbjTc5nvJG400+f+VNxkd5k/FT3mR8lTcabzTeaLy1
yjN7erHsFPFG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuON
xpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Safv/Im46O8yfgpbzK+
yhuNNxpvNN5qXB1YrGGxJPFG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxRuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Safv/Im
46O8yfgpbzK+yhuNNxpvNN6KjG9xul+NePFG443GG403Gm803mi80Xij8Ubj
jcYbjTcabzTeaLzReKPxRuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpsc
T3mj8Safv/Im46O8yfgpbzK+yhuNNxpvNN4Sm3nvMS39Jt5ovNF4o/FG443G
G403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReJNW3mi80Xij8UbjjcYbjTca
bzTeaLzReJPjKW803uTzV95kfJQ3GT/lTcZXeaPxRuONxtv1/cVetzkbKd5o
vNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReJNW3mi80Xij
8UbjjcYbjTcabzTeaLzReJPjKW803uTzV95kfJQ3GT/lTcZXeaPxRuONxtva
XGFua96HizcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3qSVNxpvNN5ovNF4o/FG443GG403Gm803uR4yhuNN/n8lTcZH+VNxk95k/FV
3mi80Xij8XYlpO0/RyuGiDcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG
443GG403Gm803qSVNxpvNN5ovNF4o/FG443GG403Gm803uR4yhuNN/n8lTcZ
H+VNxk95k/FV3mi80Xij8Xai5fFW00wPxBuNNxpvNN5ovNF4o/FG443GG403
Gm803mi80Xij8UbjjcYbjTcab9LKG403Gm803mi80Xij8UbjjcYbjTcab3I8
5Y3Gm3z+ypuMj/Im46e8yfgqbzTeaLzReNvVuW5wx08HxBuNNxpvNN5ovNF4
o/FG443GG403Gm803mi80Xij8UbjjcYbjTcab9LKG403Gm803mi80Xij8Ubj
jcYbjTcab3I85Y3Gm3z+ypuMj/Im46e8yfgqbzTeaLzRsj9ke7HQzqv8Ndkf
olr2h6iW/SGqZX+Iatkfolr2h6iW/SGqZX+Iatkfolr2h6iW/SGqZX+Iatkf
olr2h6iW/SGqZX+Iatkfolr2h6iW/SE0+0NUy/4Q1bI/RLXsD1Et+0NUy/4Q
1bI/RLXsD1Et+0NUy/4Q1bI/hOOxP0S17A/h82d/COPD/hDGj/0hjC/7Q1TL
/hDVsj9EtewPcZo9zW3ME/FGy/4Q1bI/RLXsD1Et+0NUy/4Q1bI/RLXsD1Et
+0NUy/4Q1bI/RLXsD1Et+0NUy/4Q1bI/RLXsD1Et+0NUy/4Q1bI/hGZ/iGrZ
H6Ja9oeolv0hqmV/iGrZH6Ja9oeolv0hqmV/iGrZH6Ja9odwPPaHqJb9IXz+
7A9hfNgfwvixP4TxZX+Iatkfolr2h6jG2/ad0/4McHor3mi80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4k1beaLzReKPxRuONxhuNNxpv
NN5ovNF4k+MpbzTe5PNX3mR8lDcZP+VNxld5o/FG443G28PGx1vMffFRvNF4
o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxJq280Xij8Ubj
jcYbjTcabzTeaLzReKPxJsdT3mi8yeevvMn4KG8yfsqbjK/yRuONxhuNN9OL
COcGR6LEG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv
0sobjTcabzTeaLzReKPxRuONxhuNNxpvcjzljcabfP7Km4yP8ibjp7zJ+Cpv
NN5ovNF4c2tU8FPK1VjxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcabtPJG443GG403Gm803mi80Xij8UbjjcabHE95o/Emn7/yJuOj
vMn4KW8yvsobjTcabzTe6iyr0fbJgQTxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8UbjjcabtPJG443GG403Gm803mi80Xij8UbjjcabHE95
o/Emn7/yJuOjvMn4KW8yvsobjTcabzTeOjxre+TEmmTxRuONxhuNNxpvNN5o
vNF4o/FG443GG403Gm803mi80Xij8UbjjcabtPJG443GG403Gm803mi80Xij
8UbjjcabHE95o/Emn7/yJuOjvMn4KW8yvsobjTcabzTehlUannfVH2nijcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403aeWNxhuNNxpv
NN5ovNF4o/FG443GG403OZ7yRuNNPn/lTcZHeZPxU95kfJU3Gm803mi8zZk0
f9zowZnijcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
aeWNxhuNNxpvNN5ovNF4o/FG443GG403OZ7yRuNNPn/lTcZHeZPxU95kfJU3
Gm803mi8bbL8HdSqfY54o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxRuNNWnmj8UbjjcYbjTcabzTeaLzReKPxRuNNjqe80XiTz195k/FR
3mT8lDcZX+WNxhuNNxpvvZz7u61zs9PxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8UbjjcabtPJG443GG403Gm803mi80Xij8UbjjcabHE95
o/Emn7/yJuOjvMn4KW8yvsobjTcab7Ss3zzGts9ZZS/eaFm/qZb1m2pZv6mW
9ZtqWb+plvWbalm/qZb1m2pZv6mW9ZtqWb+plvWbalm/qZb1m2pZv6mW9Ztq
Wb+plvUbzfpNtazfVMv6TbWs31TL+k21rN9Uy/pNtazfVMv6TbWs31TL+o3j
sX5TLes3Pn/Wb4wP6zfGj/Ub48v6TbWs31TL+k013ib0mDHrd3sH8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443Gm7TyRuONxhuNNxpv
NN5ovNF4o/FG443GmxxPeaPxJp+/8ibjo7zJ+ClvMr7KG403Gm803mbPXnr0
1TRH8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443Gm7Ty
RuONxhuNNxpvNN5ovNF4o/FG443GmxxPeaPxJp+/8ibjo7zJ+ClvMr7KG403
Gm803pbt3RjWLspJvNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxJq280Xij8UbjjcYbjTcabzTeaLzReKPxJsdT3mi8yeevvMn4KG8y
fsqbjK/yRuONxhuNt7/u7s1/YaCLeKPxRuONxhuNNxpvNN5ovNF4o/FG443G
G403Gm803mi80Xij8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4
k89feZPxUd5k/JQ3GV/ljcYbjTcabwfiTmqVn+QSbzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi8SStvNN5ovNF4o/FG443GG403Gm80
3mi8yfGUNxpv8vkrbzI+ypuMn/Im46u80Xij8UZ7NGnR/PqsopZ/b72NybqY
V76/hvb5JzB05UgXnebP0/z5n15XqxLjlkv80vx527b99/N96bxO87rtfz/H
mzv/fXCHM0Utk7pUmu1WPJ8lt2du084XLjrN6+Ejx53OPT2Xzus0/722f55/
P3/e9t/Pn+d12+9/53gc3/bfz/H4+86tdqh6q0gnS/y82521vU76JPPW9GeT
HeXzoHl9ROjKwFE5ZssfPQOux7920PucneOXvsJeXqczq9+of6CkWfdePX6k
r6udvJ9eYOd/qHdPO33Rw+s+TVrmGLyfzvfvnAYlK+VoY+YdyD2ob6bB+2le
71ZnxaGFk9KM4r1n/DR/W4b264ffWx9cniyv0+UdppojC6dq5TZ1/XB3V4K8
n65+fMJn7xWJmlPb+gu+nY+V99O8/irhF73Sjiijfh+fR2ft4rTD/0ubNfb+
R3mdnps7aEzD+C/at2nzxw9PeiPvp9cPuu3p/O69tsKrYERC1yfyfrrj73Mc
j+x8qXXM63XVob+/vJ/m9dh167xnHDyoRdZ50Whl+i2t5dMlw/xrP9B4nS4X
XLVHsvt+w2nvmUaPG4fI++kmq8/VWXg7yDgbvf7d7phweT/N6xHL7+3v4x+p
FQ2/vTXi82vDrbLDmCIbvsnrdPJWH7vKSz4ZlQeXKT6iTry8nw5vObV+r83R
htfxRjOal0qS99MjU67Va9U93uiV1fNVGYdUeT/N6xM6TG6a8TVd69/xhvfr
0CRjxZY1O58/zZLX6d923x41fXia8TjhqanPQJPO++l2yfcWFPyWabwu+eGX
O8F2Ou+nef1Ls/ghnm3N+q6fRz3s3thkSR5l+mvfFQd5nS7ZZUzf3Tl2Fvu1
+QMK/+Ik76c3zfSJjL5htuQ/Xzp53n5neT9dcP+4qY2WOcr5jPfTzHfmL/PV
9vtebecv379J236fIvOX+Wr7fXjMX+ar7feZMX+Zr7bfR2U7f/l+H9r2+16Y
v8xX2+/rYP4yX22/b8F2/vL76LTt7zMzf5mvtr+Pyvxlvtr+PiHzl/lq+/tg
tvOX33ehbX/fgvnLfLXdL8/8Zb7a7ne2nb/sz6Rt9xMyf2V+2+wHY/4yX233
8zB/ma+2+zFs5y8//6Vtf97J/GW+2v68ivnLfLX9eYPt/OV5JW37PI/5y3y1
fR7D/GW+2t5PM3+Zr7b3Q8xf5jfXY67Pl3cN21l1pZNlXR6Xyd2KOuvHZ/Qc
d9nV0eL6zvGTYxdHfXP1Rnnf1LS3bDtn7n1xpVlf6VDj1YSLJks5X7v7Prft
9OxLjbs7rsg29g/O8SpnNukffMrGu+/OMLqPSx96cE6mdiroU80Jj5KMAW7J
7fInpWpbF9y9t+FTvDHqZlytqT5Jmml0v+BxGTHGpPHRxULfx2nba0e1z/rf
ByOt3uOUxee+ak/dh+dbnjfMyLcy8MZv+z9qE2MTFhUf/Z/R/Pr8si3cw7R6
b3PHb3Y9bzwJfTvuap6H2uULA4s2nf+fpnd7H9VuvK9WNi5o+7+VwjTfScN+
eTLnrnG96O7CBYd90MqsujHPe/ArY0Pl5Q8s5lht1oQxU176fzCOTtlf6++v
8drIkpMP5QmOMm5e918342mSVi286bcyk+KM1wVfJ/S49v263qC5y4X0RKPg
MdcL+ddma66+rSt0XZhqbJzjtmrqFZOe9137Jl/yZBq791W59r62vW7v2bnn
wr9yjIvxLcpZ3Bz12QFVf1292s4S4Natq8dqJz0lpnpASDez5T990ILt9t/X
QSU9ulUp7ijrqYflll/8I9lZr78qbEl8kKOle/KSGjXqOOk/af6VXCPtLS/v
Ldr55ncHvVCJ0wkHJ9tZBuxeUHjDYXs9d3i7xZOzc4z30+Ytbv3RpMduqFlx
c7EsI8gvMzahWbZ2LSVxwOsWKUZIi9RnfS6mawcOv8i065tofPiWcMW/dorm
2/fK1p+//72/bYnZ434oQTs31/nYSz3CSG0ZtWxN2VhtUfjDyHLj3xnmtw/C
vtb8rO31rdEuqNFzo7hnwOFLpcO1uYemzb/qcdvoWWJGVMHiz7TCDb13uQy8
raUW2pnv1GNDi+7u9yKp23NtVNMD69+cu2AcurXoRN1Z77Q67y91LN3liZE3
J+nX/WWitcWlRvTRG74zdnXanO3xR5w2MWDc6kntI40L204PyjM4Ues/fvr1
fX1jjMefH12PaJei7curzxrrmWA4LHFZuqtUlrZ1cMuNDkaykX/M+ile9iZ9
7bm2x/9uk26UWrdr/9FpdvqSPJ0CPYOyjLpvrjgvH+ige504FDfyqMmiOd37
NSXYUb8YcmTumQn2lg41X44e3tZZr+d4LI9dfQdLr+4RW4OvWMfLdv3M9VDW
22r8aK6fXL9YX3L9oplf98uY13a8kCrne9ZjnO9p5kc/u0u1PKafl/Mj6xf5
eYBqfCcPSO9R52CGxvWY9TfXaxp/VUc86rGon4P03m5tm3baY7bw3/uiVSH/
SzXS5frGepbrH42vyJL6xPWFo6Uf3q9Y4FzVLzLfTe3vjF3zc1u5XrA+5HpC
4ydkyNUpXztGSCeeePnsTv0v8vf90uBrpZt10jXOv6y3OD/T+Khy4d9nJaPs
pY/dqx/Tdb9Z7m9s5yfrHcaX9QfzkfMlzXqFv798n4kab67fzC/OfzTXe/6+
sv9fjT/XP+YL5zOa6yV/P65XXF/wjX/OT7Tt/e+Kruf6ne7nIutF/n8T+G92
Jur8oFbO8jq+WE/SXJ/whk8+X65XnA9ZL9reH7K+5HrG+ZLX+fxZX9Jc7zh/
sj60vR9kPcn1j/Mr60Xb+0PWl1wfOf9yPNaTrD9p3s/5meMxn1iP0lxvmV/M
R3xx/eX8znrT9v6S9SnXZ87/vI4/1qc012+uB6wvbe8nWY9yPed6wXrT9v6S
9SnXe64nHE/uL9X6leb9XG84HucP1rM06wfOJ5x/mF+sJ7hesV61vT9lfct6
g+sZrzP/ZP8J61e1HuH6xvrU9n5U9tep9QnXP9artvenrG9Zv3B95HisZ1n/
0ryf6yfH43zJephmPcT5k/Mt5xfWR1x/We/a3t+yPmb9xPWZ1zn/sD6mWV9x
veZ8y/WJ8yfXF86HXB84P8n/v0Otx1gvc7/K+Yb1GOtnzv/cz3J+oVmvsb7m
fMT9LK+z3uZ+lfMP6znWB5wvON+wvmM9zvmC+1PWe6zHuf9k/rPeY33O9Yj7
U+Y7zXqQ9TvnB+5PeZ31PPefnA9YL7J+Yf4y/1k/st5n/nK/yXqS9b78fpGa
j6wnWf9zfeR+k/lHs97k/oD5yv0mr3O/IPsv1PxkPcr6ivnEfGR9yv0E80n2
U6n1KvcT3B8yP1ivcn/B9Zr7R+YDzXqW+w/mD/ePvM79CN65/uKR6yF+uL4w
vpzvGQ/On3xenM/4+3F+4N/PfOX6y3qJ+URzfWE9hE+a8yfrHcab5vzAeobP
j+Z6zPMe5hPXX643PA/BJ9cXzqc8L2C8OX9yv+Djt2Nryhcny/Re+dxmejr/
8P+7af1vq7mFa1n//yR1GrrFlu1qZ9EjDtmfPmN9/hV3t0DTZt2t34/N+SLy
dJWVa8dZv+/YCHw47p9TCUber8tePB9ufZ417nTPTon7kn74vsfQLw19rk+1
fj/fCtdldVOz3hrJu0s1u9/8o8zv6YPH9ci94M0P3x9zeEv9kC37A2Q+z5g6
d8Dg6y81twE385tX+MnzpGNdxlzuVyLwh993Hvh+T7mAIOvvp77oe+Rom31x
WqHePsvqdvoq87Hy8FGd50TE/vD7E91KnrVLeW7d797U3rnAt3YmPTN/TmyV
atbnOX5tfpmdJ8q6n4/7gRFfB1YPdrTuz5o12PdiwHtH3VxszpOO063PX3r9
4rr12nPrzweHrW6zrcFHFz3U8c7vd+c5WSb9MmVY7t7OeuE9N2N+fu1gKeuz
tpLPNzt9w/KJv99vl21UL3A12mvI9/8u/zETFzpkGBs79Q7c5pym2T3qndHx
ebzx74ZTfZvFJGnB+Q9kO1eKMfIWfnY+V71PWr+60fUKzw0yvHYsC+1ufqsl
HFxbeVKbf4zNm9+4FK+zTos+N3FDVIcwrXWom+/a7beMA2Nu+S+t/VEb7Lux
wt9do4yPMendbuRO1krMi8t29481Zp+365y3S5oW0qVwoTxzU40mPZYP2X3N
pBu5L84dvinDcLno+7bVYHv9dHs9J6i+2dJlk9+WxSVd9MMHi3hm+ztYyqRv
K17tai496k1YTrmyLnrKb7c8/jjuaEldkDswYb2TXiP2+ongvA4Wv5LpxoIz
9vrA6ClRE77mGPuvVl7ew91Ov/PzuJgqBzONiBdXz+TcytEK+TTovT81zdgT
u3j9uFkpWv2xPeccqhdnXPZ8U6no0EStcZud9sbrKCPx3uyfh3X8rK28nl5j
n8tzo3KvWu2Pl3qv9WlrzDBF3DCKzvr41bPHKy3/0KtjB9z107p9zjrSadoZ
I/9eI8Ar6p0WO7hP+ay5/xlN6zy4GjQ1Upv1+NuZ5g0jDTfflCdlRiVq7Vo3
WZsy+ptx8rfsoJHHUrRepTp4DSsdb1T838aOqdfStQfHPrb5NXe6UcF55e6E
NXb66ZG+Z9dXyDKix6wu61fHrDfc/mzopfH2ljEfNvWp285Zr5l2eGtEhtni
2Xbri+dR39cZ9pP9K7X58Xl7eP9lv2VnOMr9Ud+Kk/I65nO07Pj0MuPUpx+f
vz+K7BuQp4yDxf7fgxMe/Wx93v6q7KtVm6Zan7dzP3V1cq0Gbrq95cy6/P/0
D7A+f19tbn6nUjHr83fWJwez7Q9XHmJ9Ht9w2csbfT5lGyOnTv0YNezH5/NV
ihyrP8rF+ny+8I55B6dWyzBa9Y/+tiPC+n3rPJ/Pcu/utrBjmpGsd69ac2mm
rGcOVbo89HJl6/N5zs/BXhmZf69NMvq4VNjR7taPz+v/6b7n7YUncXJ/5GFE
7fONjjGuPIopPMIx5Yfn945P1y87+MtXY+GAlZk7Flp//la/ebxnzYqxcj/E
/dQZ07vOYRc/GPc7nAqftjha1kO1i8z734ab1uf3rIf8ew3wqLzI+jx/4qKj
SX3zBhsbQjrdP26O/OH5vjYoaUbFqrfl+b7X+IqFykw+YTj8ud999twncv/E
8/0iN9vsLfbiiLap1IJKY9IeyPqpYsOLKa+Srsvzfa5fVXbf/3lz+8daQB//
6g0Cj//wvP9jJb97xf62Pu/PVyAuIr3XB21yaPOf/q565Yfn/55p7RzeFo3U
TLPDdy0sFCbrrx3T9vbd3+6d3A9xP7X8QUaTI74xWpPjTz8ty/1B1l/PI5wn
+dyzPv9n/RUd9KxRowXWnwfYtTYH1hiUpE0p1yirs+/nH34+4Hq51v/KeqXI
869qtft9LFQ6Tbvx99aQQYcS5P6Jnw947V822SE9XSt8qe6uxy7Wn/cNfHZ/
eMvRyXL/xPV91Jp3az6fzdZOxA+vfi7wx58X3GnyU8+IX60/L/htet2/31ax
19tX9zu3ZUX6Dz8/CDvZ7sNLV7Pe3HvuiNpO1p//jQpt3270OevPC7ifiqs8
bdL9RAd97ZjiNfaMsP784Hzq+/yvXK3771jvOWzfYzIeW9eHa55daHPB31l/
veREXJHbP/58oVShR6tPnrD+fGF/h49Pj+zMpWtbYzdX8Mql7y55qrHltZPF
sXKD9becHPXBvkadWmPsLYUDh/bdMtOsb3S/cmbF7e//3c6mBsllMzW/TYNS
NpZONgZf6ue5YUWadjR4zr6TgxOMJ7N/PX+xfZyW98K63DW7fzRCFlfccG3Y
V+1SV5efPTeEGe7Xu3q7fr6rrfHrufe2Z5D22tllW5XSe7WABnsuTol8pa1s
l/R8xNsww8c/5OwQU4z2V4m2bSLLfTS83RN7zgyI1+I3jd17YniS8TY8T2Ba
g2ztS8OjV4J6pRp3px80JR8x6Q/Wblk37SeT5cLDdX83eeqgW6J97uw9bGdZ
VGdjqXfTnfQ/n+yqGXb/+3rMy3/i/MZmy8rpD5KP6w76rJCrCaF+dpYLs9a4
nbMz600WpC653+b7fe6w4N8rHs3ShqUPndrISDGWHalhCtzw/TpRp/+MuBmJ
xu2Xeb59ehav7fvTz2nalkjDX7trcpsTo02NXZH/Q/5wY0d6vclTKn7RJqys
9tX90QsjvPs0e31/sGYpvL7n2F43NLezv9fqXeCqdq3KsG29/Z9p154ezDx5
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
    "], {{{}, {}}, {{}, 
      {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV02VgFHQcx+EbCBsh3UqMLikJ6VZSYHTDAFFiA0lhwEanIJ3S3R0C0o2g
IA0KikqXdD68+Nzz/f3v7V1oeGRYRFAgEIjrIyo4EAgLCQR2MITTmYe5lUs7
3eW5jLvUyf6ZM9RPdd27uVyF7ML6VBWUWv291+MexuM+duZepuEA1ud+xudB
RvAA03IFDyvSPsSZilYD9xGuVCW7sirqqHuWYlTEvYp5+YmO2114jOk4kA35
CxPwJLvyBD/iIDbir0zIHzlYje3fuFqn9a37FGdriJq4f+caFbU/UzF9ro81
1HtTnuGHPMduPMv0HMZmPM9EvMjuvMAMXMvL6mFf4hwNV3P3Fa5TFbuqvtAf
7rkaoeLu9czH/Lpq9+SfzMiRbMFrTMy/2Yt/MRNHsSWvMwnncbRa2f9wg/5T
b/e/nK8xau2+wY0qYZdSSVVTqL73Hs6bTMrb/I63mJlj2YZ3mIz32Id3mYWb
+EB97ftcoHFq637Izaph11R1PXIv1A8q7d7CAiyox3YU/2dWjmc7PmFyPnv/
2+dTZuMEfsXnTMFFnKj29gtu1Sv1d7/kYk3S1+7X3KYydjmV1ZfKrsnev+Eb
pmTg/f9Fb905OIUdGKRUiq1oxVJO/eT7OIzRB1rinqqOdlxtt2uzjmopWEu9
TdM7S5qL3g==
        "]]}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxl3XVwFMnfgPFk40II7na4u8ss7q4h6OHBIXgOd5dDfhwc7hxuwWaCBQse
LEAgSIhAXEnIy1vVz3erlr+untpl7m77sz09M51Q4s/x3YaZbGxsPjrb2Pz/
P4NuLRgWHJ3bqP16hHNt32zG2pOmYsddLd1t27yXS8vlks69xGb9n61ySj+f
OKd9o6E5pLf0+2mfd76n9NnV6X6hWnbpBkNTY9bPyiat10/+s9V5N+kW2ROD
0+JdpO98imvzXxVn6U4XYy4N8nGUfrrmW5Xc++2l+wyL2hX4wST9tkFE7llF
bKVvFH+Qvf+pnzr94N6dpOvlf0i/nHozpMKuFOmwEgEB6/InSkffv3wgdU2s
pWMmFNI9IqVtWo0MX5kZJl2unj787MsX0jtve2fuGnNduvjVVfs6njip0YOu
+z6etvqJ9Da364XH9XkvvfTsvS47R4VL+w58tvDJzO/SJxaO62e6FS+9/9Wk
qf90SrYcr8q0tbVepEmvXzDrcNDATOkW0dqfNX1tzDI+eZvFzKlnkm7QtIXf
/Qw76bOjW7kUCHCQrrapzaZhi5ykDxrtSp5q6yKNt3KnvV7cynITbzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8SStvNN5ovNF4o/FG
443GG403Gm803mi8yfGUNxpv8vkrbzI+ypuMn/Im46u80Xij8UbjrfDK9vv7
rHAVbzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8SStv
NN5ovNF4o/FG443GG403Gm803mi8yfGUNxpv8vkrbzI+ypuMn/Im46u80Xij
8UbjzXNY4ymReV3EG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuON
xhuNNxpv0sobjTcabzTeaLzReKPxRuONxhuNNxpvcjzljcabfP7Km4yP8ibj
p7zJ+CpvNN5ovNF4s29StYXfbifxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm803mi80Xij8UbjjcabtPJG443GG403Gm803mi80Xij8UbjjcabHE95o/Em
n7/yJuOjvMn4KW8yvsobjTcabzTeUvOWyOVRxVG80Xij8UbjjcYbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/EmrbzReKPxRuONxhuNNxpvNN5ovNF4
o/Emx1PeaLzJ56+8yfgobzJ+ypuMr/JG443GG4236JicYTv87cUbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm/SyhuNNxpvNN5ovNF4
o/FG443GG403Gm9yPOWNxpt8/sqbjI/yJuOnvMn4Km803mi80Xh7f9v+ZPWW
duKNxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTdp5Y3G
G403Gm803mi80Xij8UbjjcYbjTc5nvJG400+f+VNxkd5k/FT3mR8lTcabzTe
aLw925U85/ojW/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Safv/Im46O8yfgp
bzK+yhuNNxpvNN5uz/zaqWc/G/FG443GG403Gm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Saf
v/Im46O8yfgpbzK+yhuNNxpvNN6mHTjT8MHDTB1vNN5ovNF4o/FG443GG403
Gm803mi80Xij8UbjjcYbjTcabzTeaLxJK2803mi80Xij8UbjjcYbjTcabzTe
aLzJ8ZQ3Gm/y+StvMj7Km4yf8ibjq7zReKPxRuNtgNeWV3Ff0sUbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm/SyhuNNxpvNN5ovNF4
o/FG443GG403Gm9yPOWNxpt8/sqbjI/yJuOnvMn4Km803mi80Xhr6eY3Lc/P
FPFG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxpu08kbj
jcYbjTcabzTeaLzReKPxRuONxpscT3mj8Safv/Im46O8yfgpbzK+yhuNNxpv
NN4qXRmYp36eJPFG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Safv/Im46O8yfgp
bzK+yhuNNxpvNN5yjW9+ul+lePFG443GG403Gm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Saf
v/Im46O8yfgpbzK+yhuNNxpvNN4Sm3babbPku3ij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG401aeaPxRuONxhuNNxpvNN5ovNF4o/FG
402Op7zReJPPX3mT8VHeZPyUNxlf5Y3GG403Gm/X9uV51/rsV/FG443GG403
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxpu08kbjjcYbjTcabzTe
aLzReKPxRuONxpscT3mj8Safv/Im46O8yfgpbzK+yhuNNxpvNN7WurwtsOZj
mHij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG401aeaPx
RuONxhuNNxpvNN5ovNF4o/FG402Op7zReJPPX3mT8VHeZPyUNxlf5Y3GG403
Gm+XX7c5crTka/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxpu08kbjjcYbjTcabzTeaLzReKPxRuONxpscT3mj8Safv/Im46O8yfgp
bzK+yhuNNxpvNN5OtDjecqpNkHij8UbjjcYbjTcabzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG401aeaPxRuONxhuNNxpvNN5ovNF4o/FG402Op7zReJPP
X3mT8VHeZPyUNxlf5Y3GG403Gm87O9d82uHLfvFG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxpu08kbjjcYbjTcabzTeaLzReKPxRuON
xpscT3mj8Safv/Im46O8yfgpbzK+yhuNNxpvtOwP2ZbnTedVAZrsD1Et+0NU
y/4Q1bI/RLXsD1Et+0NUy/4Q1bI/RLXsD1Et+0NUy/4Q1bI/RLXsD1Et+0NU
y/4Q1bI/RLXsD1Et+0NUy/4Qmv0hqmV/iGrZH6Ja9oeolv0hqmV/iGrZH6Ja
9oeolv0hqmV/iGrZH8Lx2B+iWvaH8PmzP4TxYX8I48f+EMaX/SGqZX+Iatkf
olr2hzj6TS3g80y80bI/RLXsD1Et+0NUy/4Q1bI/RLXsD1Et+0NUy/4Q1bI/
RLXsD1Et+0NUy/4Q1bI/RLXsD1Et+0NUy/4Q1bI/RLXsD6HZH6Ja9oeolv0h
qmV/iGrZH6Ja9oeolv0hqmV/iGrZH6Ja9oeolv0hHI/9IaplfwifP/tDGB/2
hzB+7A9hfNkfolr2h6iW/SGq8bZtx9Q5Nx3fizcabzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803qSVNxpvNN5ovNF4o/FG443GG403Gm80
3uR4yhuNN/n8lTcZH+VNxk95k/FV3mi80Xij8fag4fHms19+Fm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovEkrbzTeaLzReKPxRuON
xhuNNxpvNN5ovMnxlDcab/L5K28yPsqbjJ/yJuOrvNF4o/FG483mZbhT3cNR
4o3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNN2nljcYb
jTcabzTeaLzReKPxRuONxhuNNzme8kbjTT5/5U3GR3mT8VPeZHyVNxpvNN5o
vBVo4Pkl5UqseKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4k89feZPxUd5k/JQ3
GV/ljcYbjTcabzWWVmrzbH+CeKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm803mi80Xij8UbjTVp5o/FG443GG403Gm803mi80Xij8UbjTY6nvNF4k89f
eZPxUd5k/JQ3GV/ljcYbjTcab+2ftzl8Yk2yeKPxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm803mi80Xij8UbjTVp5o/FG443GG403Gm803mi80Xij8Ubj
TY6nvNF4k89feZPxUd5k/JQ3GV/ljcYbjTcab0NLDXNfNT1NvNF4o/FG443G
G403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxJq280Xij8UbjjcYbjTca
bzTeaLzReKPxJsdT3mi8yeevvMn4KG8yfsqbjK/yRuONxhuNt78mzRs3anCG
eKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjTVp5o/FG
443GG403Gm803mi80Xij8UbjTY6nvNF4k89feZPxUd5k/JQ3GV/ljcYbjTca
b5uM7Y9atssSbzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3mi8SStvNN5ovNF4o/FG443GG403Gm803mi8yfGUNxpv8vkrbzI+ypuMn/Im
46u80Xij8UbjrY9T/wLrCtia8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv
NN5ovNF4o/FG443Gm7TyRuONxhuNNxpvNN5ovNF4o/FG443GmxxPeaPxJp+/
8ibjo7zJ+ClvMr7KG403Gm+0rN+qjG6Xtcok3mhZv6mW9ZtqWb+plvWbalm/
qZb1m2pZv6mW9ZtqWb+plvWbalm/qZb1m2pZv6mW9ZtqWb+plvWbalm/qZb1
G836TbWs31TL+k21rN9Uy/pNtazfVMv6TbWs31TL+k21rN9Uy/qN47F+Uy3r
Nz5/1m+MD+s3xo/1G+PL+k21rN9Uy/pNNd4m9Jwxa6zJXrzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8SatvNF4o/FG443GG403Gm80
3mi80Xij8SbHU95ovMnnr7zJ+ChvMn7Km4yv8kbjjcYbjTc/vyVHQ6Y6iDca
bzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803qSVNxpvNN5o
vNF4o/FG443GG403Gm803uR4yhuNN/n8lTcZH+VNxk95k/FV3mi80Xij8bZ0
z8a3baMcxRuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTca
b9LKG403Gm803mi80Xij8UbjjcYbjTcab3I85Y3Gm3z+ypuMj/Im46e8yfgq
bzTeaLzRePv77h6PCwOdxRuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcab9LKG403Gm803mi80Xij8UbjjcYbjTcab3I85Y3Gm3z+ypuM
j/Im46e8yfgqbzTeaLzReNsfd1Ir88xFvNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxJq280Xij8UbjjcYbjTcabzTeaLzReKPxJsdT
3mi8yeevvMn4KG8yfsqbjK/yRuONxhtdpVHzZtdm5TaO3Xofk+nvLr+/hh5z
5M6bFSOczTR/nubPF3lXoWxMARfxS/Pnrdv638/vS+d1mtet//s53ux5H5+2
P5PbmNSllF+BfNkM1zquNjteOptpXg8bMe606zQXM6/T/Pda/3n+/fx5638/
f57XrX//O8fj+Nb/fo6XUfF67f0F7eTznN7r5rX4d/bS820DDnr1sjXv3vHk
6pqWbgbvp7Md+6tuwVJZ2qbpN1aVeOwi76d5fXnXc/1O93M28nnNKDLvnx/a
7AoHK7b86iiv0yXsp9h9zZmqTbLbmv58soO8n654fEJEp+WJ2vA3K+6MzLKT
99O1+455eNY2Tut79q8t6ctN8n6a1zutHj9iZV5bY7brI5/68ZHawgfXxjRq
kaXzOr1+UGAdpw8fNZ+5+10HeWfovJ/uMPYvh8M7Xmndaiw/uGBSmryf5vV6
n8a2OrAsWf9a42WDFem3tOKbun66uzNBXqeLPy3fM7ncPt2xTe3538/Hyvvp
RqvP1VgQ+EgPSahuLvVvlLyfzh0WuDU84p1+qHfarNH3P8v7aV7/PnXe+GFJ
oXry1jG2ZRZ/0Zc38QxP6PpMXqfDWkyp3WfzN72De5Mr9v0D5P30iJSrtVr2
iNdj163rNOPAAY3307zeInjx0IBqQVr/Dtc7vXuTpDvuOdPgScPX8jrdfVfg
yGnD0vSz39Z/2BUTJu+n2ybfm+/5PUMPX3ZvX9+Ar/J+emfpkQ96NLQxCpSx
98m14bu8n+b1MoOL5hteI14r2MXHe1eWrdHkeIMZzQolyev0ppljvn67bmf0
yewVUtQ+Vd5Pe+4bN6XBUgdjQvvJjX9Ep8v7aV5f/r81O14EZ2orH04wLeng
ZDxJCLbpO9DGzOu0Y/qkNU89XYx3BT9Vv/3U1sz76fmlphQuHuxqRDaN/7NO
Gzt5P53RadqhMf9zN5JH2vy997K9vJ/mddNaj5s5qzuap8+YUce/v4fhcb5w
8tx9TvI6nfb4ygdTDk+ZT3k/zfzPfMH8wN8HwHxi/fdbMH8wX1j/vnjr+YPf
v01b/z5m5g/mC+vfp8v8wXxh/ftQmT+YL6x/n6X1/MHv96Otf18c8wfzhfXv
+2L+YL6w/n1N1vMHv4+Gtv59KMwfzBfWv8+C+YP5wvr3ETB/MF9Y/zy59fwh
Py+t2vrnNZk/mC+sf96O+YP5wvrnpaznD34+g7b+eQTmD+YL6/3kzB/MF9b7
gZk/mC+s93Nazx+y/0219X4p5g/mC+v9LswfzBfW+xWs5w+eV9LWzwOZP5gv
rJ/nMH8wX1jfj2f+YL6wvp9qPX9wP4S2vl/B/MF8YX29yfzB/MJ65J9zdl7+
K+zMUY22Dwnr524UX2l7f0ygrTk0z5oavl9djX2Ds5oUt7MxP/0+19bR18Xo
MS59yIG/MrRLO4fuKL/C0RhQILmtR1KqdnxGr3GX8joYI2/EVZ0yJknb061N
44677YxJ47/lefMxTttcsYF7aGWTkVbrScqic9Haz4sNezgs/6lnW3Hnevd9
n7VPY4rFl9v1Q292bV6x5uXeaveL2q3tcCFVf/bm/bgrbg+0rfPv3tvwJV43
d/sY1Xb8Ss1mVL+n437E6CsnDa3+7K+7+oP7JbOfKx+pF111fW6nwSH6tmpR
7TJ7f9JnTfDxfRXwSZ8Ym7Aw36jH+oiCkw+6PY3Sa713jd+c97xeIazx96KT
4vR+therVpl2Xitet5nzhfREvVjco23HSr3V8q5s9UfXBan6tdy7cnoO/aS5
f2jXKNItQ0888er57dqRmqlO514L/s7SN5RZFmTYxWp+N8vXW73a1rhxLWDd
jOAkLSWm4s3X3eyMd57vEnpe/bXOKlilW9l8DkbygPSeNQ780L61qBY6OcTR
2PhXgVVTLtuYR46vMcbY4Wzs2lv26sdqJvPH/9VKcx/qavx3r3ZM13125gE3
6iz2Kudu+Mc3L24UcDC/+l4v1/7obMZj86D520zO5h4FGu6MP5Fd1p+v7i3c
ETrWXtanA3bNz7nhkMk8rHze9kd2uxkfp85d1OqzjdnL5FywcRVX49GWjNiE
pj+1pmeizg9q6WS8bp76vK9/ulZ71dvF8Y8cjE/fEy4HVEvRyg9/2HNhP3vj
+/9idpc7mKAV0QJK5f1qMlJbRC1dUyxWcw1ru2jyzyzd7n3Q2+jKEVrshsol
N+fJ1PPVuXnoYuEw7WXLHAEXK6XrvfLPiPLM91zbf+hlhq13op6aY0e2U090
baX35a2lf43LyMb714eeu6B/LWieuD7nN73Gx4sdCnd5pp+b7fTfK3O4vqjQ
8L7m+h/0PSsrtX3U4IU+8ea41ZPafdVnH5w670qVQL3/+GnX9nrH6Dbtbo9e
U7qNttfdPGt0nQT9W48tL5O6vdC2Dm6x0V5P1g/eWnii5qwP2tpzbY5vb52u
v/7zim90h3BtsVvHO3UeZeruWUn19hX9pjU5cTBuxFEb48I/pwe5DU7U/F8f
nn1mgsl4EvHwWnjbFK2Ww39utrXtjci60aVu1EjXjlc9vqVjmoPh4bPet4nJ
xlyh78nSW684GYXW7dx3dKqted/C06e+zHMxyl449rxglMlc/PhZrWYrN6Nm
6GWnZQPtzf+8On9/jms2o33lV6OGtXEy57W/6HX/gYfRp0f41qeXnWV8Od8z
/tbXG7zO9x0PrCdo1gdcP7A+oJkPAgMnPdqc5STnb9b3nL9pvv8r7CuFTPC3
MTjfsR7mfEfz/Q0uNyzbMve3OucH1o+cH2i+f0d991XdHh2vMZ+y3mI+pfn+
3CzQrWuV1Y5m/n86hqR9feDvLP+9OfKfTjgw2dbg/M71BOd/Gr9XUxIHvGue
In3q0ZfKEx4myf/PwrAHX4uP/6BzvmR9zvmUxmfO+p12Og8MlL50YWDuxvMe
y//vzo6bf1aZHifrW9a7nJ9o/Nkvdl6ys5ClPf/Le8Fj7U+Nz0NzvFcv5amD
nA+sr0dZDzJfcD6gWT/igfUa8wPzP836js+L9RU+WO/wfWc+p1kf8fmwPpHr
D7Ve4PvL/EyzvuDz4PyOH3neor6PzLc052fOt3zf+H4y/9Kcf/k+8nnJfhfV
nH+Zj1lfW1/Psx7nfMx8zXrb+vqe9Tnna+Zzjsd6nPU7zfuZ7zke48d6nub8
z/mA9bj19T/rd9YDnC94nfU463ea9QLnD9bzfB9Zz9OsJ/h+8n3GG+sLzj+s
163vD7C+Z/3B+Ynjyf0Btf6neT/nL46HX64HaNYznN9Yz1vfP2D9z/qG8x+v
s55n/S/re7X+4XzI9QDzD9cDNOsj5iPmL/n5YbVe4nzKet/6/gLXB6ynON9y
PK4HuH6geT/nY47H91d+/kY16zPO11wPWN9/4PqB9Rrnc17nekD2I6hmPcf5
nesJ5luuJ2jWe8y/zNfMN6z/WB9wvWB9f4LrC9aHrB84HtcTXH/QvJ/1Bcdj
/uJ6hGa9yfqD+c36/gXXH6w/WZ9wPuB8ynzP+ZT5m/Mh8zHnM+ZXzkecfzgf
MV/SrGe5fmF+5f4Gr3M9w/0L5lPWu6xnmP+YP1n/cr3D/Mf9CtbDXO9wP4L5
jvUw6x/mK+5XML/RrJe5PmI+5H4Fr3O9xPG4X8H6musn5iPmM9bXXE8xH3H/
gfU211PcX2D+Yb3N+oz5g/sPzDc063Guv5ifuP/A61yPcTzuP7B+5/qM+YH5
hfU712vMD/Lzr2o9z/Ua9wuYD1jPs37k+8z9BL7/NOt9ru+YL7ifwOtc73E8
7idwfcD1H99Xvu9cH3A9yPeV+wNcL3A9yPU/30+uF1jfcr3P/QHuB9CsT7h+
5PvC9QDfJ+vrR9Yn+Od8j0/Oz3jk/Isvzm+MP+cjxpvzDePHfM7ny/zL58n8
yufD/MV6ivUq8wnNeoX1KetXmvMx60/WpzTnG9aXrD9p5lPWj6wvadZf3B9l
vmG9xfqC+4d8f1lPcP7k/hrfB86XnB+4/4QvzgfcT5L7y8oTzfwu9xNUc/3J
n+d+E/54PWL3v6seDLNcn3b0GWOK2mu5/5zV8WmjGS0sf38k8/P5wTe+DB9t
mY/3RW/u47vKwSgbn/1l61aW+8mr/d92GLooSebj+LlHAubeiP/t768JKli6
X/3wLL3BsfLmo3afZT79OWN597t2ob/9fvXu/Qo6LT+dKPNn+UkBkXtTYvVb
PvM22dbdKfdz/ylWQ3+T+67Mn83iB6/MyPbyt9/feOXB617Ps7/QgzoMWNZ9
ZbTMf/YDP3TO5hT32+8XqlyxS+aXq8Ey332N8DrfuHeY9tp5etz5tpb7qdOa
Hvb7x9Vy/zT3zDdOc+5Zfj6Z+W786fPVOg1M1JLX+T/LvcRy/7P5sW5bF4fb
//bzNRETry3KXG/5eQjXY9m6Tjxga65qVzQqxNlyP/OvYudPdBxluX95r2GX
qfodt9/277XKtuFHm6ZO5qENQ2ev+mxrDk7sOX7fQ1dj4ju3NoO8bMwu67rF
2VR2Mf6ITv7r3a/rjZX52p0bltfBaFSji+fCt0lawOlW9QIm2xk9px/aXf5m
vJbcufnFwo9tjQqdc5RY4/lFizs65adpyg/9wrklK87ooVrfz+NMF6um6o/D
K4XPrBCor+55rPiUmRH6Qu/qFQ4kv9AH3tpZ7mNMmN6ic1//fFOi9E52KR9P
HjmjL/vQvd2XJ7F65alT3rw9qGvVxxS6+8fBH3pkyas7Cr6O1PKXuVb3L+On
vurV5/a9TsVqY2fF7T3exM5YfD85YGVoqjbw5Y2QN3ftjWJ/Z14JLpWhndl+
sNCs2q5GnwOuWw7fszMfSJ/V7WCAm1HKzSNv53EOZpchK70L7Mxu7F2Yt2vk
Qhfz24g2BfceMZkv7e99LGWnmxG1csrHqcVszTHNelTr/tPFuBZV0d+5XpY2
169Yoa9DnY2qa0q2PjkqRTswrM20XC3tjbbBfq96dU3UQmxbpo3bbTJabPQ5
XSs1TCvddtLcAU/S9MhmDU5krX6lrZo3emGeVcl66K3tP/sWeKX5be4zxHZc
su5jU2rwH+vP6mWKnC18VY/Wz4V/7BR/87GesupAqUq1v+gVXWzLTlr1Xb/6
OSO2d/pGza9J2Xm5BsbrU171fLc+4r423Pltfe8j8XpYl3F+o8c91Bpnb7Mh
qVC63q3f+T2P/w7XSt75btOlVqa+IOrGP0OKfde+lPc237K3N7pXS9eqz0/X
Xi+uMi1hrYMRmWLTaGZgptY84MT/Fj9wMM5X9G22re1PrUFMk7lDx7sYk5Oc
vfqkm8yVO+Q8v+6Hq9HEy/1FxjZ78/XcTw5vPGu5f7FtscPtfg6W52Ocz0Yt
rtmuZV7LevJD+yJ2Hcq6GZNT630u2fP352V9cjhd7lbP8rws6Hmsr1fbX9+D
Ib7fPW5b/n5Snpc12/a68qC+zkbe1iHlto/IkPXkzQrNhlR0sjwvY/6vUvbY
jrF+jsZUj0Pb/ff//vys0Kl5OWb9a3l+tmba6LvzjtsZb4Kn5nz++ffnafaN
ey5Yapjkftwsk9Zoza/vS682M+ps/3Ve4vqb52mxgeWSNobZGDn7GB96tfom
69HJxVb3mrzI8jyN9aj/vtSgVi4/Zf26r9p9rUfFDD34i/e9NTd+f9625tKO
k4M7Wp63+bWaXHL8+FT93ykpZ243C/vt+duIx602+q1L1g91uFg8MuO+rF9r
+8QleKcFyPM2zo9Nwr9N3xwcr38vurtw3RdHfnv+ViG9vP/QmpbnbybPx9vm
TIvUO858Umr7H1d/ex73qvT0uVsvfZH7kycbFht6NitM7+uzsd/NpR/k+pvn
cdn2rFyzc8k7PWV3YPjBtp9k/bshJG3SStdweR7H+vdZYtdG+as9lPVy9Q7f
7y4wG3q13JV+jr8X8dvzutB6h7ckeSyS53UVXE9Vbdf4kuazaG3uuh1jfnt+
d+G/Rsvqr76vxZ4+uvPPcpbn/40ftRz+bGmyXI+zfvDLsq1zss5bbUX0u4qt
In5/fpfj2amnf+T6ItfbDa66xTo9jNDKlc5xvvzh9N+e5w09ONT92/Jvcr+2
1Z0BuUftidX6eC1pW/2W5fkdz/P6NVmx23tevDY3vHsln6mW53kHphTPvqeM
5efVWW/PK/fpqrmx5fnepu2eHWsWStUe2n2LC3n++/O+ozkbh5ROszzvC1gy
alT+Fz+0QsUXn+9Y9/fnf08zNqa4ns3ULvW50Kx6quV534cvC0v7HLQ872N9
NXtyisv0CzZmpyldnff0+f353/qvJbf4bLI8/ytSskHokEV25l7rIoNy+//+
PPBg/y5l+vtangfW2DJ8bK8hDuYCfSIaVq9g2Z/M+sv/id+Zzt0czeYvZ4v6
vLY8DxzhO992z3LL80Cu3x+1PtSsWTXL80Hv+fqyhsVczGtNnT+FNLA8L+yz
5dTZixPtzDv6eH1rO8ndcNm/PaqeR4bWe1bHWq7+jkazoLsNtv1I1bqeuGYe
V8DBSLs2IKN502htqa9fevuLP/Xd55okVPS+qyX7D116v3WCPmzq6kFLFy3T
BsT3X7nA9Gs9NWj/yvnPhmiVfjbuX+hYjD41xP3dny0+69VC84/yND/Rh6YG
fR87LUnP59Zq4LdlIVr7U779bq9J1S/9feLA0s6ftJgyTS4EhqfqTjdXt5nv
8lmbUbTouPmnbI0Y+9ibzbcmaQ8+2h4rXsTJCAi12zZ4sY3ZMAd/6njI2VjV
3KmgY3mTeUmXDy8vRzsb2cM2/Wg9wWTO7ehfKjqXhxFcPNfTlmFO5setCnd9
XNfevNjVu9K25tmMwotu/dPgosl8uI1f0uATv84npol/DN+aqTWu3Hlyv+VO
Rp62d8+4/TqPTbrTPul8uIMR6ufg869XjFYhWms0vYqN4eFyYXVEuQjtiucM
vwP5MvWxxXP4LXaI0EKq5syfZJ+pF3oY/azdgKfatSIjHSdGJuqO/7aesTDh
klah12DXcvvi9DUlhk9wrhSmDxpXZvDuuy/1/htPt7/S76vusDNvWIZPoH71
acrUt2+/6h0mDShfo+1Nffw/6efNUQl6xKx6I7yznmm9eu4q/Y9dil4y6NAR
zfWDljX+zJPR0TZGqV3RrXekJGgJ95e4/G+6ybg8MqH510Ypmm2NuX27nDAZ
PTdcXHXwVIrWvfaWnK69HY1z3vYXi/pkaa3Xj25b96OTcWCdQ8jp3rbmrb07
LwvumM2IGZfj7wRPJ/PqM38YptcexqUnuXNuOe1s9hjfrHf58tmNKTO7nGjo
5GK+tLZQYO4oy/Mqnl/t3NGu8oVNLua/x4+wu/XMzryh+mv3hNfu8rwq2Wi7
rolDNiPYu17hU9kszzdPzMl2Zm45y/63mIEtvDaUydJKhnY5dczb2dg3NGeG
x1DLfrQhhZ6PzqgXp3n+23TW3SwbY8aQW7uvr3kr9zu6PJzt0K/sO31NZk2v
Wj1D9er3Lg5PzWPZz7Q4oF3dnmVsDK/GEXfSe8RriXcKe6XOsOz3KXHo87er
S9wN5yvZe+7SHM0+HscSD0VnaXkuPH7c+4azEXBs1OWqerz2x6dhwxODbI03
dzSnXFlxmt20a1snj7Q1bjqXaWw337KfzW7Zhmb7pj7XDj4c1fL6pSR9cOXR
ic6/HAwMuptQc26YPjrPy8222UP0v//cfrhJxw96t1kz88wZYdkPlhy9tnCF
0gl61zPVR+e8+Fib3HJHnVqlsvTwdJtXZwrFaeueVXy6YXGW7rsi/NcJOU4b
3ajYX/pmy36qvAM+3viZ4GA8PmSadX/LT+16aI78Ca6/xuVYQnDAJQfzx8fV
dp4u5W7k+7S6dupzy/Ok43uufgtY5W4cO2tsHH3Zxpwx6qnn4Y0uRpk3O4qd
SrQ8P+L+Yc7EWfmfGy7GozK5mphXJGhfy914dbO+yWi6vcWS+FKW/YXcXzSK
3Q11a2sylm8OKNPI5pnc3+f50ttN1Tot2J2kb9+1/HKHd8/0ihX27l+y/pPu
Oi9zSu2VT+T+O/cnb51oH3/g7Sd95+ZcIbGBludLPG8yNU15b2v3RPt3Wp9t
w9Mz9Q6dbxdwvhaj3ezfvFm20ZbnS9zf9C2ybmvoyBht/d2ogamtLT9PzvOn
gXWPNrHf+1PzKRlov32Am1G9xqrkfQ4O5r3/LdiwuIDleRP3R6Nnhtx5FfXr
emvFi2wejbMbx49srN60sIu57NAK1efPtzWHFQrunDHc1Zjfw2lJ52cZWrse
D7qfLuFkbN06qEDSpTRtbuzdYI85DsaBxqvCAqumalub3Nl0+T974/qCL75j
8/2aN1/fzJ/fzc6ILlaj5sSgb9q4MrPr/7siS68b3zhy8MJPmtuPyfqJPen6
o4z3RfoeeKNNrjn2+ogBKXq9PK1GxLZ8pL0ZPTywaIFE/fEYr0W1Sx3XWuwd
eC/4aay+rnrOnhMH79bj5l7Y+uef3/Xt3jOvVfUO0q/HHd796EW4vmB2/QO1
L3zU7+wvNsxrUbBe92jl2Ba23/RjG8Y/rNv3X91u7ZXPGVvi9Jbt2nyxGXhL
i2g7tHvvk4n6vObakL0tXmqP7NwCTt5J0WOr/Vf+09Ew7cagdynveqbpS1JP
l64c/1k7UnDRsPrjMvRzSwKK6H6/JuXWo4pP62xruHb/vjjudqJ2uNv++Iu7
7Iyxs1NtQk+kaduPzyj/tbKD4dAqK6Nscoa21r3joDwXHY0Hjgv8LhSxMS8Y
VXxzs1bOxlafxen9DFtzZr7lNbzcXYw5hZfWP77OZI7z7T9q8RZXo/3cFee7
17I3P69i/+L9iWzGx9brT2+b4WQuFJA54riHnfnonJdBO13cjV05/76/pY3J
HBj0fHWnem7GlJOvr/gN+qlVc3y03iHByViTUrPLH21+aMN23889uMuvefi9
/5Gte5K1MysDe/u8sTMixox59HlSrFbkpuFdYrONYT98xc28ZyO1PddmXkr7
mqkXPvqp9+Vt4dqLAdMa92yVoXett9nPacwHTds8oam7bZr+pFlcvmkVbmie
zkPazpwar9v6hrrdSjN0L/+T/xYoEqVvu7G+fsiO93pq7cr9o7K/0UfVe597
7aMveo2qpV6vTgrSu8Qvnh/5NUJ/5ukS6fPe0LPXjDz20D1WD+rdN9p/wynt
7f66yxc2TtaPPengXefhO+38lZNV3MPS9aLGxRJT60Zo17ZkLRy0zMZoEhPp
3LFMgnYu6cmlVXlMRvC5OPtNo5O1ansb9d4bYjJ2FUya38AjVfvD1nP14xH2
Rv2wH7MXdP+huV0696PiXCfjzIWFl1xjbMzTbiUEjX/iYgx7sGy67RA7c/+5
WxvejXQ3Mjau9W130NHc5e3YSSlTPYzbaRviv7dzNv8fVCSxdg==
    "], {{{}, {}}, {{}, 
      {Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwV0neAz2UcB/DfhQ4pI1SiXFayMiqk7IzsEbL3KFsppMjem+y9KavCHY47
xRln3hVSUlmVlaKh1/PH6/t+P8/3+e/zienQu1GvqEgkUsRne3Qk0jl9JPIh
Q/mACJ/QlAdIIoouXPM+rTxEGr513sFnejp+1efJ+czlQc6428k4/Tf5kRxG
eg4TTVdi/dskM/AGD3GEjHQjzv/NMhPNOOu8iy36w/yuZ5ZHeYRzzrvZqmfh
ur5QLmIBWfnO3R7G6xMYzsc8SjLZ6E68N9tkdpqTk2PkoAdv8TjHeYzz3u/l
c/0JbuhPyhPk4nvnfXyh5+amPlHekpPkEhbzNgnuvpR5aMHTnOQpepLo/3aZ
lzdpyf4wFxnDbT2fPMUz/OD8VZiJnp8/9GVyOUspwAV3XzNZn8IIRlKI0xSk
Fwe8iZXP0ornSKEwvelDUVIpwo/eHyROL8YdvYT8huJcdE4Kc9Wf5099qvxL
TpMrWUHfsINhvrIkrSkd9pFS9Au7FWYry9CGtmGf3MXLF7irvxT2kxf5yflo
mJtelnv6armGVZTjZ3fJTNdnMIrRvBz2kfL0D7sR5isr0I5Xwz7yCgN4h0ph
/6jIL94fJ0GvzN961bBHVOGS8wkS9Wr8o8+U/8pZch1reTfshrv9sjrtqRH2
jdcYGPYgzF/WpAMdw0zDvGUt/tNfD3tCbS47p3BAr8N9fYPcyHrqcsVdKrP1
OYxhLPXDLlGP98Kcw/xlAzrRKOwEDXmfQTThUxpz1fshcjD/A2iNrQs=
        "]]}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxl3Hd4Tvf7wPHsIagSYotSRYlRWrR8jlE1U9QeNb5Wqb1rU6tGiqJWzVjV
ovY8VuydRIiZIYhIIkuQ8PO7rvt957oef/V6X0+ccu7Xc87nOfkkpXsNadPH
xcnJKd7Tyen//3v5zPQ+4Qm+x2tG9vOqOTLP8d93uZTakSun26yaemt2+QLa
vrOcFvVqnF/75rDJzb/p/bH2n13fuhWalk9774LXEx6Yj7Tr9M5MWjQ+j7Zd
O6NX4/0+2o0+Sgt/leKtfT72RZN/Ary0Aw8lHe4xwEM7NOh5gO8mN+2OfZ6t
Oxvlon2vzlPf8SWctU/7X/mo239vbfrKxfPppyq80b41OuROxXUvtaNLnzix
sHCadsKlI5szg5JzOmloMTtvvLZT4/6P52VHa5evZffdeytCe+25Ltnrfj6l
7X9sfnDLnbsM3ePUyOtjFtzQXuVzqvjgjg+1Z++92GrtT4+1R3YP+/XGL4na
O38d3NXlTIr2ptvDR68MzMg5XsCY32tEvNJeNH38tsvds7UbJZheX4x0snQ+
hRokTa7lol2nfqMJl7JctfcObOxd5IS7dtWlTZb2meGpveV4szL/NfXWxlv5
3Z0izrzzUW803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vGmLNxpvNN5ovNF4o/FG443GG403Gm803vR44o3Gm55/8abzEW86P/Gm8xVv
NN5ovNF4Kz6v+aaOc3OpNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8Ubj
jcYbjTcabzTetMUbjTcabzTeaLzReKPxRuONxhuNNxpvejzxRuNNz7940/mI
N52feNP5ijcabzTeaLzl61N3VHwhb/VG443GG403Gm803mi80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxpu2eKPxRuONxhuNNxpvNN5ovNF4o/FG402PJ95o
vOn5F286H/Gm8xNvOl/xRuONxhuNN7d6VRpNWO+p3mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuONxhuNNxpvNN5ovNF40xZvNN5ovNF4o/FG443GG403Gm80
3mi86fHEG403Pf/iTecj3nR+4k3nK95ovNF4o/GWWah0gbwBHuqNxhuNNxpv
NN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTdt8UbjjcYbjTcabzTe
aLzReKPxRuONxpseT7zReNPzL950PuJN5yfedL7ijcYbjTcabwlJ+aPXHHRT
bzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8aYs3Gm80
3mi80Xij8UbjjcYbjTcabzTe9Hjijcabnn/xpvMRbzo/8abzFW803mi80Xh7
eM5tV7VvXdUbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm/a4o3GG403Gm803mi80Xij8UbjjcYbjTc9nnij8abnX7zpfMSbzk+86XzF
G403Gm803sLWZUw+dc1ZvdF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxpi3eaLzReKPxRuONxhuNNxpvNN5ovNF40+OJNxpvev7Fm85H
vOn8xJvOV7zReKPxRuPt3C9PAtt1dVJvNN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTeaLxpizcabzTeaLzReKPxRuONxhuNNxpvNN70eOKN
xpuef/Gm8xFvOj/xpvMVbzTeaLzReBuzec/XV65m23ij8UbjjcYbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG401bvNF4o/FG443GG403Gm803mi8
0Xij8abHE2803vT8izedj3jT+Yk3na94o/FG443G24+d/rz9Iu61eqPxRuON
xhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjTVu80Xij8UbjjcYb
jTcabzTeaLzReKPxpscTbzTe9PyLN52PeNP5iTedr3ij8Ubjjcbbtz4TxhR8
+1K90Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/GmLd5o
vNF4o/FG443GG403Gm803mi80XjT44k3Gm96/sWbzke86fzEm85XvNF4o/FG
463S0e4FaxdMV2803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv
NN5ovGmLNxpvNN5ovNF4o/FG443GG403Gm803vR44o3Gm55/8abzEW86P/Gm
8xVvNN5ovNF4KzCk4e6ulVLUG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpv2uKNxhuNNxpvNN5ovNF4o/FG443GG403PZ54o/Gm51+8
6XzEm85PvOl8xRuNNxpvNN7S6geud5qVqN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTeaLzReNMWbzTeaLzReKPxRuONxhuNNxpvNN5ovOnx
xBuNNz3/4k3nI950fuJN5yveaLzReKPxdjK44P3v9j5RbzTeaLzReKPxRuON
xhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8aYs3Gm803mi80Xij8UbjjcYb
jTcabzTe9Hjijcabnn/xpvMRbzo/8abzFW803mi80Xj73ftekaCYaPVG443G
G403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxpu2eKPxRuONxhuN
NxpvNN5ovNF4o/FG402PJ95ovOn5F286H/Gm8xNvOl/xRuONxhuNtyORTf7e
XiZSvdF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxpi3e
aLzReKPxRuONxhuNNxpvNN5ovNF40+OJNxpvev7Fm85HvOn8xJvOV7zReKPx
RuNtZ6Md3452uqzeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3mi80XjTFm803mi80Xij8UbjjcYbjTcabzTeaLzp8cQbjTc9/+JN5yPedH7i
Tecr3mi80Xij8bb2+y9CW8RtUm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovGmLNxpvNN5ovNF4o/FG443GG403Gm803vR44o3Gm55/
8abzEW86P/Gm8xVvNN5ovNG6P2RVwbvfzz9hdH+ItO4Pkdb9IdK6P0Ra94dI
6/4Qad0fIq37Q6R1f4i07g+R1v0h0ro/RFr3h0jr/hBp3R8irftDpHV/iLTu
D5HW/SE0+0OkdX+ItO4Pkdb9IdK6P0Ra94dI6/4Qad0fIq37Q6R1f4i07g/h
eOwPkdb9IZx/9ocwH/aHMD/2hzBf9odI6/4Qad0fIq37QzwmjC4yIEy90bo/
RFr3h0jr/hBp3R8irftDpHV/iLTuD5HW/SHSuj9EWveHSOv+EGndHyKt+0Ok
dX+ItO4Pkdb9IdK6P0Ra94fQ7A+R1v0h0ro/RFr3h0jr/hBp3R8irftDpHV/
iLTuD5HW/SHSuj+E47E/RFr3h3D+2R/CfNgfwvzYH8J82R8irftDpHV/iDTe
Vq0ZPTnE46F6o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuNNW7zReKPxRuONxhuNNxpvNN5ovNF4o/GmxxNvNN70/Is3nY940/mJN52v
eKPxRuONxtuVr3c0nHTrkXqj8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv
NN5ovNF4o/FG401bvNF4o/FG443GG403Gm803mi80Xij8abHE2803vT8ized
j3jT+Yk3na94o/FG443Gm9Otx55fbXum3mi80Xij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF40xZvNN5ovNF4o/FG443GG403Gm803mi86fHE
G403Pf/iTecj3nR+4k3nK95ovNF4o/FWpE6+uJdHk9UbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/FG443GG403Gm/a4o3GG403Gm803mi80Xij8Ubj
jcYbjTc9nnij8abnX7zpfMSbzk+86XzFG403Gm803qrPrtQkbFOqeqPxRuON
xhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjTVu80Xij8UbjjcYb
jTcabzTeaLzReKPxpscTbzTe9PyLN52PeNP5iTedr3ij8UbjjcZb85tNtu0M
ylBvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLxpizca
bzTeaLzReKPxRuONxhuNNxpvNN70eOKNxpuef/Gm8xFvOj/xpvMVbzTeaLzR
eOtdtk/u+WNfqTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm803rTFG403Gm803mi80Xij8UbjjcYbjTcab3o88UbjTc+/eNP5iDedn3jT
+Yo3Gm803mi8TRw+dfBPPbPUG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpv2uKNxhuNNxpvNN5ovNF4o/FG443GG403PZ54o/Gm51+8
6XzEm85PvOl8xRuNNxpvNN6WHl997dtm79QbjTcabzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm/a4o3GG403Gm803mi80Xij8UbjjcYbjTc9
nnij8abnX7zpfMSbzk+86XzFG403Gm803jp6diuysIizhTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803rTFG403Gm803mi80Xij8Ubj
jcYbjTcab3o88UbjTc+/eNP5iDedn3jT+Yo3Gm803mhdvwUMbPZuvot6o3X9
Jq3rN2ldv0nr+k1a12/Sun6T1vWbtK7fpHX9Jq3rN2ldv0nr+k1a12/Sun6T
1vWbtK7fpHX9Jq3rN5r1m7Su36R1/Sat6zdpXb9J6/pNWtdv0rp+k9b1m7Su
36R1/cbxWL9J6/qN88/6jfmwfmN+rN+YL+s3aV2/Sev6TRpvQ9uNGz/IxU29
0Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/GmLd5ovNF4
o/FG443GG403Gm803mi80XjT44k3Gm96/sWbzke86fzEm85XvNF4o/FG423C
hFnb74x2V2803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vGmLNxpvNN5ovNF4o/FG443GG403Gm803vR44o3Gm55/8abzEW86P/Gm8xVv
NN5ovNF4m71hyb2mzzzUG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpv2uKNxhuNNxpvNN5ovNF4o/FG443GG403PZ54o/Gm51+86XzE
m85PvOl8xRuNNxpvNN7+uLAh74HuXuqNxhuNNxpvNN5ovNF4o/FG443GG403
Gm803mi80Xij8UbjjcYbjTdt8UbjjcYbjTcabzTeaLzReKPxRuONxpseT7zR
eNPzL950PuJN5yfedL7ijcYbjTcab5te7DLlwrzVG403Gm803mi80Xij8Ubj
jcYbjTcabzTeaLzReKPxRuONxhuNNxpv2uKNxhuNNxpvNN5ovNF4o/FG443G
G403PZ54o/Gm51+86XzEm85PvOl8xRuNNxpvdMA3DRucHO97/N8zD5OyD+bW
319D//z3+btz+3lZNH+e5s+XuF/xs6Qi3uqX5s87tuP/n9+Xzus0rzv+/Tne
pKkxoc33+B4f3qrshCJ+eY7n+jKX05pbXhbN69H9Bu/ONcbb4nWav6/jn+f/
z593/P/z53nd8fe/czyO7/j/53j8e2vFDmq8eU6GnTLl7Pdmw/v77NLWsRfW
ptq8TvO6R5Oa0xL3J9tj24ecTLnvZt1JrWaV/euZvk5nfX6q5qairtbWDq/G
D7z0SL+enuZ8Ykun9s5W4uipQ/qkP9Cvp/P8O/GromXfmd/q5Xuc2jpMv57m
9Ra56x1163bC9us0rsTUlW9M8sKFgeM2bza8Tpd2G+X6JH+maRQ+s/eJqpcN
X09/vmPo08Df0ozHhj11bnwdqV9P8/re54ui1iVFm5qdf7661/mFeTznYnDn
E0/0dXpSrmsDaqfEmyLl3AYUWJyoX08v6nH2S8+oGFOuZ0m/vtVT9OvpFoMm
um9bc9vU21FnXINi6fr1NK93zG5/p6RbpnlS/Vadua/PmKHNR9R9k/BaX6f9
Qyu0yygfbP+2PGhNRHi2fj39zYJ91aefvWbfSA136tzdyeLraV6/XzS22rlQ
Z8s3+uyKx0/v2/H1U3p92cRVX6czVvzsXG5mnJ3R3+mPjUfc9Ovp6EajanZc
9tx2+T1vSP5qHvr1dL+Xx2p82zbFzru/eMaUYE/9eprXeT/iH8/4dfz9C46e
+Xl42vHnm/GMX8efT8Uzfh1/vhDP+HX8+TBHz/y8De348xd4xq/j/nk849dx
/7OjZ/aH0o77C/GMX8f9YXhW7w77e/CMX8f9GY6e+f4z7fj9Tzzj1/H7V3jG
r+P3Hxw987yUdny+h2f8Oj6fwTN+HT9f4xm/jp+PHD2zHqO5XnP9/u9aXOWh
V9PthT5eI9r4elorpl24uDguxS4U5R7n3srdunKpzEf7KsTbK/e5djo419Va
VfVZs+wOsbb/POdLP591tsLL98kzJ/c9O7jnu3r+rk7WsOTUX/1+um63Hfz6
f5snZpmuzoeqBIzZb34sktE0b3qmOXygu2/dqddN/9Mvqoz6Od2UenFt1b9l
75nhQ54XvBvzwqTtvH3zXM1486rGjZcz9iWYxeXmXD7ummzyzD1/6ofgR2b7
yOAqqxNSTIOTU0s1LH/PnD55YuG48HQTdvfh4KM+V0zGj6/bVd/8xlhtYp41
HTLP5Pun0IG8v78184b3rhY28YK9ZGKR+aOOOFkl55+aEtjzjv3PxZpJrYNd
rfFDB4y8fSLWPpjS0P94EXerX9ERW3xCn9khRdq0DljgYVWMrptYcvgL+7rV
Y9oql/efJ/znHByb8X49svVWlnOXNLttxsxKlap7WE+KWsMW5X9u377465oH
g9ysfZM8/7ltPbZ/XDct/+KtLtav0Vee+A+JsmNGT5nR+JGTtWFepabX6kTY
1/7MSk6t/9Y4NTs3MOjTJiayYebNzgdfm/y1A9d6dT9rYhNTj5yo+tI8b/vn
rfQ2ESZxedL68ltSTWSvoyMTWjw2mY2ezQ4qlWxyv0uvFVzyuXF9ePleQuWn
Zm3LZW8Dxr4wfl+GbD1UPNocWLm7h0/PNNO+8Lhn+fxumvivEsqerv7aZH68
Js9/N2zjNtNr1tpi2aZ/3U2LHuw7YOcdsGhkPRcnq3rMoRbFW4XZnx3492bR
Zy7WjGJ9O1u1o+wvHhzxnNPdzRoWMnjB8GZPbONxsdbLUHer25AxJzd2SbKb
V779U58mnno9xRvN9VPXE3I+aa63XO+4P3O9o/FX42GulGWF9ttcH7if6fdj
pPFzP9/91HbHMg3vJ67/vJ9o5s/6h+s36xeu7zQe5nU5suLT93+Odvqpa+jg
N0n69520ZfTUowFnba6HrAe4XtLMe8uZX3d+MT5K+6Tvuvz5esfqv+fG06sn
Hzd9abi+cH/l+kMzz2IL1wZvH53T6zZ+diymqov+ezu2fbwi9IhXznrXwTv3
N+bD/QbfXA9o7k/8/XU/ucyL6zVeeX/TXN/5++r3X2R+XO/wx/uV5vrIv4d5
cT+nuR4yP+bNv5frI+937teO61Xu71w/uR5wPO7n3P9pvp7rBcfj/LEeoLke
cz3hfu64nuX+z/WZ6w2vcz/n/k9z/eb6w3oAn6wHaK7veMU38+Z6z/WL+73j
epf1AfcDrm8cj/UA6wear+f6x/Hww3qC5v7C9ZH1gON6mPUD9xuun7yu611Z
P9Dcj7iesp7g/ch6guZ+xfuT9zPeuX9xPWa94LheZn3B/Y3rNa/zfmB9oesH
uf9x/eb9y/WK9yPXG95fjtcL/X1ccr9kfYF33i/cL1lv4J31LfdP1husX/HN
/ZPrPz5Z3+KZ5v7K+gT/rG95nfUKx2N9y/2Y9Qv+8Mv9mPUM/livcn9mPaP7
B8Qb92fuT3jRz198f06a+zfrHzyyXuV11kMcj/Uq93vWR6xH8cT9nvUS11vW
q/ihWQ+wnsIb61VeZ33VrcWpwPt30/V+y/MxemNua/zAL1P1/osnrs/44PrH
/LheMS+uR5x/3u+cH96fnA/ef/x9eT9wveX+xv2P5nrC/Yv7G837i/sT55Pm
/sDnP94f3A/08798PsIb17v+4U2LNGjs+cHvc/Na0Xbk1WfP9f23P2T91+4j
4+yJUyadSyib83kzoPcjl/Gncz5fPvyuRV3v3jm/D4L3X9yUhUXLtOxkxz9y
vt1vRs7nw5b/XG356+n0D36e8Ysaswsf6Byn75eZXnVaT7vx3CR4DO+42/WZ
/nv2LMnTIGHqI32//FJ26+efOj38YL/0kZObJyYXf23mxs1Idtn0u34+s6eu
33+32LkP9vOssjo9/X5Lzv6LnXtnjGkw081q1eeXWQXyJqhPa2BS4POzOc//
S9iZVqFEL2vd3+0GFNqeblfq9Wmupz09LZ/YwMGX+6bYEavqX2j20tl6FHw3
+avrd+xYM3hxiYFOls9H053Lj71se+w47NupyCvTu9G0iJDM68Y/3XfzW6cM
c6rX6rNP8zwwSWErAn/tEGcaFngX86pmqvmkZ8sRV8s9NJGR7g8bjM8w91PH
RP20bokJv1yo/bgtb83xax7VNuU9Y++/kLdCVIaTNeH8tbmfBDyz320uGu2/
08PaUDJo98AdyfZFn5I9Qtp4WcH5goLffeZl3fyuTcIw7zR71+7Dg2+s9LDM
lObJ5U8n21Oc59zs18/Duv7Rhkc92yXbrZv/3afn0ffri6Kj0mIrR9k/JkYE
1KjmbO0vdDUzuHG4XaDNk3ufz39pFocGXe0w/Zap9Gf9oddHvn8fjQ1/UPdS
tImePX93iXupZuGGmZG3c8ea8AX1j9wf8tSM2fGmT7vFL4xXsbSHFUyMyTvG
pddft9JMwxsRaWM777avFc4Tv+BTJ6vi3WupnrWu26sm5Ov/xTlna8lHFUue
K/jELpJReMOV++5Wr+ljXk1onGjHdipeesRUT6tZwMEGg+a/sAsOv/LHx+dy
vh8RWPpuyq5BOc9v6m3f0dsOSsv5/ZlfTb95aVeKHfS/Qlm/ZHz4PMfvZPsm
kaHJdmrF2KHLauY8v7m0ym/BjzNynt/wfn2w402H+Crx9sa8zf/+NPzD5znz
7jQt5X8g53nOhego99GZ9+z2Kbse7R754fOdX/JWvfz3lJv6eafxyKzypz6+
Ypfp0DcpwPOtrud4vtNyWbUh3Rods8PrXK5wdFOW3u9mlazRu3njnOc73O8a
+3RrnzbuqN4f6wcsWrVg+2VTy2XlX7cfffj8Z8Sz1zM/Dryp670z9nb7Tsg9
s/J8/wIZZV9+8DzIu1mVrBt/RZueHd2yAzbkPN/M/83Ar442SNb1HdezriWj
aqwuFG9+Mxtjlp5+/sHzoA7jzu/74mzO86CfE9MblQtOMd9fMZevNnjywfOh
yf/7JLTw9DT9/LfkVmBPn54ZZlzfORWPZIXpeo7nQ1tajk/KrpdpFsU3LR+f
fkXvr/m8pr7pknJKnw9xf73+VZhPzOs3ej+O2+60IvxWtmnQfOjqlfc+fH70
unTl8uf25Tw/mnWxUpduF5ysPfV2F1xd9dAHz5PyezRc3/6gszXnj7d/NVx8
V+/HD6ft6jwjV5Su71gflhs/pGrTZa7W+MMxj/pfjNH7sV9awWEt5uU8T+J+
XCd55bGvR+U8Xzpd8T/3mr09rH2VmmRVafn0g+dN3/c51yLgB0/9fHxnzf3F
nzXwsuI3lI68NjtVny/xvKlXZFqkfzVv61j7J18Ff+RutRo254mdHW9feOXr
PHa6q1U6enxy5RGxdt3hHZdVa/p+PZh4o+fdCTH28/69pu2ulmX8/1y1etaC
3ebb+ytcxnR9Ycp7xURcbf/UHG3ypELt2Qmmw7Lkqz2jkszesI4DetV/ZgLi
s9b1WJ1sDl3uvdVpzEVTzyNf56r/e2POnhq4bdjye3b/hwXiIga4Wv+2m75z
UPb79XAjv94T8rhbtdzbhB4Of/95rtbvsV4NE+1vt0xataCpm3Vw67SE0Qce
21EhNQ8+PJpt/lrUN5fzkBX2a5+g5jODX5uBA54e63f3jBmwObHab0VeG6+L
LU+fH3/R1Pp6cO2NT1JMkHX3zsyP48xGl6Bli9cmGfvq09DCqxLMpsh3VWom
hJph63PfnXv8lSlzafGjyp8fM94DCtwKc882G8LWz5w+8T+TVXSoT5OL2Sbz
+5JXj/SPsKcF5N88Y/n768bKuw0KPIqyWy4q+GnFb9ysMaV2znZeH2c/CB52
aNkEd+tCraatrr3Neb4X9bhhaq65XtaRVz98fjoyzd7/Ivr+7k05z1d43nI2
LuTvA5PS7WEj3u1Z2y/n+yFhn3gn53l/X92R3O9jt/8dt/dGPLemT4rU9eqI
wJY+8cUjzaZ63j8+LpFp/pw127d7+Zzn6avG94r/8+sUe9fRUmv8ynpb9b+b
+KX30pzv/4y661H6bC0Pa8+qxb3+eZRkv4r+rOObik5WjcxJUaFfn7c39z/4
bX4vJ+vB5FHeS5+fsbN//3J2/t453z/Z/TQi7NC/qSbk7q1u0YNjTfMqle/k
X3jPLJm2r33bGi9NV6+0sY1q3jMn5nmWWtLipfH9r+bwvUHX9fNW+uk7fq3b
hNm7bvs+LFHNxcq/dEzPXq3C7KB2C2fdrepi+V/ODJw26oV9NPavyYMPe1kb
tk0YtCww53lIkYM7f7j2KOf3l/J8pORHU11Onk+yS/uViSp/xckq+f25rK7O
N2zPm4X9G/jmfP+Jz1etykbsPHP6hr1j5OqTa11zno/wvMTf7vJbyIRYU/CY
/7as/6JMWnm3dclb002hbnf2eZ3IeT7C57Ncf9Uqmn94umlZZsXsCR/n7C9t
/7BZ1W03kuyI6qut4vHv38+rt+d/eSVRP//xeW7xtB+St13wtJJ+G3rk3lsP
q2z1llXGL3lhv6m8esbO4e5W8fB5fXuvTbA9r58PnB7naj3/dvLgGwXj7AWf
9Nj9s7+r1W7S2OFzrkXbK0PmTTB/OFst7oenJc69Zffzu1TiwssskxHnvm/B
o+VmvlObcQ1+yDTZPnNC89YLN5sa/+3zpE66qVzwRs/lFaKMPc/tr/mfpJhu
Gx90+nzPY7Mr+HCPvr6JZu4Xz1sfrZdozj/zTfXJijcLs1+Vcz2ZbLLGnPXr
cDHWVAhxKtPCM82c9O90MjL0munYNm+x+wtfm8XbUjO/iV1pH55ceMnFce9M
UKO2ubuYS/bWDUFNfuvubN3zDvnGb2qkPcpz8ZkAl/efQzN3jLOGxdjWwKWN
Qje6WUPKbTz5/aGE9+uElc4XCnta/WtHdkg77WmlLGn1T6laqfa0yV/EL9/u
Zs3IM3NAsS5Pbd+RGX7tO7tYEwfFJEwp9MDuPHJN25fT3xrPU3uqx+7cbY88
lBm3auAbU/fOnTPhrY+bKd0+3TnkwSuz/FXGvld9L5vlGyY1KHg2w1RYufTi
2nN3zMUq1fr1WJpsUgfGtRv5Kt5EVxs8Y1fMY9OtZ/bGzb1TzPw/Nq0Ocosw
85Jzra6dlGliO/ldad44xJQ58PHyaTWyzKLYzIDT53eZ5GIF/T6LyDaJB4f/
HX3Ytk+/mO9da4GTFVHPO3dcx4d254N/uE8NdbXW/9f+8Yo5cXa5En9O//T9
/eO3n7Pbpq97aue+uvzkmO/er5MqXpqxwznVDl669tjxed7W/wEHQNeZ
    "], {{{}, {}}, {{}, 
      {Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwNw+dWiAEAANDPL8/hIBJlR0qZ2ZRNQrIpoeyVvRp2Vsie2WTvkFKyZyL0
FO495zZKSU9MaxAEQalDGwZBkZ087jGPOsyb9nSEnxxuZxtb6kh7ec7enveW
Je6yic8d5RbH+NnR7rapLxzrVnMM8aVJxpvsF8cZZTPLHG8f73jX206wi829
YLEnPGmKX53oHkN95SRznew3Uy1wr1P97hSjbWG50+zrDH843RjDrHCm/bxo
fy9533vus6WvnWWeadY42/22stJ0891muFXOcYBz/WmGXY3wjfMc6EMf+cD5
xtray17xlKfNstZMD9jGahe43UX+cqEHLXSJv11snG1961IHudw6l9nNdr5z
hYO96nWv+dhDtve9K91htn9c5WE7+MHV7nStf13jEYe43n+us7sd/egGE3zq
M5+40R5GesNEz3jWzda7yf/eQnEI
        "]]}, {}, {}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  DisplayFunction:>$DisplayFunction,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.477630749703125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting QP Formulations", "Subsection"],

Cell[TextData[{
 "Sometimes it is interesting to examine what the QP problem looks like for a \
given SVM formulation. Using the option ",
 StyleBox["FormulationOnly", "MR"],
 ", we can inspect the various parameters instead of actually solving the QP. \
This can, for example, be used to study expressions analytically."
}], "Text"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"X", ",", "y", ",", "\[Alpha]", ",", "len"}], "]"}]], "InputOnly"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NonseparableSVM", "[", 
  RowBox[{
   RowBox[{"Array", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Array", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], ",", "C", ",", "\[Tau]", ",", 
   RowBox[{"FormulationOnly", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.477630812796875*^9, 3.47763082365625*^9}, 
   3.477630855203125*^9}],

Cell[BoxData[
 RowBox[{"Matrix", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"x", "[", 
             RowBox[{"1", ",", "1"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             RowBox[{"1", ",", "2"}], "]"}], "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"y", "[", "1", "]"}], "2"]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"1", ",", "1"}], "]"}], " ", 
            RowBox[{"x", "[", 
             RowBox[{"2", ",", "1"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"1", ",", "2"}], "]"}], " ", 
            RowBox[{"x", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"y", "[", "1", "]"}], " ", 
         RowBox[{"y", "[", "2", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"1", ",", "1"}], "]"}], " ", 
            RowBox[{"x", "[", 
             RowBox[{"2", ",", "1"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"1", ",", "2"}], "]"}], " ", 
            RowBox[{"x", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"y", "[", "1", "]"}], " ", 
         RowBox[{"y", "[", "2", "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"x", "[", 
             RowBox[{"2", ",", "1"}], "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"x", "[", 
             RowBox[{"2", ",", "2"}], "]"}], "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"y", "[", "2", "]"}], "2"]}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"C", ",", "C"}], "}"}], ",", "0", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], ",", 
      RowBox[{"y", "[", "2", "]"}]}], "}"}], ",", "0.01`"}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.47763079071875*^9, 3.4776308253125*^9}]
}, Open  ]],

Cell[TextData[{
 "The parameters are given in the order corresponding to the arguments of ",
 StyleBox["QPSolve", "MR"],
 "."
}], "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feature Space and Kernels", "Section"],

Cell[TextData[{
 "In all of the preceding examples, the separating surface is assumed to be \
linear (a hyperplane). This is often a serious limitation, as many pattern \
recognition problems are inherently nonlinear in the input data and require \
nonlinear separating surfaces. To overcome this obstacle, for each specific \
problem we devise some appropriate transformation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "(", "x", ")"}], TraditionalForm]]],
 " from ",
 StyleBox["input space",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 " (the domain of the original data) to a ",
 StyleBox["feature space",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 ". The function \[Phi] is chosen so that a hyperplane in ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 " corresponds to some desirable class of surfaces in ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 ". (Choosing this function for a specific problem is something of an art, \
but we can always try a few different \[Phi] known to have been successful in \
similar problems and simply hope for the best.)"
}], "Text"],

Cell[TextData[{
 "As an example, consider a second-degree polynomial surface in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]]],
 ", described by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["w", "1"], "+", 
     RowBox[{
      SubscriptBox["w", "2"], 
      SubscriptBox["x", "1"]}], "+", 
     RowBox[{
      SubscriptBox["w", "3"], 
      SubscriptBox["x", "2"]}], "+", 
     RowBox[{
      SubscriptBox["w", "4"], 
      SuperscriptBox[
       SubscriptBox["x", "1"], "2"]}], "+", 
     RowBox[{
      SubscriptBox["w", "5"], 
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"]}], "+", 
     RowBox[{
      SubscriptBox["w", "6"], 
      SuperscriptBox[
       SubscriptBox["x", "2"], "2"]}]}], "=", "0"}], TraditionalForm]]],
 ". We may represent such a surface by choosing a mapping ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "\[Rule]", "H"}], TraditionalForm]]],
 " as"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Phi]", "(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"]}], ")"}], "=", 
   RowBox[{"(", 
    RowBox[{"1", ",", 
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"1", ","}]], 
      SubscriptBox["x", "2"]}], ",", 
     SuperscriptBox[
      SubscriptBox["x", "1"], "2"], ",", 
     RowBox[{
      SubscriptBox["x", "1"], 
      SubscriptBox["x", "2"]}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], 
      SubscriptBox["x", 
       RowBox[{"1", ","}]], 
      SuperscriptBox[
       SubscriptBox["x", "2"], "2"]}]}], ")"}]}], 
  TraditionalForm]], "NumberedEquation"],

Cell[TextData[{
 "and forming a hyperplane in ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 " defined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"w", ".", "z"}], "+", "b"}], "=", "0"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"\[Phi]", "(", "x", ")"}]}], TraditionalForm]]],
 ". If we now solve the problem in the new variables ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 ", we obtain a wide-margin hyperplane in ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 " corresponding to a second-degree surface in ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "The problem with this approach is that nonlinear \[Phi]-transformations may \
have huge dimensions. Even for the simple quadratic surface considered here, \
we obtain ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"dim", " ", "H"}], "=", " ", 
    RowBox[{"1", "+", "n", "+", 
     SuperscriptBox["n", "2"]}]}], TraditionalForm]]],
 " when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"dim", " ", "X"}], "=", "n"}], TraditionalForm]]],
 ". For increasing polynomial degree, this number grows quickly, and there \
are even nonlinear functions that result in infinite-dimensional ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 ". This is why we do not solve the primal problem (2) directly: ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]]],
 " may not be a finite vector, but \[Alpha] always is."
}], "Text"],

Cell[TextData[{
 "This problem is elegantly solved by ",
 StyleBox["kernels",
  FontSlant->"Italic"],
 ". It turns out that there are many functions \[Phi] for which we can \
compute scalar products ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Phi]", "(", "x", ")"}], ".", 
    RowBox[{"\[Phi]", "(", "y", ")"}]}], TraditionalForm]]],
 " in ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 " implicitly, without actually calculating \[Phi]. And in fact, this is all \
we need for solving the SVM formulation (1). Thus we define the kernel \
function as"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"K", "(", 
    RowBox[{"x", ",", "y"}], ")"}], "=", 
   RowBox[{
    RowBox[{"\[Phi]", "(", "x", ")"}], ".", 
    RowBox[{"\[Phi]", "(", "y", ")"}]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "In the case of example (6), it turns out that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"K", "(", 
     RowBox[{"x", ",", "y"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "(", "x", ")"}], ".", 
      RowBox[{"\[Phi]", "(", "y", ")"}]}], "=", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"x", ".", "y"}]}], ")"}], "2"]}]}], TraditionalForm]]],
 ", which is why we chose that specific form of \[Phi] (explaining the two \
separate terms ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], 
    SubscriptBox["x", "1"]}], TraditionalForm]]],
 "). It is not difficult to prove that this result holds for any polynomial \
degree ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]]],
 "; therefore, using the ",
 "polynomial kernel"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["K", "d"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"x", ".", "y"}]}], ")"}], "d"]}], 
  TraditionalForm]], "DisplayFormula"],

Cell["we can obtain any polynomial separating surfaces.", "Text"],

Cell[CellGroupData[{

Cell["A Nonlinear Example: Using Kernels", "Subsection"],

Cell[TextData[{
 "Let us see how kernels are handled in ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " to solve nonlinear problems. The second-degree kernel in (6) is provided by"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialKernel", "[", 
  RowBox[{"x", ",", "y", ",", "2"}], "]"}]], "Input"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"x", ".", "y"}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.477631033375*^9}]
}, Open  ]],

Cell["\<\
Here is some data a linear classifier cannot possibly cope with.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"len", "=", "50"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RandomArray", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "0.03"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"len", "/", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Random", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "/", "len"}], "-", 
             RowBox[{"1", "/", "4"}]}], ",", "0.01"}], "]"}], "]"}], ",", 
         RowBox[{"Random", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"i", "/", "len"}]}], "-", 
                RowBox[{"1", "/", "2"}]}], ")"}], "2"], "-", 
             RowBox[{"1", "/", "6"}]}], ",", "0.01"}], "]"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"len", "/", "2"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"len", "/", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"len", "/", "2"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SVMDataPlot", "[", 
  RowBox[{"X", ",", "y", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAArgoSObbaX79jaunXtFlQv0/yMdkj
DGa/Dobwvzw5lr/PjRgkw2GaPxcOCdp1sGK/KpLpDOFekj+AdUZVc1SjvxYF
byaj8Zk/Cxhd7aToW7/eS0/ZAaWtP7tFae4YLrQ/maR3ZDjumL/lV+WNXBlw
P7Chj25VzKM/diX/0NB4fT/SZ04oK8KWPymmXLEbCmW/kljIPmCPmb8dCCJT
7nGwv7GaYEiOHaG//8ru6ASHl7+mRDZEQeObP7djEPHMNX8/nvkkQjOGpD9a
viSzXh91P3VHtENWjHi/iE8jEaNXjT+mT3xBtaGYPwwAlOxqpXU/jg7F598s
or/LaaHTu5hbP/P3sWMEXrU/w5SvBTfkmD9ocI6aZUWUv8JsQyleiJ4//J0O
tVN6pb8dHPJFemeUv2hm8kaP65u/06JwS4VpsD9SOq3Qtrmcv1I29lIS85G/
nK+xaTWKX79Y1QvaPsBev89UJkkvO64/mM1cDsEhZb/TpU3Ma2ijv1CIPKqO
M5W/1TzBW/l7lz9LvLUgpUdwv4Z2xp0=
     "]]}, 
   {GrayLevel[0.6], PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAATBzKXr6Zzb/WNNUob+axPzeu4IKF
2Mq/UlWPn7ABoT9IZSz6FbPJvzyexenNiZq/p5yc2KuExL8Z/Ba11iOrv8F2
Xr6M3MS/4r7UBzgLtL+Ye/2apUi8vytaMAXh5ri/fbhWLA65vb9eXtmppT68
vzc+48EHQrW/5d2XHb9ovr8HkwhExOG2v+0l7DvU58O/m8pZYO2fq7/8WWFF
JbzCv7ua5DlhbJa/6zxEow6vw79mU7JuFHR4P7KJgehIV8e/q2HDtQ3MgT85
VG8RWxTGv48Z76R9EZ0/VozXKx3yxb9fqJ2eDUWsP8uUbPy6ucC//o4FSoYn
rT/AeD0FJfDBvyLrHIteWrc/ORjfuRmMvr+eaQzGrKK9P0yNcVqD3cC/5WFH
AYlCvT/wqRn/YEi2v3JdTc30z8M/tRvDlynttL+tmQxR163FPxg6Ey7cIa2/
9EMnzkqAxj/LKFZO1w6hv78Kq7doAsw/VG+dAWhOdz+OR7FDKuvOP1dpxz1f
6ac/1T36NU3szj/nOLv4Um+0P9yp1ag=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  DisplayFunction:>$DisplayFunction,
  PlotRange->All,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.477631224484375*^9}]
}, Open  ]],

Cell[TextData[{
 "Let us solve this problem using the polynomial kernel. This is done as \
before, by supplying the desired kernel (which can be any function accepting \
two arguments) using the ",
 StyleBox["KernelFunction", "MR"],
 " option."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pk", "=", 
   RowBox[{
    RowBox[{"PolynomialKernel", "[", 
     RowBox[{"#1", ",", "#2", ",", "2"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]", "=", 
  RowBox[{"SeparableSVM", "[", 
   RowBox[{"X", ",", "y", ",", "\[Tau]", ",", 
    RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "5408.666270278166`", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "808.8867302299426`", ",", "0", ",", "0", ",", "0", ",", 
   "2311.3758265222746`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "2065.455002931312`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "222.9487105946282`"}], "}"}]], "Output",
 CellChangeTimes->{3.477631288484375*^9}]
}, Open  ]],

Cell[TextData[{
 "When visualizing the results, ",
 StyleBox["SVMPlot", "MR"],
 " can use the kernel functions to draw any nonlinear decision curves."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SVMPlot", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", 
   RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.6], PointSize[0.015], 
    PointBox[{{-0.024960998374887362`, -0.06423844842541411}, \
{-0.2097327126551691, 
     0.033216018178488085`}, {-0.11048350366534831`, -0.09727293373757877}, {
     0.11429649621221179`, -0.08704191425355368}, {0.24158635268803033`, 
     0.07982367107908638}}]}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAArgoSObbaX79jaunXtFlQv0/yMdkj
DGa/Dobwvzw5lr/PjRgkw2GaPxcOCdp1sGK/KpLpDOFekj+AdUZVc1SjvxYF
byaj8Zk/Cxhd7aToW7/eS0/ZAaWtP7tFae4YLrQ/maR3ZDjumL/lV+WNXBlw
P7Chj25VzKM/diX/0NB4fT/SZ04oK8KWPymmXLEbCmW/kljIPmCPmb8dCCJT
7nGwv7GaYEiOHaG//8ru6ASHl7+mRDZEQeObP7djEPHMNX8/nvkkQjOGpD9a
viSzXh91P3VHtENWjHi/iE8jEaNXjT+mT3xBtaGYPwwAlOxqpXU/jg7F598s
or/LaaHTu5hbP/P3sWMEXrU/w5SvBTfkmD9ocI6aZUWUv8JsQyleiJ4//J0O
tVN6pb8dHPJFemeUv2hm8kaP65u/06JwS4VpsD9SOq3Qtrmcv1I29lIS85G/
nK+xaTWKX79Y1QvaPsBev89UJkkvO64/mM1cDsEhZb/TpU3Ma2ijv1CIPKqO
M5W/1TzBW/l7lz9LvLUgpUdwv4Z2xp0=
     "]]}, 
   {GrayLevel[0.6], PointBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAATBzKXr6Zzb/WNNUob+axPzeu4IKF
2Mq/UlWPn7ABoT9IZSz6FbPJvzyexenNiZq/p5yc2KuExL8Z/Ba11iOrv8F2
Xr6M3MS/4r7UBzgLtL+Ye/2apUi8vytaMAXh5ri/fbhWLA65vb9eXtmppT68
vzc+48EHQrW/5d2XHb9ovr8HkwhExOG2v+0l7DvU58O/m8pZYO2fq7/8WWFF
JbzCv7ua5DlhbJa/6zxEow6vw79mU7JuFHR4P7KJgehIV8e/q2HDtQ3MgT85
VG8RWxTGv48Z76R9EZ0/VozXKx3yxb9fqJ2eDUWsP8uUbPy6ucC//o4FSoYn
rT/AeD0FJfDBvyLrHIteWrc/ORjfuRmMvr+eaQzGrKK9P0yNcVqD3cC/5WFH
AYlCvT/wqRn/YEi2v3JdTc30z8M/tRvDlynttL+tmQxR163FPxg6Ey7cIa2/
9EMnzkqAxj/LKFZO1w6hv78Kq7doAsw/VG+dAWhOdz+OR7FDKuvOP1dpxz1f
6ac/1T36NU3szj/nOLv4Um+0P9yp1ag=
     "]]}, GraphicsComplexBox[CompressedData["
1:eJxl3XVUVFvDgHEF66K+JrYodncLbru78YotKraChWBgomChqBikgtINAptu
u8W6BjZ21+e31nn2rDX+dddvndEzznnOnr3PnJlrOmPx6NkGRYoU2WBUpMj/
/3dorZwpiYfOyrDtG54OnJApjbONFxc1yFO+azt9XV/rHOWT9QJ3bb2Upbzk
/JfjOd0ylbuu7RtS1jtd2aDp7qSRpdOUc6/mX9i3PEXZdWPj/67lJynHTSl4
0H5bovLQGHvDuIlndM+ngnGDnk1jdPufH9A342uEbn/pfWYPzQlVbmoeVdq3
Y6Dy8DePhoZeO6G83LuSS8JKD+U2gZuO7Wvrqvx02DbHkHP2ym+qGSx/1cRW
4Hd1Zt6qV2qvsl9s8YlGGceUg5teef4l2VfZaYWv/8u6Acph07t3eCNCleuW
8qlkvThC2SWozPuHx6KVf4y1vWR5Lk7Z+vud0Os/E5RfjvTO8juQpFzfZ0LM
7FYpypM+l/arl5GqvGdwkts9y3TlrKM2W498zFD+/abJSgvnLOVOfe9YVWmY
o7zQbc/4y/G5yj7P+/XfPfas8lXzbx2HvTynTG9j0vv9r6NthuoN0xumN0xv
mN4wvWF6w/SG6Q3Tm3o+Wm9q/1pvan9ab5jeML1hesP0hukN0xumN0xvmN4w
vWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5je1PHUevtQxKiD6b50
1RumN0xvmN4wvWF6w/SG6Q3TG6Y39Xy03tT+td7U/rTeML1hesP0hukN0xum
N0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML2p46n1
tt/snEXZ0DTVG6Y3TG+Y3jC9YXrD9IbpDdMbpjf1fLTe1P613tT+tN4wvWF6
w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xv
mN4wvanjqfXWadXedV/PpareML1hesP0hukN0xumN0xvmN4wvanno/Wm9q/1
pvan9YbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3
TG+Y3jC9YXrD9IbpTR1Prbfr4eN9H79MUb1hesP0hukN0xumN0xvmN4wvWF6
U89H603tX+tN7U/rDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG
6Q3TG6Y3TG+Y3jC9YXrD9IbpDdObOp5ab6te18i9aKTrDdMbpjdMb5jeML1h
esP0hukN05t6Plpvav9ab2p/Wm+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0
hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3tTx1Hqr3vzem4Qmyao3TG+Y
3jC9YXrD9IbpDdMbpjdMb+r5aL2p/Wu9qf1pvWF6w/SG6Q3TG6Y3TG+Y3jC9
YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6U8dT6y3OyrvK
qf5JqjdMb5jeML1hesP0hukN0xumN0xv6vlovan9a72p/Wm9YXrD9IbpDdMb
pjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXpT
x1PrLbLv+VUtshNVb5jeML1hesP0hukN0xumN0xvmN7U89F6U/vXelP703rD
9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y
3jC9YXrD9KaOp9bbpzMT0ooVT1C9YXrD9IbpDdMbpjdMb5jeML1helPPR+tN
7V/rTe1P6w3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xum
N0xvmN4wvWF6w/SG6Q3TmzqeWm+d298vd6fnGdUbpjdMb5jeML1hesP0hukN
0xumN/V8tN7U/rXe1P603jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xum
N0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9qePJ+vTU3H8j18bq1qea1fpUs1qf
albrU81qfapZrU81q/WpZrU+1azWp5rV+pTnw/qU/bM+ZX+sTzWr9almtT7V
rNanmtX6VLNan2pW61PNan2qWa1PNav1qWa1PtWs1qea1fpUs1qfalbrU81q
fapZrU81q/WpZrU+1azWp5rV+lSzWp9qVutTzWp9qlmtTzWr9SnHU+st1vTt
CeeYaNUbpjdMb5jeML1hesP0hukN0xumN/V8tN7U/rXe1P603jC9YXrD9Ibp
DdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9
qeOp9fbt4Op3sz9Eqt4wvWF6w/SG6Q3TG6Y3TG+Y3jC9qeej9ab2r/Wm9qf1
hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5je
ML1hesP0hulNHU+tt+7lDXr0aBOhesP0hukN0xumN0xvmN4wvWF6w/Smno/W
m9q/1pvan9YbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3
TG+Y3jC9YXrD9IbpDdMbpjd1PLXe1m512l5lQZjqDdMbpjdMb5jeML1hesP0
hukN05t6Plpvav9ab2p/Wm+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN
0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3tTx1HpL+FXxauHJENUbpjdMb5je
ML1hesP0hukN0xumN/V8tN7U/rXe1P603jC9YXrD9IbpDdMbpjdMb5jeML1h
esP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9qeOp9fbzRadeLpmB
qjdMb5jeML1hesP0hukN0xumN0xv6vlovan9a72p/Wm9YXrD9IbpDdMbpjdM
b5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXpTx1Pr
bf2tATd6iFOqN0xvmN4wvWF6w/SG6Q3TG6Y3TG/q+Wi9qf1rvan9ab1hesP0
hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5je
ML1helPHU+vNMHvi4tdRJ1RvmN4wvWF6w/SG6Q3TG6Y3TG+Y3tTz0XpT+9d6
U/vTesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMb
pjdMb5jeML1hesP0po6n1tuW6HklPFp5q94wvWF6w/SG6Q3TG6Y3TG+Y3jC9
qeej9ab2r/Wm9qf1hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD
9IbpDdMbpjdMb5jeML1hesP0hulNHU+tt4pDP3bzHHpc9YbpDdMbpjdMb5je
ML1hesP0hulNPR+tN7V/rTe1P603TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1h
esP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG/qeGq9VWtadZ6B2UHVG6Y3
TG+Y3jC9YXrD9IbpDdMbpjf1fLTe1P613tT+tN4wvWF6w/SG6Q3TG6Y3TG+Y
3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvanjqfVmUqKr
28zme1RvmN4wvWF6w/SG6Q3TG6Y3TG+Y3tTz0XpT+9d6U/vTesP0hukN0xum
N0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0
po6n1tuAjEin7R03qd4wvWF6w/SG6Q3TG6Y3TG+Y3jC9qeej9ab2r/Wm9qf1
hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5je
ML1hesP0hulNHU+tt4FFC9xbj5qresP0hukN0xumN0xvmN4wvWF6w/Smno/W
m9q/1pvan9YbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3
TG+Y3jC9YXrD9IbpDdMbpjd1PLXe+u/YvPph9SWC3jC9YXrD9IbpDdMbpjdM
b5jeML2p56P1pvav9ab2p/WG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5je
ML1hesP0hukN0xumN0xvmN4wvWF6w/SG6U0dT623g6XXTWvdaovqDdMbpjdM
b5jeML1hesP0hukN05t6Plpvav9ab2p/Wm+Y3jC9YXrD9IbpDdMbpjdMb5je
ML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3tTx1HrL8Ku9Marx
XtUbpjdMb5jeML1hesP0hukN0xumN/V8tN7U/rXe1P603jC9YXrD9IbpDdMb
pjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9qeOp
9ZaU+33MuC6HVG+Y3jC9YXrD9IbpDdMbpjdMb5je1PPRelP713pT+9N6w/SG
6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4w
vWF6w/SmjqfWm+XnlxXXNPBQvWF6w/SG6Q3TG6Y3TG+Y3jC9YXpTz0frTe1f
603tT+sN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdM
b5jeML1hesP0hukN05s6nlpvt0rdtssO8Fa9YXrD9IbpDdMbpjdMb5jeML1h
elPPR+tN7V/rTe1P6w3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0
hukN0xumN0xvmN4wvWF6w/SG6Q3TmzqeWm8TauQ+qtbxpOoN0xumN0xvmN4w
vWF6w/SG6Q3Tm3o+Wm9q/1pvan9ab5jeML1hesP0hukN0xumN0xvmN4wvWF6
w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5je1PHUervSPG7Y3IRTqjdM
b5jeML1hesP0hukN0xumN0xv6vlovan9a72p/Wm9YXrD9IbpDdMbpjdMb5je
ML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXpTx1PrbZS5
f1R0vyDVG6Y3TG+Y3jC9YXrD9IbpDdMbpjf1fLTe1P613tT+tN4wvWF6w/SG
6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4w
vanjqfU2p3HeLsMnIao3TG+Y3jC9YXrD9IbpDdMbpjdMb+r5aL2p/Wu9qf1p
vWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xum
N0xvmN4wvWF6U8dT661RSJ++zU+Hqd4wvWF6w/SG6Q3TG6Y3TG+Y3jC9qeej
9ab2r/Wm9qf1hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9Ibp
DdMbpjdMb5jeML1hesP0hulNHU+ttyddznwZ/effSW+Y3jC9YXrD9IbpDdMb
pjdMb5je1PPRelP713pT+9N6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdM
b5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SGQ969Lrh3Nk9uPDnze48C3e9H
49Lfxllu3X1Y+VSSlRS+O5TfzCtjumXIKGWzynUTF9U9JzD70//zW2zWmQjn
cMGfx61O1O88ZfRWgc8u6HCoypyDyjxffl+d54f5+9Xv12t/P+b56T9e9aQ9
HvN8MM8HO5S8U+98+7Py8MF3b1NNMmWppmW/WW45JzCvp/529s+f1/89fl6v
lBK1ZHWDPerP0z/b20U8Lp5dfqnazuuN1f3I2utn8yvxeelr00TU+KOlB/3S
Wf/84fH/vP/wcVSos3o85vHnl+8vMrT/ZrV/rP//E+Dv4/ny92H+vjEWo1dZ
v1+v9ofZzvFifxwf1aP278X8+9TroR1f/T/P82V/bGd/DR42Nm1eTNev+r16
7e9jO2Y7r4d11JVicYG654N5ffjzPN7sSlTVELMM9fzU36/9+zB/n/7j2T//
HrbTE/9eXn/98+nGIp+O2VPi1L8X8+/D7A/HHxjWonmJU7JaQYsNnodj5P1B
axd2PumtzN+PezvOL71ur5fAXat9GfvPjHA5yTIyb/W1KJm7dJftrnYhyvz9
+GTitA6Oe6Lk4Svm1UZXjFR/HhvPzq70MylW3h6SMbPZ8HD1eMz2WqnDgw2c
QqVj6XbvV7yJl/E2QR8jdwSr7fjLxGHzvpRLkj1myp1WhgHq8bi9X9OUGlbx
AvP4lFEX6le185NtAopaRJ5Mln17/heX+c5Hbcdsz2r1btQqa0+5bY19z60z
kgW2+h05cJlIlfu7lbg0Ks1dPR6z3b1qkyLh4a4y8WzbNn2/pQh8bLR1l9bX
02TvZ/smN+m/Qz0es/1Q/+ClVwetkZ/qFtQpujdNYLaXH+c62dJJiCu+Jk1e
LsqQ3S/2qm3a3UGwHbewOVwusWmGwDx+byvLdud6OKvtmO194sq8KB6yX5T5
eqmqf4ksaX7nebxP0hG1Hc/KHP57TXKmwDy+1vpZmZ5PPZUP7hnT5u0SX3G4
huHrzhbZAvceurWk1bFsWcW796GeX/3U4zGPxzx+b0Rbg90bApRLzdwd+bpY
iLi0MPruhzc5ArM940VJ66rZoWo7XnO8++d6nXLV+Mjj9cdr/fcHzjfOJ/3f
H1LnqzZeYN6/9M35p+4P18z5pv97NGxX93trrnXBLGfZW7+/zPnKfBBzvur/
PgnbP9f633arkcFC35zfzDcx5ze/d/As4nX9wOth6vGY85/5q/54wPfXJ/w7
0bBxySj1eMx4weP5/nF60eQHHp1i1XbM+MH8GTN+8H1Sxg+2Y/3vE+uPL3w/
kMcz3rCd73N5Dt/r6bpfqu2Y8Yf5v/54xPdzGI/YjtX3o7TH8/0KtjM+qf9/
g954xf3xjFdsx2zn8dzfzHbGL9Y3+uMZ96cynrEds53Hc38h2xnv2M79YIxf
bMf69xPqj3/c38PjMdu5H4PtjIds5/Nzxj+2Y/37MfTHRz4P5fH64yWfXzH+
sR2zncfz+QPb9T/P0h8/uX7M4/XHU673MV6yHbOdx3O9hu2Y7ayv2c74qr6/
qJnxmPlmqeT550K35anHY/35sv54qv97bvrjof7vbemPb/q/h6Q/fun/Xo3+
+KT/eyL645H+7z3ojzf634/WHy/0v7+qPx7of99L/3zW/36E/vmofz+x/vml
fz+Ufv/69w/o96v/+Yd+X/rXbzj+x8a8si873U367dwyUL6KlZv7HDJbtMhP
PjUs5+r2533kWGHtO80OhMlmdm73Fs+OkmX2b4n3SY+U1u/qNB/oGSHXdH/t
bvIxRgbM81tR906YfPrfBLuDDeLl5JBlNb38g+S4bUmTKo6V8t4xx7DRpqfl
DLfKtTN6JcvHdr73w8v7yIPPs8o43kyR10JdajcrclheMLf/IZamybTrPu9v
JGyVJfa0ffmjVIas+W3X53u+G0WPR4/zYz0y5Y/ZM5bmbTombDofzl3RJVva
znFYPjbfXwQ4DT/T/kKOWo+t8kg0K5p0VA7MGrzodOlY+e5Z0VpPj56WTuJy
rOOAaHml16W8Jy0jZE7Uv8UnO0bK3k+7BUy3jJZlWj0a2UGGyxAX7x35O+Ok
S62PTx51CpEmHcvMHxefII81/m615nGAzFjYzfeJbZL0KVZ7f/4VX/krqdDV
p2yKHJtqv2X1tqOyQ2XvTdN9U6X8tjF95TkXuWDOBBsT83TZM2jmkI3NVgqv
uNKz8q9kSIexy0vZ/zgsbpVNGnNwQZaMultCtqjqJ8pPt+kzrliOHL93etuO
tcLFtIzc2COd9wuOV7dKR1ftPuAu+PcVrN12K9LipOD4jan/Nrb19lOCf29S
tsUh/5hAwfGs2mV6fAWbEMG/f/gO44BzpcMEx3fT3Wz3Hd7hgtcjvq3DjoHd
IwXH+92mdnbFL0eJob4LjpT5Hiqb3SiwTrGOES/vt0n5Ui1UTmvuPmmdQZzg
9TvoMGKw2eEzgj7OXTTs9rVtgjCtUuZXM0t/WaJhTNOo7EQxw9l1kOGhk9LE
LGpnbJskwesbN3t3sYM/kgT9jN9lvXZFVrLg9X4T0/fDWNcUQU87H5gsaD8t
VfD6Nynz9WGFFmmCvtI6Xv73zec0cWLFmDcPp46VU6YGXj6Xmi7cLgwfsb3i
DPFt29YhgbsyxKa2+zvdfbFPHAibnrrj30xh0GfT8ZY2bqLd7e7drRtnifgz
TV45l/AUecWrhA98nyXs+np4RuZ4ibmt3zRrLLNF+zcfG689floUs8jxKr4j
R7xbtfC298xA4bHRp8aj8bmC49stwGFvSr08db0AMz7Tt/71A8ZjrH6vU1vf
sh2znfUu2zHbWc8ynmP1+5Ta/JTxmPknZnygB8Zb5nuMx5geGC+YTzJeM1/E
jC/0wvyQ9SXzP8z4M9c6auWsbR5qfsd6kvkcZny67RIyZMfrvWq+xvqR+Rlm
/DpW/+LxTl2Xq/kX60HmT5jxrVTdE2ddZu5W4z3beT/A9MjjGf+ZD/H+gOmT
8ZL5Fu8fzKcw4yv98v7BfIf3F0zfjL/Mn3j/Yb6EGa/pn/kH60d1f69mzo9P
ZxtOMO0WJrjew/jH9R7M9SHM9RrmM5i+qx5tY/mhh696fzj1KdN+TTkv5dJt
omumfPNQ4ynXbzhfMOeDlfu8Vwt/haj3l2m7rb9PPxukzPnAeEnvvJ/QM+Mh
vTZ+37LFzqFe6vyhZ+YrmPGRx2N6p+dJHscjbq08oOY39M78BjOe8njM+UDv
OREZpt0C16v5EOcD8yHM+MvjMecLfTI/4nzBvH8yXmPGa+ZbrE/U7xFqZnzn
/Rczv+B8NK69KNshars63zB9Mz/j/MG8n/N+gfXfL3i/53zj/YP5Pddz1Pdt
NDM/6Hq26vg7Lj7KX8btMio+5oQaP3i8+v6GZt6f+POYP8/5zPyD85X3L9YT
XA9ivYGZr4QUfbw7t3Gwcpd+QV5fbUPUeMXjGU8w74/8ecyfZ/+MD+r7IprZ
34F/nq8tO1Fnxg/GE7Zz/YnxgutBjBfMH9mOGT+4XsV2rndjrl9hrn9hrmdh
9fsG2vjCfJXxBzPecD2L7bwfs15iPst8DbO+4v2V9RHzW95/sf71Ga6PMP9l
PoZZPzH+6F9P4foH82Xma5j1FeON/vUSrm8wv2Y+h1l/Mb7weMYLrmdw/mPe
r7l+weMZHzDjCec31yc4n7iewPnJ9QPGD9ZrbOf9E/P+Sv9cH6Bnrgdg1nd8
nkVPrOf1TV+sJ3i/Y72PV12r8717Mx/1/sf6X9/MD1l/8H7H9QHM+xc9ML+n
H97PMNv11+P0wPyffnj/wmzXX6/TA+sD+uH9CrNdfz1PL6wfeP/h/Qaznfcv
xmf64P2A+RbjNWY78zPm34xPWI1H2nyF48f8hOstXK/GrO9Z/3G9hj4w4w3r
R44n1284/lzfwawvWW9yfZzxh+vdmOsLrDf5+9Xve2vrU54v14f493D9CLN+
ZT3L47nexHqW/XE9iefD9SbMepfxlMcz3rL+ZX7H+Kr/eZz6vVTtegnrY66/
M95yfR3zeOaLnE+M36yfmT9yvrBe4vzCnF+snzg/mE9yPmHOJ+aTnA/MFzl/
MOeP/vqJ84H1E2Y+yfyO62PMHzm/MOcX80fOL8Zn9fvTmpnPMZ7zeK6/sb5n
/sZ4zfjOfI35G+sj5lfq+7GamU8xv+LvY77D/A4z32L+w9/P+wXvB8zHWD/x
51k/YeY7+vMn3i+4nsD1B/4+tnP9ge28v+i/PzAeML+gf+YP9Mj8gPUJ7/es
L3j/Zn3A+y3zb94f+feznmO8wer/f6GNf4wfrM/0xyPGA64HMl5w/nH+cj2Q
6xmc/5yfXH/GXO/ifGX+w/nH9QnM68P5yPnC+cf1Cczrx/nI/IXzj/ML8/py
Pqr1unZ9gfUMZn7D9QbOR64vcH5hzh/OD9YzvH/RO+Z48n7H+Mz1e8ZfzPjK
eMnrz+eJXG/k+iLHm/cL3o/0r/8y/vN+weMZ79nOeEnPjIf0zHhHz4xP9Mz4
w/qT8YH1GOcr57/6vTLt/Zj1Beef+v0ybTvrC7ar9aA2n+X4cD6x3ubzBY43
61HGH+avjD+sDxkvmI8yXrC+4noK80Xe33n/ZL2i//mB/vU/tR7RXn9eb15/
Xm9ef15vXn9eb+ZTvN6839IP5zfnK+cfn99w/vD+xPnD/JyeOX68P9MvZn+8
X7M/1sdcT8D66wvOL14P5tO8HsyPeT2Y7/J6MH/l9WA+ynyLnrD6//lo8y/O
H85Xxl/MeMv8ivOJ85X5GWb85fzmfGP+wniK1e9Da+tLzkfmL6wXsPo9U209
ST/MX1gfYF4/1o/0xfjHegDz+rKepD/OP/35P68/5yN9cr4xPmKOD+cf/XL+
cX0V0yPnIz1yvYLjxfUOzPnK8eX8U+t57fo75nol6zWuD/B68v6GuZ7J+oz3
Q15P3t8w1ytZj3E+Mp9T/z8Yzcwfmd8xvrGe5v0NM59j/c36l9cD0z/rWfrF
9M7rwedV/Hv5fIp/D59H8Xw5/jwfxlc+39P/PI/5C8eT58f1Kf3jx+fbzMd4
fhwvPt9m/sHz5fjw+TbzDZ4/x4OeGR/593A/Fa8n/x6eH/cL8Hry72O8UPeX
aPNpzPsR71e8XvScmeu5/+dk3f+P7u2nkY4738RI3/FNA6a0Cvvr/qwzN964
1t2qez5H1pzuVfVmlCz6uvX7A5VC1PFt7La44STrSDVfZL17PeBor/OzIuXL
xf/c37wxXI1nG0ct9jzQTPf/e2F9avplp/neU+FybtOI2+Y2f9/fsG3+aUNf
/1A1/xw/v/eeoNIhclHUzwWD43X3V3l12edhGK37ffzk6PGxL44k/HW/w6NK
OafbHfOXIUfbzLvuq7vfoaXxyle3THT3Q03u8ulB1mnd/Q5PDky3+Hxa9/uu
t61adGw/Xvf7j/eXpGYNLa+7H6nioBthhRG6+40eGXb3Mrmtu/9hXqHRCOtn
ut+HMu77LuR6X939Qs3yr1peev33/RBndg8v6D5b9/s/VSbEeb175y6WrbPu
ELpD93sZTs36Pipor/t9hWH3u1QpnK27f6e6i2PoYAPd/Tr1s/c3S/msu3/C
aeubnddX6O7XYT03KT24edr10+LhmN9Bu8rrvm914tzXpLluuu/DcD36Q8nZ
33sWCxcPRqbWeZSo+7yW9VkHw6ZTzZuGi16Zz+1vDD0gh/u/umibGSs9xpjf
Nai/RzwP2lVh1ZFYObjG9nCnb6GycXhuTsNyUXLn0FCDQR0jZfnWX+eZj4qQ
rnU35hv86WvQ1jHrN/7pZ4SZ0YdfvolS+qWlDZx2Sjr28D+5slSy7HniStjh
Pd6y0Cx6yJHDKXJPzborGz07KIs3mFDnwf/SZJcPk+3bjNskO7ZsHFj1erq0
7X7q4OZpm0RE9PA3515kiIdZE492+7FHnDE6+nbqqkzZxeNdv+zOx8WQmc9W
XPmcJastmVExyPqUuJ5ZJmPFvWxhtc/+7M96p8RPg4gF7ptzxeOfRWxeLwwT
WYVntxwIzJE77s/bebpBhFg7NaLppCYLZN6dL+t6lIqT/R5cO3orwEfevRxv
1exhjIyNW17trqWXMCt8NdFoZ4xcbHMh38w8RH60ODB99u0o+cL5n53bMoOl
5cfzFZoZRMu5Gzc/jPQMl9PGPurq8ed1Kra+Uvyi6CgZtDykoM3McJkzu3VI
weIEeSeuRbOY3QHSwGtfS1P7ePGkt3Xl17UC5J2zhk+2WSXLCwOTexf77ilX
fI+sE1cyWRwsdC2a395LLnha8H70oGTRzPrQhz3tPGW59PBNGbdTZOPN/lnT
5h2Qlw4YT0x/nCIC6iX4HPnffnknZs6LkPcp4sejPJttB1zl4J3DMq7uT5W9
6lXe6dzXRf6YXfCx6MI0kdbd/mufW2vl8JHrYoM2pYlbt7teW2G5WnZ9UbJJ
py9pcnX7Lz+Wja8sp8Qn14gxTZf1Jp1vartzspg+2qmNz+900fVhRs/y+9aL
nV3PNx9QMUOOeD5r2rNSTmLuug/Ljq7OEMMNjjh3XuMkvqZGNO4dkCE7LUx+
/v64qxgWN35Bu/xMsXL9UMu9w48I87pnE1+FZcp5a7a/f9nKU5wweNmqjFmW
zLxVYLH9m49Yl93Qs/P8LPk5P/jspxEnhHfhrkPVP2eJKx22fx3j5iNsUktc
ftb8z/n0cNqQBVd9RdT69u4RB7PFqvF1+i9b4Ce6Fo/o3y0gW5aa8sm9/Ytg
sdnm1o3QqGx5rZO/8X91QsSPdq3jPsTkiLeLNkWedg4WLjatTaZfzRHPq6/d
tKl+iOjxM6RenmGOfDX4srPvn/VF6YPzm9zoniuO2oiw0itC1fzGtcENH3Nv
3ecvDWaaxZQvpbt/eITnnNYL3+r+f6jPqjl6LDoYI+0G2/VumPH3/cK7Pq3+
taV6jJy2XuTYvvJU8+Oz656bRg89JbaPGfpddtL9/zDftHernt8oSj7Oazr4
x6CQv+4Pjlxm3aD5xEg5Oqp92KN3gSJ73Y/jrrZR6nroE697jdxtImTE0nVG
5+6F/3U/cFppr4Jou3Dp3bxgaJNpYWKff5H6ZS/o/n92pb40u2y0MEzuiWvx
+ObGSHFwvSh3vli4zA+6Wvh6V5zu/1+lrX8WPjpRLW/An3FmsV/lb4tiRNDU
A7NH1AyV3rbeDd9dihXZcyN6ba0VIocd+uRnHPj3/b5vZqz2/7I4UP6s3qVG
7UVnhP79v94/Pp/c3DtAzR/f/T504z+3U/Ja5Ui7ukm6z5euHZmyong/3f29
zE/OVFiwbLPzSZn5w7V/WUMpJqzvt/rQjZNyS7C/ZbXaSWLDkhLTRvv7qvnm
lGqVf1iP8JED19l1XBeh+zyq0vdJt7u90N3Py/xmxPTz2w7me6j5Z7eC6o0+
TD0sL32vu9F3mO7zqDJRQUZ7Z+ju12X+4/KP8W7pulddb7kWWDX1jecmaZsy
dn9w3N/fRzg28sGChNsT1e/BVnfp1CXkkYP4vW/fAIfj6X9932D+t3OBfd47
imb7guM/rdHdT8t86NiQzJ/Ld+4R6bbVTC3mZArnHkYel4WbmOjoPmq8q+7+
WdYfdTzGVO/f3F1MrD0s784g3f20lk6N/I+U1d0vy/p2XpX3U3zX6O6f9Xh/
8d3JghPqek7VCZbeJUb4izTpVLxi5t/3x1q9t6jYaG2wWBncv9HDJ3/f32rj
/a3bLvsQ8XDUojm1nXT3r/qs2l1gVcFVfb7BfDxg2a+7ZYfEylTXmM/Ft5z8
a35+5dU60xKro2VK9xoun1r8fT+qRfXHA080jpKFo3cEb7z79/2oJVt5GNrt
jpDp/9gUTS0Z+df9qKVHONj8DAuTp4a2X78hT3c/6tbfxY7drqC7H5X1bZB1
meHjXHT3p3o980yOTg6SBwZ4VSnsp7tf9ULl/rOsfBL/uj+1XeHAseevnJCy
w1yvzcP//jxsrdtpk33nPdT1+qJT0jM6NHKXP3d5N29f8+/7VcuMTDaLt9Rd
rz/auLdt4nYnecGiXNvwM39/3tW0p/eqOVYr1fX3fkMiCi8OnyImH9hWeV5X
3f2sd34daT+gt+7+bT7PKv7KrvSoRl7ixtfj+TEbdZ9n1bQKfLZd6O5XtZk7
xCrgpu7+1OxpO4rZmRyS373zbhcJiZVmxrHti9/3kw7HBvc0HhQjG3Z6Hfj2
yQnpf9Op3s39MbLCio1xNdrES4uxD4bNjgqSayY7Pjv9b7yc1Xd4ksuCIHm0
46hbE0Zlypn28wYGNjgqRli8bLhhf45MMxu3vW1CuGhzoWXfH6YecseSsKav
Z8XKQ43md6+UGyAnpj7paOAeLTsk7Nvu+yhOHvv8pujeOSHyf1+NkkvYJUmx
wH955/u+0mxi5uLHW5Jkn0Yfh7cI9pVGfi8fmldLkZu9JpSzjz4qS40fuX5G
8xT5uFvLRjuLHZVRNezrl3NIlX3GLU44+WcIeTZqa5Vnc9PlGNsy8zeZ2ogP
trcnTD6aLls6Jaytc81ejNzucHhupUwZmXxld4knh8TTwsa2jw5nyf459Xo5
hJwUb0te6NkhJUsuXt94cemrfuJe8dWGjhY5csC3ByWSEsKE5UL7Zs237xU1
Gye0PegSKzMaFPz6+dNdtOt1x79ojVhZzXPTv+38D4v60aN99raIlYazrItf
WHZCxJy0GOf6LFqeHF52psWv08J/V4eAcvejpFwxfsOIqBCxzaOdSxW/SLnn
48GbFb+Gi9JT72/yKAyX5rHNfP/5HSWSdzsutakUJrf89/nkK+cYEfyqVPKq
4qEy1klu82txRtgfH7HFpE3Qn3XekEEt0hLEQpcqrYb89pcP97i3TpNSLHGY
u7DxthPS6kyz8k8jkkQd94KjkUu9Zb51Wln7W8liy5ZU50U3jsqZLxyuymIp
YvuEWm3K2R+RkQ2aP1k6N0X0WG803sH8kMy83tHgoV2qcK/YsLlx2i4ZfSDo
5aHQVJH1NMZyzI8dsmpXj1j7ommiYq01Y2r13SK79Vm4eHzxdDEs+djNS1Um
yoy+PqMX1kwXEyuHD1pRsZ9smVjjzR7HdLHjZF+7St+sxbf0chOd32aIjQlb
y8d03Ssmj22612hlpugg89/XL3QTfq1SjDoOyxLpv9OWxYd5iI/XL1yovzZL
LDBueGxFiqe4+dP898KELDGz45OkRr29xTiX5z9vGuaIK1dq5ZuUPC0WxY7o
PHthjji0aGkdC99AsfP47/TCYTni4MK+DxvdDhC7TFsuvuKRK2yGmhV0ygkT
+2/eDZtaLE/0aGE88nudCNFztnG3k09yxYNOaZMT4sPF96PeuyfUzPvr+6iB
HZrPX/tFd//odPe3G7YX130/0kT0WbQwV3d/aEL5sP/lboqR+UU2+C+drfv+
4eV6c36EO8fKHov6lNy3MFSantvTsvdO3fcJ17Y8s7rL3XjRduvMGu0dTsvP
Cw68uGeaIH67WS9eVe60rJcy4m0nH6m7//Pbe68ul6T02bfV5UkDPzm29cG0
Ylt13y8cGj9vdMe9yTK/3vwa2d085bWwbV6WpXTfH0yY93ZEWvVU+aTrtM+7
yrjKeQFt3r+aobt/M7Fv5uOCTWmycOCXJ4/328hylo7V8o+lySEuVntKll8i
19+0vx/UTvd9v7aDVqff6J0hq4dWdb6U7iJ2VR/Ye9Fh3f2apfMqF5ORGeKF
x5qjM2x3idqV75/58kj3/b5j6XdfdvuRKUwsx342Tz8qXrRvWGR15SxxZn/H
aZduHBMTq62YUuys7v7MmS0Ca3bPz5RvHB+V/DDQS5R2K+r5Nkj3fb4DZ+cW
2XkuW6TMNGrbJtZfpJbrYZBrpvt+392jD4q/HJ0tmxR7F/2xSaBoGD9tcvSc
bLmw6aw1S/ICRYOtiaeMx+ruv4zq9fLr1kW5YnGVUx2e1wkTVV/P2nDZdI80
7zB5lcWzWFnJbfz+rOe7Za/4LvmOz2NlnR5GC9rVsZFbq05bfPvPfLvTvuX3
Pw5fLyo6tvrX4kGszIsebyXyN4hut50LAu/o7s/ceXF09/LFYuX+k+tKf2jp
KZ+3HTK17eA/6+GcpU/Tl3tJsx8Tt6xurLufwb7r1FI1/4uSG0+Nmv/cP0je
em25O8g8Wt60MVjk0TpG5hWfs9Z5bph8PPnxOqc7MfLVb7esr69C5aWNNg4/
vifKlUsaj72Z6C9/FL7xnWkupe2zymcM+/rLiEmLnB4NS5Ye9yZ/WDDHS+a7
t5/o3U33fdXWH3Y3C/ydJJ4EX7OaMcZL2tVo9jD5Voos3Wraj2n2B2TwsCb7
Or7R3T/56Npz59lBKWJIR2OvVS8OyJq/tiVdr5Qm15qnVnv4zFFO3VD0VYPB
aTJnWcqUwz4O0nBqVvPuDrrvpx51njrZqk+aGPHEOK/d2g3S7m7KAudiuvsh
c7u+t/3SJl1+rFA4xit5psjy9+z9+KXufsfqszp36iXTRfD5xMsxN1cIj4pG
x41S0sW4nIGpNwetFJbdRsXOKZshpzbp+WT4ru2iS9jsy50sMsSGetusx17e
KlbY1sr0TNJ9f9Xe4eLVlRsyZPI48f3r6r3C9HmnVP8XGTJmhbHphJtu4mXl
wF3t72fItbGbVuf3chPtt610aHoqUw6dOnCyx1sP8btff6v7Q3T3M74Myq2d
Uz5LNs+wWN0z1VvcrPnty+0/68t117L2+Iw9IYa9ftw+uYbu+60tPp+5a/Qx
S7gYHHz+yclH1J8WlTJwYbYoP75C1KHpJ8XcdpXmDK6SLRN+zp0UOua0yEnw
Xe/TMFsmxjht6JZ9WkSdGmlWEKz7fmvZ44XrTG5ky0llHecVPflnfek7+viZ
XN39iDUKljc55Jkjhs20GRf7MUiUaVzx2QQT3f2G57OHL5v9Zz3a6N2DHYYT
QsWtwSeOzR+WI/3Ld3neckeYWJDosy61VY6cPKH85Uqlw4SFn0m/jLq5YnvH
VXZGtXT3H9Z0yZr4z/VY6fbELafbXHfp5Fs9wv1wrNzRzjbvivkxdb8h13dd
b/u3XLUxVhbuf7cpbtIWuTZ4YpGnReLkvMvlJkqjTXL104Lyxwzj5OkLG26K
ZxaiYt3lNz7+ipWvIiq93W08S3gkLgxp/OPP+N6qpG/ex5Xq/rD8Z07/rbxz
Sqafa3nX/EO0HLD/t1tq8wB1fZn7D+sf6ZJy9lK0rGxsUP2dl7/6fC/1eo33
u5ZFy08fct/cfRomTce2GZRzXff9dO4P6HRianjTz2GyiL/L4splEmXIzO2e
yat19xtW8y3frrdRgHRrOvh655QkWVDF3fNDrI9cFBywaVWG7vMuPv95drKg
wHaql9zc5KXtVYsU6TLgUmTd0e7yzAr3/mW26u4f5POfMxaJvX/nukkb65ff
3C+lyujETxWrjtiuPt8rZWplXKK4s1xeNGubsYnu/kE+D2r0uMgwq/aOcnT4
psLSY3T3E3K/QsdDpumv688VbTsNetLTVXd/4ZtWbVqt8EiXn3JbRtee5yBa
elXf1rWE7velT/QLT1p/Xvd5HJ/3Da3vUHf2eh8R8U/C6h5OuvsJ+bzRvbVJ
v88WJ0T06o/Nw7Kz5OaHcyvcKOMv7vtNq2y3RXf/IJ8fNdjU2OPijCARedDu
WqVxuvsH75ec42z+1kkY/Bx76V287n7BTWs2hhm5xkrHIZejf//rJs67d14a
PCFW9p2VO3Zld2+x/UhVq+z5MXJE8f6/s5f4iLDfr741MtfdH/js2vyMwyVj
5Jafu3+avNTdT1jv4rnCVVZ+YnKz/n1L7I2WH5496WHw0V99PnDGf9ejmfOS
xOBXeRWmu+juD3zx803cysfe8lHaelF1x9/3C9aa+fzUg+m+0ud6kNFz0xSx
xaz/sXc73eVjo1OzJ43S3R/Y2/ehaz2ZKoyajS3yv1I7pKkM+6f4K939f58z
zhue6ZsuPLIfrPlf1DBh9vpnXts5uvv7lh9u289vc5Zo+Oh1u9CvnuKiVd1p
Xf119++VDzudH9XZQ+T4euUdvBojh72ubR97IUxmz5p37bJ3pOzeIWNpv0YB
wi4wtN/HP+dJ0KpOC/MigkX75nbTu5ePkku67q5n/SVSTs/7+n5Sfrjs3+l6
3dXOocLY5N+gEeaRcp1JbeOjrf6sk3a3XrpsWoRcEh4QlSQjxBnj4JeRa8Ll
bYfo8i69o0SZwMr/lnAOk+LQyMorYqKFaD1uWJuDoTJqRLBlwo4zMjch/vWA
tGAZ+KXbMIuL8bLDovg7ZXwD5YDWufbbZyWKzOzMS19e+v05PmXq5h2X4qFZ
z5t9Uk5I41HzmpvtTRb/2fceVKe8h4yrML1h6S6pwi543Qlr870ysuKx4MeJ
abJrvwHHx76fJav+Y5LZIT1NVO9a+W5d68Wyd2KeZaFZhjhepPy7946bxQIH
F+O9LTJFqus4Q/N4V/HM3vGA6P9nvRax4t4l5yOit++VLcdnZIupdh+bmtc9
KUbmVTyWui5b2j6v0dx/e5D4+vK7a36XHDF+fb/PUeMCxHPHLebnS+WKjrFf
fu7KCxEOnW5MTnLMkdM9muz7sSRcRD7/t9nZS7lizcOzS+7bhIui3S0rXTUJ
lfkTM/vMWRklT/xjmnp2YYQcebiaaVRahJztt1IEd4uTB1Y8Pj/3RYgcf2/U
pV9Xz4irKy7YycaBMmVMcDundklyx9frtd0NT8otts0v7r+aLE/EVh9bvoyH
7Fqm89DWE1Nl3dUj29c5tEf2qnF24LuVGdIwt/v04N97xNcF4VVWeGaKGm4O
oZMzDomhG1q6GJbJkiOb5nx95uEtlpZ6bj++XqxoUt4+MuhIiPxu0rOn4YY4
MaDoljaFHYPl/wH53e5m
    "], {{{}, {}}, {{}, 
      {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwV1He8jmUYB/DnGDnn2HvTMaOMqKxSikRkZUecREbHTrJOUVpERWVVtCfa
O7NdhEgJmYlsZYTv9cf3/K7rep77/bzvc9/Pycgc2jErJUmSxf6cTk2SfGlJ
MossRqUnySmzReoW6jKUpRR1zUrLIbK4rCWLyUvkYIarT1i7S72THRQ1K8Ix
8zT9QK7VD5ILeZ5r9M0owEX6fLK6zC/7y0lygNzGVqqR1+ywz0xVP8ntDDU7
ZPac+ip1GunkoYpZquwjJ8i+8lc2UYncZvutvUDdiyv1veWzLKCRvjEpXKhP
ZEV5S/x29T5rN6p/YQP/c4a/zHPLHlzuvp7yCllOzqcb4/Xd5XrWxTPmJHus
zSW7UM89XeU85nIz48w6y59ZSwlOsMu6nLIjddzTSc7hGW7iHrN2cg0/cZxj
bLcuh2xDLfe0lbVlMdmK/upt7nlC/Tg3xHM322r2tLo5d+tbyO/4lqMc4Tf3
pMTeUzPODBdTNPafW9Wb3JOomzJGf7UsEnsRz1m/3vVzNNbfpW8iC3GIwhyO
Z+/6U7J6nCWq0UBfQ86QM2MfYg8owAEO8k88R2tny4qxx1Sgnv6x2E/Xyuv3
xp6ymgx9Jeqr98V55Ssqx3njMnVV+bfcz9dcrz/rs1rKF+LMxnNUD5Mv8WKc
Add7mjVUF+SbeP761rThRl42G05b9YjYV9lIvhJn0Ppe+pHxHjCK3vqN5q/G
uZd99KPVzeJZ0le/2fw19e8yUz9GfV3sKbfpt5i/rv5D9tOPjd/DG3GmyDYb
J1sygXv14+WbtGZsfHdZnO/5gR/50+e9JXfIAe6ZqG7PJO7Q7zR/W90hzrQ+
W7aTHWjPYn1deSn/qUvyL6XiOzDQfLfPWKJeymQ6md0X75F8R9aP/eK0ugyn
KMsUBsW+W/+u+j0eoLPZ/bKLfF82iP3inLo8Z6nAVIbEGbD+A/WHPERXswdl
N/mRbCJzkoscZMQ7wZ3qA/F/SVbWb453iTxxZs0/jvMrs1x/WJ3JJ7FfTDTr
F2cw9pQtsXcccf+n8jMepbv7HpE95Oeyabx7FKJGnEFZM/aCYeqj1heO91e/
PfaPdI6bfxHPXo5wfZp6GV/GOdI3pyS19SVknfh9jIx9s6Zc7KF+N3vIy0nz
5fKMHO36dPVKVrCK83+42/E=
        "]]}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxl3XdUFNfjsHErFtCvXSP2jhV7Q6+9xN57LNhC1NhQ7F1RVFREARtdQIGl
CohcehMVFTWx9941imj053vOfe6+Z/NXznNmZYadz8zcuzNs6s74c+SsIoUK
FXItVajQ//vv4BrZvyW4n5Ph2zc8HTAuQ1bOqvxn4SI5um/bT1/Xxy5b9/F6
wc7bLmXqXngh/1h2lwzdnVf3MZTxSdNdxGpP4nDzVN1nr9zIdVmSrHv/xsb3
rt5I1B332+P7bR0TdA+OWVM0bvxp4/aUr9ygh1WMcf1/nOyT/iXSuL603rMG
Z4fptuoWbe7XPlj30LcPB4dd9de9xKfi7jPLPXVbB28+6tJ6v+6nQxw3Gc6v
0f22WpElr5rYC/p9bdvr9Uru0x0QW3x86fSjukOt8p7nJ/np3rHML/BlnZO6
w6d3bfdWhOmuU9K3ot2fkbp3h1h8eHD0lO5vo+0vTTkfp9vu662wa/+e0f1y
uE9mwIFE3fV9x8XMapmse+Jn84B66Sm69/6aePDOlDTdmUeWbjv8T7ruH2+b
LJ+wK1N3hz63ZldpmK17/sG9Yy/Hn9Xt+7xvvz2jz+m+0q2g/ZCX53XjbVRa
37Lt7dO1NxpvNN5ovNF4o/FG443GG403Gm96e5Q3vX7lTa9PeaPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
pven8vaxUOl2dV3StDcabzTeaLzReKPxRuONxhuNNxpvenuUN71+5U2vT3mj
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3mi80Xij8ab3p/LmanN+QpmwVO2NxhuNNxpvNN5ovNF4o/FG443Gm94e5U2v
X3nT61PeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzp/am8dXDYt+7L+RTtjcYbjTcabzTeaLzReKPxRuON
xpveHuVNr1950+tT3mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpv
NN5ovNF4o/FG443GG403Gm803mi86f2pvF2LGOv36GWy9kbjjcYbjTcabzTe
aLzReKPxRuNNb4/yptevvOn1KW803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803vT+VN4c3lQ/e7G00RuNNxpv
NN5ovNF4o/FG443GG403vT3Km16/8qbXp7zReKPxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReNP7U3n7pdmdt2ea
JGlvNN5ovNF4o/FG443GG403Gm803vT2KG96/cqbXp/yRuONxhuNNxpvNN5o
vNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuNN70/l
LW62T5WgfonaG403Gm803mi80Xij8UbjjcYbjTe9PcqbXr/yptenvNF4o/FG
443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vNF40/tTeYvqc8GheVaC9kbjjcYbjTcabzTeaLzReKPxRuNNb4/yptevvOn1
KW803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG
443GG403Gm803vT+VN4+nR6XWqz4Ge2NxhuNNxpvNN5ovNF4o/FG443Gm94e
5U2vX3nT61PeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTeaLzp/am8dWx793+3epzW3mi80Xij8UbjjcYbjTca
bzTeaLzp7VHe9PqVN70+5Y3GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzR
eKPxRuONxhuNNxpvNN5ovNF4o/FG443Gm96fzE+D5k6KWh1rnJ+q1vNT1Xp+
qlrPT1Xr+alqPT9VreenqvX8VLWen6rW81O2h/kp62d+yvqYn6rW81PVen6q
Ws9PVev5qWo9P1Wt56eq9fxUtZ6fqtbzU9V6fqpaz09V6/mpaj0/Va3np6r1
/FS1np+q1vNT1Xp+qlrPT1Xr+alqPT9VreenqvX8VLWen6rW81P2p/IWW/ed
/66YU9objTcabzTeaLzReKPxRuONxhuNN709yptev/Km16e80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80XjT
+1N5K3Bb8X7WxyjtjcYbjTcabzTeaLzReKPxRuONxpveHuVNr1950+tT3mi8
0Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403
Gm803mi86f2pvHUtV6R7d+tI7Y3GG403Gm803mi80Xij8Ubjjcab3h7lTa9f
edPrU95ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovOn9qbyt3rZje5V54dobjTcabzTeaLzReKPxRuONxhuN
N709yptev/Km16e80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vNF4o/FG443GG403Gm803mi80XjT+1N5O/O9wpXXxw3aG403Gm803mi80Xij
8UbjjcYbjTe9PcqbXr/yptenvNF4o/FG443GG403Gm803mi80Xij8UbjjcYb
jTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF40/tTefv3RYeeuzOCtTcabzTe
aLzReKPxRuONxhuNNxpvenuUN71+5U2vT3mj8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8ab3p/K2/nr/v7qL
IO2NxhuNNxpvNN5ovNF4o/FG443Gm94e5U2vX3nT61PeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzp/am8
Fc0a/+ebaH/tjcYbjTcabzTeaLzReKPxRuONxpveHuVNr1950+tT3mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3mi86f2pvG099buZZ0sf7Y3GG403Gm803mi80Xij8Ubjjcab3h7lTa9fedPr
U95ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuON
xhuNNxpvNN5ovOn9qbxVGPxPF6/Bx7Q3Gm803mi80Xij8UbjjcYbjTcab3p7
lDe9fuVNr095o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/Gm96fyVs2q6u9FbNy0NxpvNN5ovNF4o/FG443G
G403Gm96e5Q3vX7lTa9PeaPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm80
3mi80Xij8UbjjcYbjTcabzTeaLzReKPxpven8lbLrPNB22Z7tTcabzTeaLzR
eKPxRuONxhuNNxpvenuUN71+5U2vT3mj8UbjjcYbjTcabzTeaLzReKPxRuON
xhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8ab3p/LWPz1qx/b2m7U3
Gm803mi80Xij8UbjjcYbjTcab3p7lDe9fuVNr095o/FG443GG403Gm803mi8
0Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/Gm96fyNqDw
40OtRszV3mi80Xij8UbjjcYbjTcabzTeaLzp7VHe9PqVN70+5Y3GG403Gm80
3mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443G
m96fyls/py0rHvyyUOCNxhuNNxpvNN5ovNF4o/FG443Gm94e5U2vX3nT61Pe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYb
jTcabzTeaLzp/am8uZmvm9aq5VbtjcYbjTcabzTeaLzReKPxRuONxpveHuVN
r1950+tT3mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNF4
o/FG443GG403Gm803mi86f2pvKUH1NwY3Xif9kbjjcYbjTcabzTeaLzReKPx
RuNNb4/yptevvOn1KW803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuN
NxpvNN5ovNF4o/FG443GG403Gm803vT+VN4Sz34dNaaTu/ZG443GG403Gm80
3mi80Xij8UbjTW+P8qbXr7zp9SlvNN5ovNF4o/FG443GG403Gm803mi80Xij
8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN70/lTepnx+WWFlA0/tjcYb
jTcabzTeaLzReKPxRuONxpveHuVNr1950+tT3mi80Xij8UbjjcYbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403Gm803mi86f2pvF0veXNV
1kkf7Y3GG403Gm803mi80Xij8Ubjjcab3h7lTa9fedPrU95ovNF4o/FG443G
G403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovOn9
qbyNq372YbX2x7U3Gm803mi80Xij8UbjjcYbjTcab3p7lDe9fuVNr095o/FG
443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5o
vNF4o/Gm96fyltcsbsjcM0HaG403Gm803mi80Xij8UbjjcYbjTe9PcqbXr/y
ptenvNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuON
xhuNNxpvNN5ovNF40/tTeRvRLTD6VN8Q7Y3GG403Gm803mi80Xij8Ubjjcab
3h7lTa9fedPrU95ovNF4o/FG443GG403Gm803mi80Xij8UbjjcYbjTcabzTe
aLzReKPxRuONxhuNNxpvNN5ovOn9qbzNaZzjXPSJQXuj8UbjjcYbjTcabzTe
aLzReKPxprdHedPrV970+pQ3Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPx
RuONxhuNNxpvNN5ovNF4o/FG443GG403Gm96fypvjQy9+zQ7Ea690Xij8Ubj
jcYbjTcabzTeaLzReNPbo7zp9Stven3KG403Gm803mi80Xij8UbjjcYbjTca
bzTeaLzReKPxRuONxhuNNxpvNN5ovNF4o/FG443GG403vT+VtyedTueP/Pl7
4o3GG403Gm803mi80Xij8Ubjjcab3h7lTa9fedPrU95ovNF4o/FG443GG403
Gm803mi80Xij8UbjjcYbjTcabzTeaLzReKPxRuONxhuNNxpvNN5ovNGG928e
3zmXIzcet/3a/bHx+6Np84IxU7bt8dAdlDhbCj8n3W9/t6i7ddAI3TaV6iQs
qHNe0KzP9N9vXbqultgVIfj3dEv/+h1/G7lN0OfmtXOvMsdNN9vL96uzfTQ/
X39/vfr5NNtn+nrtSb2eZntotodeW+JWvQttz0kPt/fvUmplyJJWZQqmbD0v
aN5P0+Wsn39v+n38vF/JZjXkL0X26n+Pf5a3iXxUPKvcIr2c95vWzyOr92/p
94Tn5lenieixR8wHfje26fHD60t9+PjPiLBd+vU0r7+wxLXQ4H5b9Ppp0/+f
AD+P7eXn0fy8URNGOth9WK/XR7Oc/cX62D/ao/p9aX4//X6o/Wv679le1sdy
1tfgQeO6zYoZ/ervq1c/j+U0y3k/7KLzisUFG7eH5v3h3/N6m7zoqgabdL19
+uer34/m55m+nvXz+7AcT/y+vP+mx0ONlKGhRXaE6d+Hjj8wpHkzsyAZvzTk
nyinUHl34Or5HY/76OZ4pPl5NMcP3WvTH+br9nnrPrvI2d65jUF2t5U7Zxc9
qddHd66WP7rUjAiZPCK3ftVVAfr19PGEae027Y2WfXrci8t476tfT1eelVXx
38RYmdny/QgHOy/9eprlrl3MLo1IPSQ3mbf5sOxtvDxUtUmhiIj9ejndNsAq
ufrseEHnjx/ye/7/EmWvZy6Tm/Rz0v+eZrl7v9BFVwaulF5D93ntd5WCtj5Z
eELU8SRZbsz+yVN2CMHraZZ3vdizZt2ua8XsH1EDFosUua/llDbnu+/Sy+mE
c62t+xQkC5rX946zeFHc4KqX0yzvdut5vG/iYXF0pF2nVtdSZY31MzO8nnrp
5fSnOo9rF96XKmhe77Z3lPW7hX66q/j0cu/xJUA0X+rxvwSrdEHn+dVq8nJB
utwX2brIng0n9etplpe03RP1pphBzMwY+mNlUoagWZ7+ooRd1awwvZy2+HKp
aqBZpj7/8HrT86Hp+Qrv+OXvSzm+WE7jl/EMjV/Tv89kOed7mvMvzfiFrpFr
k734XcB/muOD8RXN8cHfj32uUXb77OGh+vU0xw/jNZrjh78Hehb5pn7wtXD9
eprji/EfzfHF33eMmzS+aOMS0fr1NMcf40nT45Hn9dMKJ9337BCrX09zvPJ6
nrfm+GQ5bfp8PccvxyvPz/J6jl/Gw6bHM88/cjyznGY5r+f5NZZzfDP+Nj3e
ef7IceWaHttmJOnX05wPeD3Pj3B8s5w2fb7I9PzA8wC8nmY5929ZzvmC5dxv
4/zActr0/qzp+YP7J7ze9HzC592cT1hOs5zX83klyzm/MD8yPd/weRPnE5bT
LOf1fF7AcprlzO9YzvlH/32cas5XjHc8qhd903FCln49bTr/MT0fmX4/gOn5
wvTvt03PB6Z/X2t6vJv+/aPp8Wz692mmx6vp3w+ZHp+mz9ubHk+mz6eaHg+m
zw+a+jd9/sHUp+n9QlNfpp+vm/ow/XyA/cf47uVd6+T8amFyS293mwULAuRk
w2JL78AQOW2P3dfp50LknaObwkfWPSGPvq55q+mBcDlj1/6BRd2PSwvXrfG+
aVHy0Sq/uxHlfOXKrm8O1fonRs61i14+09FTPr03bpVbg3h5c7dhkNObfXKM
Y+LECqOlTL3m++GvM9vkjIOVaqb3TJIHc4cO215hhnB7nmmx6e9kWbKO/7nd
tntEbrc138SiVLmqj6dXVLa3MNvb+uW3kunyvcP8mz62waL7w0c3Yj0z9Pid
8eTuGv88edjBIN8/K1zj6ZGf29346+yVj07K2Yd+fzX/u0HWrWLxvemUQJnX
81LOkxaR0rdYTdcbeX6y19MuJ6dPOSUbf2jRfOdgb2nY7eN0Y2ecnOh5LPL6
8gOyVnuLP8bEn5GyYGPa8vO7Zfr8Ln5P7BOl/7JRbx9MHS2/J77e71smWVau
uSBrbfR20a6Sz+bpfiky/nSTV7vMvMS8OeOW1uqWJtu+/afx6mMnhHec+cwb
eely7L7prdvXMM4v2B/Mb/h9Hq92vB414bhg/4yq/y621fYgwe+XmDXBPTAm
WLC/qnaaHl9+qUHw+w51qnzyvHm4YP9tvp11yMknQvD7x7de6zSga5Rgf77f
3GZV8cvRgvej6V+P7ZLtYgT7d1qzQxPXFYkTo1PWbF3heES6rR32q43HaXE1
bHfNpoU85PmLRbt8aX1G8H6ZNYyxis5KEOz/WjbRO2OtEwXvX9ysPcXcviUK
PIx1tlu9LDNJ9AixHbSx6XLxNqbPx9H7k4VlgfPnO34bxc77tea1nZYi1o5e
UnLNNw/RxOLLg/LNU8W3WTMW5Ww+KlLbX5709nOq6Hyu6thbu33Fb1ODL59P
SRP5Y5xLFx/lLwoctw0Kdk4X7I8D4dNTnCZlCHy1udm1q13jTMH+ySleJWLA
h0w9H6Q5/+HRdP7O+Y7mfMh8hfMdzfmQ+QjLaZYzPmC8zniA5ng7Wv/isQ6d
l0jORyznfEWzP3g94wPOV/r7uVRz/LI/uN4zfud6TnN8F+m9+ViLpQf1+Y3l
nP9o9i+v53zH9ZnzIc3+5nzB9Z/zpX6eWTXnFzxwvmQ+wPmUxov9nLVLRt8I
1Ndzxv9cv2nOV536hnh/sTfo6yXzAf28pGq8fTrXcFzdLuH68wjOB1WPWE/5
2N1Pn5+Z33K9pfHl4JlgUzjxiD4fHh31ak2Z6Qd1M//l39P8+2npZ2MPd3TV
558uFY847DlwSLe59SnL5AJPfT7CI9dP/f+7Us35lPMFzfmC6zHjX67HNOcX
zse06fUlOzK9bpfg9dozjVfOJxwPjDe5PtOcbzif01yf8Ly5tWuH2y9ctFca
H1zP8UdzfeD8RZuev7h+4JXzGeM5fOKP5noTfdtMNq9qbPzimeV4NRR+tOds
41B9vOGZ44HmfMnrabwzfsS3fv5bNde/A6Wery4z3tjavzoeWM58mOOB+Sp+
uf6znMYz82eWMz/Gb9CnjDUr/+etG5/Mz/BG4535FOMDfX1TbTo/YzzI+IHr
Hc34EW/67xvU+ZX5D+MNPNL4xRPzG/Y/40X2F/MH3n/Gi3wewfvF+J52uFr7
a9emvvr4Z3xv2ly/GL8wXmH8T3P88/4yvuD8wPmAZjnnF45n3i/GD1yfOL5p
lnM9wzvvB8cH4wH80yxnvM3nJXhk/GbqjfeD8Ta/P9d//j2t/SqfnH8ZD/B6
mtdzfub1fP5i+vkm4wnG+2wPn7eYft7JfIz5AONL5mO8ntbf16TGn7ye+Rnz
OeZvNONTxqt8fmP6+SrzP+YjjGf5+SxnfMty/j1+9P+PUTXzGa5XHO/6+wjU
/IbrEfNBrlfMF2nGw1yveD3zS8bHjJfxrP9+VI2PGS8zfuJ4Z/xEcz3i/MD5
g+sP4zOa6xnXI34+81PG1yzn+sb5hesT1yuOJ+avjL9Nr1+cj7j+MB5nvMT1
hvESzfXB9HrD+YvxOON3fh7LGb+znPMZ/jl/M37g/Mz4gfMt13s+r8Q/803m
Y3weiV/mn/jm80I+v8AjzfyU+Rl++fyC5czPuN7gj/kBze+HRz7vYD6AXxqf
vB94YjnzA5r3i/kE43HOt/r7f1XzfnJ+5vMRxvf4pvGINzwxvtd/z6ia6x/j
fXwzXmI+QeOV8RG+8Md4hub6iUeub+xv2vT741jO/N30fMrnVZwfac5nzM85
33H+ok2/L4flzOc5v3E+Yn/o7w9WzfkH/5yf2V788fM433F+5HzEeJrjl/Ej
4wuuT4w/uH6xvxj/sP85/vDF+YbxD+cbzldc3/HA+jk/8Hkp5wfGn4xfOJ5p
jnc+j2E5zfvD5ykcnzTvF+MZ3i/GJ7xfjDfYXo4/zs8cP5yfmQ+yfdzvoRlP
cL7jesN4ldbfl6H2P8c/53euHzTXA44fjk/m1xyPNJ+PMx7leOP94HrL+8H4
jveD/Yl3fj+a443jhf2Bd44HmvVxvmN/4I/jQd8PUNuDR/YXnhgf0mwvvtif
nP95/5k/04w3mF8wHmG+wPmdZj7M/ILrAeMDztc082PGC/hhfMjnCXhhexiv
sD7GJ/w83g9+P8Y7zK/49/w+jHe4PvHz2H7eb64v/HxXV58fA8s76vGvzeuG
CVaHA/5zv3Nr7RZ5L82N3388eOOPDoPdjN9vXKx1nSIflhm/3/jThYuv1htC
9f3MF3klhrUzP6nvT96cc3f4QotAfX8icb9LmSbOAXL1ivj3lwqM9ye4/p9f
vKkge6qfPp/vq/+llU9pP9mnT5V3x82M9xf19x/ZV8+2jTgoB6VXzX5qYfy+
n5g6ZXu1+mj8/hr9fUAt/PZHP3OSFR62DWuywvh9Gedzk1Lcqhvv33F+f3DA
YfuGX6fL+dtj6zx1Mv69ddNVlp2+FjL+/e/ZLqWjenYw3m/LzPco/zQ15T/3
L4bkVvoS29v497WPamcv3fCrlzi9cEu9Z4uM99Ma23Z83Kld2n/ub+y8dd4l
fp2vKOlfe8wPR+P9Da7nO+/1TLtc44TwvhpxIcLSeH+s086Rrn0zjfe7LJdk
H3adanwekut1btMl82SVCHGz6sxB3w8YP69lfLn5twUvd7aLEFfr/VX6vN0G
6VThQcy2PIN8XXFzynefhSLS3nW7We7PedTR1GUFW47Ll32f5ic0CZE5A46c
3j3aT1wt+v57p2Ih0sum2+J9J2LkiHO5Pa508JTlE4pXfHg+QbZaM3Nn1T+3
yP9t6rH3+YhEEVTOfuzglwvl8a9JKTFmSbKaXac1ZXvZiRoj88IvbU6WQWNa
de14Y6/Y/SOzxaWUFDF4Toce5Vu6i779/tgRODZVXtkyd3FwcR8xrnjmxSeV
0kTStZdWH0v7CLfm7h0Wf0+TKXuzRfFVwaL10XVrfPtmir63juz1nxQuJj96
0+brhgwZesXyl+l1IsWHs59yrNb4ypD6A50rVw6V1gv/HtLrzBEZPCxm+aaf
198OMXt693b3EJP+Wtc7s6JB7mvkMfdDvJewiGm0dejP13t9une+66wTcptt
YrGy6SdlnY8f2x8aekp6rIgPsrLxlrlXdy1+8zVWWvWwGFa2/2G552lP77dN
4sWY9HlDzZvvl71W7Rw4NPCMXHz9l/ByK3fLjBDnrxeXSfkue/n8qhXXy8s3
8/8wvynFOpuPPT/GrZZmLge7Zo9OkuG7Flg9W+UgplT69O1FyWTZ/1jeuWl3
t4vgm/WdrU4ni6JrZkR6LXAWTU9EvN3YM0VM2f23448l+8UvDpXuzl2SIt8v
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
smtZ8anx6nDRpqzZ2B0f0+WhQ+GXv1cJF2+8379dlJMh0jY97d/8g/Hvb5vH
LsvMv2aQ1rLNghMPd8q8+1ZDKiQYZKkefxd2KrVP31/kfnlcTEzlyaHG/3/U
7Q6BLe1mhMgnA5fZOr8yPn9S4fkcj+JTfWSLwlkzQmxDZZphX1aetfH7wZ+N
cC4c9Mj4+V3+vxW9LLslyObL+jqW/bJdf75zYHSVdVbPdskSZr1vFU9NlH/3
CzJkfBksIod3OmTZznj/O+5ZtWNN+ifLQsub7byVuVt/3hn9ZenZqG47xJuW
X2ZU/ct4v7vyifceE/cb73e/Wjlp9rZmxvvdK4dVmjC+pvHvYWMWzy7ze2Jb
YZ57qHb3v43//6ur18O/r88xyP2P3L7/fdVHPMpJXjx7lfH+drWgZnVX3wuW
hxxW+66/clws8J/5ombTYP15v9OmNq+Xp5yUpyY87rXRxXi/u1v5f9YfaR0n
9l2rPydorvH+tuu3B5fubXGTC9xTgj1GGe93d1iafTo1wfh8OZ+PhnSPLnTz
i4fsddl/6NiXSaJ/0vkbR+Zs0Pe7Gzb44vc8e4tI7Zh3qPKPpP/c/07+kX83
t/Ra4bz326UL99PFwaUNPvc8cVLUNHMaZyhqfB7uS/1V972WbRNuwx/2Wfxz
vFxyrrQIXhMoe84bVnBnVbCc5vRswoimXjLyeNaD2NehMie2bNXVdX/OTy0e
vf6fX6h0+r16s4PdguWl2sFzzpc4KQcXTjdYlgmX28tNP9AiLUC2Gxk7dPDA
MFHGYU1vhy0Bcu68pA9xz8JFoyX+sR+z/WXr7ov7jWocJe0+dS85qKGf3L5l
1pPgFZGi//sfF62++8p5fV0edB8TKy2aOWw4MeWo/DV9y8Qpt0/LpX2mj6p6
01U62CxaW3A2Xlifjys/psw+OSxqpIuZRYL4fXznIhW2OMn49Hk5aecSRTeH
5yFHXbrJJhtczl3+nizmvF7ad1XFfcLp5QXxo1OKtPer8vDtaHcR1zPyZUHx
VHHx25Czi/wOCceZ6y48qZUqG9r1L9HqjJfYYfXn0Clr08SnBttd7jX5eb0a
b3Fn2dk0Od8w9fSbxifF1SMXS9qnZ4ibj47Hr71nELXHViwyaVSGrNVjQ1Th
xRGiTo1z/Xd6Z4pVix7VPWMfIXrufel3bbpBWrovPhS8JEjWmtP9q71PhHzh
stVj9Q9/uft459cpHtEyO+Jj1v1OPtJ+k2fnxO+n5DrnrW3GdfWSS7vVjs6u
cEbWTZ4UtWX5Xuk379Yg695S1I/qO6d85kYZs9vqoXvXRFltetS3ZVMWyMr1
YtL3ZiXJjLqpe7IKbxHLJ5wPe7olVfjVtNw9RHiK41+fB1oWpMr2HoaGvk/8
xYALk5Z0/5wmLtnUDKzmd1zcml990QmXdFn2ecKa3gkG8eFdx16nm4WKXbkj
njxrGiTDV1x39y+IEm/ivb4k1/GRI20uXOh0JUZMKwjr7rb0qOz6T06nq78l
iVZtC9WwnbRQLB+++YqN+wkxoWyFgKYxJ+QQ1/HXP80/JfY8npPToZ2X/D/Q
d/xg
    "], {{{}, {}}, {{}, 
      {Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwV03fczWUYwOFjZJdSJFJUGqRhr2ySEb121uu1sveWlT2jKMosilCh7FBp
USojOxRlNayijOv+4/J97tv7OZ9zfs85+VK6JXVNlUgkkv3TJEMi0YH9rGZE
xkSisf5GE+cqVKUSw+wq6yqdoh9pLr2LIc7ltIG2Zx8rGWZXX0/QyLksT1Ga
wXZl9H2dpB9odr2DQc6ltK62ZS/LGWJXR4/T0LkEJSnOALslDHaupVn1Fm6m
KEWoYd+ad6hvflcbaF/9lYVMMC/SLJqZPs6Pa3VNYT5J5gX6C8eYy3i7eZpB
09PL+bF4fprMG9Q1v6nPaU89ykzGmmfpT7xOP3NlPcKzzo9QgIfpbjeDvnEv
2pJXGWOert34mZcZbTdV98Sd0dtcQQ8zkVHmSbo7Pjc94n70ULwnRprH6a54
fbrHHepBuvISXeIetDk149lzLx3NN2ltRsbfx11pPu2kefV+7qOU+QDPxB3F
s2aEeSdNedqch3tIy/M0i//T3/Uka+kc3wU9RWnymx/kATqbH9Iy8Yx0VLx3
0sVr0SI+g57WdbRwTqYlo80b4jk7r9czbIxnbP4k7p6z8Rugp90mncxmepnL
6x9UpI95i07jTz5lqt1n+gpbmW7+XP/ii/hb85f6Gm2c29KK1qTwt30dfZRC
FKSH3Vf0j9+xnqMaA8xf6wXOM5txdnPi+0FG50zx+vHcuRj3wkC7b/QtLrEt
3q/ddn2bDs7fajt9gfb8Y66nT1KYJ+hnt5hBzjW1mPbXW/U22jjX5t/47vOi
3Xf6HpdZGt9du2XxnsjmfDvt4nfFFZIYardD/+c/Pow7sVsRr0kO5zvJST3z
Va7xAx3tvtdOel0bx++GinGXDLX7mOHODeO56nDNrXfH53duRCK+q/E70R81
taYiDWvMNwCaxrM7
        "]]}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxl3XVUFVvDgHHFAMXu7q6Lothug6tY2N2Fit2NXrsRBEUxQEGUULoENt1g
t1jYid36+a01z553Hf+667fmXObAeWbPnjn7HGtPnjd4mlG+fPkKmebL9///
7VctfXzMgSwZuO2/p1YjUmT5tPLz8htlKt9ZMmmtpW26slcdP/stF1OV55/7
cjS9Q4py+9WW/sWPJykbNd4TO9A0UTnjyq3zexfFKzutb3j/6q1Y5cjxjx+Y
b41R7he+pkDkyLP68yldvl7XxuH6/mf5WiZ/Ddb3l9RjWr/0AOXGnUNNPdv4
KVvnPewXcPWE8qLjZXdHL3NTNvPbeGRvSyflp/23bvDPXqOcV8lo0atGSwR+
V3PKzTomjsonIwqNLJp8RPlM48vPv8R5Km9f6nnqZS1f5cBJHVvniQDlWiYe
ZW3nBSvvPl3sfe6RMOUfQ5dcHJcdqWz7PSfg2s9o5ZcDj6ee3BerXNdjRPi0
FvHKoz+bnqyTnKDs0Cd2/91xScqphxdvOfQxWfl3XqNlo3alKltY5thUqJ+u
PGe/w/BLURnKHs//7blnaJbylc7f2vR/ma1Mb0OS/i3RZkmy6g3TG6Y3TG+Y
3jC9YXrD9IbpDdObej5ab2r/Wm9qf1pvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9
YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN7U66n19iFf0da19yap
3jC9YXrD9IbpDdMbpjdMb5jeML2p56P1pvav9ab2p/WG6Q3TG6Y3TG+Y3jC9
YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6U29nlpv
zp2yRxUPSFS9YXrD9IbpDdMbpjdMb5jeML1helPPR+tN7V/rTe1P6w3TG6Y3
TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG
6Q3Tm3o9td4sljuu/ZqdoHrD9IbpDdMbpjdMb5jeML1hesP0pp6P1pvav9ab
2p/WG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4w
vWF6w/SG6Q3TG6Y39XpqvV0LGu756GW86g3TG6Y3TG+Y3jC9YXrD9IbpDdOb
ej5ab2r/Wm9qf1pvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpDdMbpjdM
b5jeML1hesP0hukN0xumN0xvmN7U66n1tvxNlYwLRfXeML1hesP0hukN0xum
N0xvmN4wvanno/Wm9q/1pvan9YbpDdMbpjdMb5jeML1hesP0hukN0xumN0xv
mN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9IbpTb2eWm+Vm97Ni24Up3rD9Ibp
DdMbpjdMb5jeML1hesP0pp6P1pvav9ab2p/WG6Y3TG+Y3jC9YXrD9IbpDdMb
pjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y39XpqvUXaHK/g
3TNW9YbpDdMbpjdMb5jeML1hesP0hulNPR+tN7V/rTe1P603TG+Y3jC9YXrD
9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG/q
9dR6C7E8t7xZWozqDdMbpjdMb5jeML1hesP0hukN05t6Plpvav9ab2p/Wm+Y
3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3T
G6Y3TG+Y3tTrqfX26eyIxIKFolVvmN4wvWF6w/SG6Q3TG6Y3TG+Y3tTz0XpT
+9d6U/vTesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9Ibp
DdMbpjdMb5jeML1hesP0pl5Prbe25vdK5nQ9q3rD9IbpDdMbpjdMb5jeML1h
esP0pp6P1pvav9ab2p/WG6Y3TG+Y3jC9YXrD9IbpDdMbpjdMb5jeML1hesP0
hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y39Xpyfeo9Y0zI6gj9+lSzuj7VrK5P
NavrU83q+lSzuj7VrK5PNavrU83q+lSzuj7l+XB9yv65PmV/XJ9qVtenmtX1
qWZ1fapZXZ9qVtenmtX1qWZ1fapZXZ9qVtenmtX1qWZ1fapZXZ9qVtenmtX1
qWZ1fapZXZ9qVtenmtX1qWZ1fapZXZ9qVtenmtX1qWZ1fapZXZ9qVtenvJ5a
bxG1357YFR6mesP0hukN0xumN0xvmN4wvWF6w/Smno/Wm9q/1pvan9YbpjdM
b5jeML1hesP0hukN0xumN0xvmN4wvWF6w/SG6Q3TG6Y3TG+Y3jC9YXrD9Ibp
DdMbpjf1emq9fXNZ8W7ahxDVG6Y3TG+Y3jC9YXrD9IbpDdMbpjf1fLTe1P61
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
+G3rlr5+9slitNvR4JvL9sl9gZMSdoxJEbd3+/fd8cZRtrrdsaNtw1TB65dZ
qEKQ1ftUQa8z/slr0lCmifLV56bZhW4TBUelHyu0I12Y1DqRtXvKHuG23qPK
w+EZIupso1e7CruLDr52jvF1MsUqSzf3kPRj4uqVkUXdX2cK87yPDVcf9RHz
f7davzYyS7xbPuf28Sl+gvtjwx0ntWxTLUhfn6pdj7D9U1b9EbU76PfL2c79
NLbz+H1Fnq8uPjJAPZ7zDY/nfhPm8Zjngzl/8fMZn7hfwvkJq38/Qrt/wnbM
du6fcP7CnN+4P8J2rP49Be16gfOP+vywZsY7euX8w/yd8xOmZ8ZD5t+cf5hf
Y8ZHeuX8w/0Hzk+Ynu8e2RA4uLaPOh9xv4HzFabvR6s87wWV8lDzY+4vqH8/
TjPj8dWA3dWb5DsoOV9xv4DzGab/I3UvHLVov0jNT7k/oL5/UTPjedVv9p/v
eq5X5zu2q+/r08zxw+P5+Zwv+fmYn8/xxfmS+SXnU8zxx/mE+SrnW+anmPMP
xyfnW+aPnI8xxy/nJ+ajnK+Zf2LOZxzfPJ77Dzwe8/h2/54+9nWJv+B+JecH
7lfid8/yV3t62Eed/7nfyPwRc3xVPGw27kMXT3U+9f6UsmZlyWPK3I/k/8f8
/xOTMyIOtXVW56cOZQ8v37PPVdnULKxq/Dc3db7ieON8wfHE+Zfjifkg17uY
8zPnE8z5hOOX61vmj5jzC+dzzPyF45XzDccTxyfXr5j5wJGG321WPtLN8cvx
zHauHzl+OT4x8wmPgtWdb132VOb45nhnO8fz0IQ1m1dsPazGF4539e8Raub8
x+Mx4wHHH/Ndrl8x8xvOl5jzJeMV17vMnzHnV+ZHmPkgxyfjD8c/Zj6VHpxc
u4PfOmXGJ8YrtjNedD09pe/6JsvUeIPZzvmb45H7mYwPmPnbxpbOFnde7FU2
6rHxaPPF+9X8n8cz3mHmB/z/mP+f8Yr5IeMR8weuF7kfqj5vp5n5ZPusisNz
dnsofxlmX7TQkBNqPObx6vNXmpmf8P9j/n/GO+arjE/MX7B//kd7MhqeUeMz
4xnjJ2a+w+Mx4x3zC8P5DPMV7rcy/qnPG2vjFdcLbMeMX9yfZTvvN2Hu12Lu
xzKebepxoNPcuSeVmW9w/cv1BvNlzPUy45f6vmFtPFLfx6qNh1zvcj3CeIUZ
3xh/uP5l/OB6l+Od+10cv9yv4njEHF9c7zI+cD+J7cyHMdfD9M39Io4X7g/R
F/dz6JX7NxyPXA+znfMt5nxMP4br4+iNfgz7MrxfY7jd8P6N4XyX+TI2fH+A
frifo3q8WvN7xyYe6vzI/RxDM7/l+o/rPe73YM5/9MP1FddTnA8x27m/wvjN
68/1EeM74zlmO+cHxj9eb8Zb5muMh5jthvdH6IHxkPkY4xVmu+H9E15/xivm
W4w/mO3Mz9T3DWjjB9ffhsc/rwf3W/j7c33C/48ZbxgvmB9xvcLjsRqftPkT
j+f9H+7X8f4M5n4P1/vcz+P5cr8Pc3+A+wW8v8P9Pt6/wdw/4n4BP1/9e1va
/QX2z/1Cnh/3EzH3H7gfwftDjI+8/4O5X8X9CH4+9yu5f8Hz434kz5/7lZj7
G9zv4PHc3+R+B/vj/RrD9795/4f7Zcxnef+I+SvvD2Eez3yW45f7o9wvYTv3
P/n/OZ4xxzPzYc4fnF+4f8f9Fu6Xcv7gfirm/gvnGx6vvp9Zux9jOF/m/MP9
QO7P8P4Q813m05jHM79lPsvP4/4OP4/5NOc35sPc72E8Mzz/sZ37ucyP1b/X
rZnxzXB+zPjI/Uzmszwf5qvMnzGPZ37KeMn8mOtvzHyW+TGP53zM/SjuT3G+
5PzK/JH5pHr/R5vvqe9n0Mzjmf9xfmJ8Y/7C9RvzD15/zv/Mrzk/Mz9k/GK8
4P6t4fjD8cz9XMPxgeOT+7scv+r74rTjk/u73N/h+OZ+Du9PYO5fcvzSK+dH
7u9gfn/Op/TP/R/6xszPuB/E8cz1JMcf5vji+pHjj+OF+0eY44Pjh17pmR4x
8z/65njg/oz69xY00xuvr7rfoZ2/6Qkz3+N8T7/cn2E+gJkv0ivzAeZ3nP8x
80euRzj/c72gPt+vmfkh9zO5n2o4f2N+x/yK8xWmX84/9Ka+n08z5w+OF/rj
fMH9c/rkeOD8Sf+czzhfGr6/wfmJ8xmP53zA+YPxnPsfjG/cD2C8YTzj+of7
s1wfMR9hPst25rts53jgeoPrEfZHD7z/TV+Mj/TL+2mML1yvM57xfhq9cb1M
n8wHGY+43mQ+wfUZ12+Y+TbjE2b+xPsvbOfvbfj35e/JfJfrf+avjLfMR3l+
zB+YDzCe8XoyPrE+gvGF45/zEX9fjnf+vvz9mG/z9+P5cL+Q35f1Rpj5rOH1
B/1jemc+w/jK+Z3xEbOehPGM8Y/zOe/nYn5/zu/8/owfXI9irl8ZbxjPGD+4
X4MNr1cZn7ge5PyJ1eeFtfGG8YkeGY/U99do5v4J4xOP53pSfd+0Zh7P+zG8
3894RZ+MF/TJ9SF9Mp+hT67f6JM+6JPjifUEHP+Y91+4vqAPrhd4PFbr2bTr
Bx7P+EpvmPGX+T6/H+Mrvz9mPsF4zPjI+ZfzP1b/3ph2P4bjjfMv53+s/n0c
7XzN8c/5lPUFmPGQ+y2G46Hh9TSvD+Mj4wnXH8zXuV+Ome8zf2c84HhgPoCZ
n3I/h/GB8y3nd8x8kfsxjBfq9dfeX+D1pGfutzAeG/bO/Ra20ze/D39fni/z
X54Pxxt/H14f7rfx//P3YD7N+MjP4/fneGZ85Oc7Ly+f2++2g7pefxBq1rjX
2r//vfP1i956H03X12eO/OX1vWvdOLU+M8F8x/gPDePU+ky/3XseNr4cKx8v
2/Lh/sdANV9u5Pfh0IdQff3O+/vhXcZY6espub5/VW9Imbe1YuSeRpFWZ8YH
qf4HZ+6W/1TQ109yPX7L+NrI2DlR8o5tzNiqk/X1PXnOX1rm26P/+6Hq87MJ
CxPSl0aq+fbr+v6T6lcMkz/WHW2w+ZxU56sBRvfOmIRE/7XeJ63RKLPZESEy
zLFHvfhUfb2P+vewxuQ0Pt04WCZGCIf22/R/v2hXVna1+al/r/+pdvNazWbR
Z+SXDL+6b1fr/x4F8+8V6Rk12nX0lrV/lC3y8ay+3pD585rlxsneRqek86rJ
KR9N9e935/2ZurNXjHO/4y5jwmpYWRjr6wl5f2XiZleT877usnLRqW+frNbX
D3F8tS8V/qNOSQe5tlnK3Rop+vfHLjwwvNDYK/r6v85ljUJrr9C/D3KUxb2v
z6/q91uZjx80KbN8wIBJMnNqn8yE4fp6vsJmrzZHBujrjzhe+5b/Mm9NMVfx
tv+Zhgul/v1Bs82O3/abrn9fzC/jQfZXzPT1dwVfLW/QzkRfL1fp9/e+xX/q
65Omb27bwGWuvl7ONXhYj93L98mvL66H1R8UJ/u0fnrbZ4iftI5ac+hSn1hZ
1DqqWpdhgfL+sJORFhWk/D2i55jrHiGy6bmyze5OiZatLT0GlfINl/9em9hs
2raz8voakyjzFWelW/Jt07DdEfJWpxeOnkOkXLHmzm7zaaEyIWViszbr42Ws
fYGWjcL9ZfKJKnMOv0iSh385tBK93OSQVf6fSs9OFROPNype5/Vs6edkueLB
lVRZbuo4j7CoeSKilGWfvLZpclCD/h22ea8XI6/f923qly5/5l83y6zWUXEx
71bhX4UzZeX9E36MDPQWK3vkHzBlVKacFJnb/vkGP3E5KKzIhcNzpWtC1QUl
ZsbJK812Fd2Q31OWeO/jFvzkz3z51j/n98xxFYmL22+f9CpWxj4//iW0/DFR
98nhwjNO/Dn/bfr2c/VOf9mkaOFC1XOkbHzC2a6xcbC0PL6hiVf3GLnSfLTv
erMw+eJzpk/lVVEyt92v4AaVI+WUGdnDfewj5bz8Xi+m1I+S0SUWunf4c32x
ffChw1W3RIl00xe2yU9DZdq9f29e7PHnfJA0ev/FviFyaofHe1d+iZPxNvWn
OeUGyJ0PbMx/do8TpZf9sPrhGyCn3C2Q+s/oOLHgq/G++HUBslCwiUWpHQny
3NEhr6r6+Mq0gYeerzZNED5drm5zaewrnY3ezvXNlyS/TYppnWntKdv0dq2Z
0TFJus/qvtyjrIcs03/w+gPHE8Wjh63uZlX2lK0Xf/lm3itZWiyu2e6/xYdk
VqMO5SbXTBZNNiwY8u87V1l8rn2xtPrJovwd97GJga7yUrdv+UdlJkvvHMtP
VQfvk1W3F7reyylFVDXOLts0ZJvs2mPXxRjTVFkg1+d7cY+VMurVy6L3S6XK
9m4/ozc7rZD7OlvUty+aKiYXfrh42ei1MtQo7NO0yWmi1odPh7q6rBEjGocN
GumYJo81WzHh7qWd4te3KT9bfUqTLR1G59k3cRLxj89UiPNOF6lDrlSY/WSf
WHB5XmKx8hmiWb5Lb7fXOiRapJbZOfJ+utzUZ3Ds3mbuYoz1z4n9xmXIV829
a1So4ilS50dcfL0iQ5ZfXbKTtfEJMbBvrzcF+2YK06Gvb0d+9RQDZWwVuzOZ
4snnF6atj58UgfFV8hfYmyk/VXLZNXjLGSG+9x99/XKWcCjUuGj8SH9RKDJ8
js/XTLnxyPrdm10CRN2l/+0uXT7rz3EyZXXRSoGiRkTFf4q1zhbrvr35ODwo
QPD+1rTk44MbdNffz7LfnxQw3Fb/vFKlvr12v8kXK09Vtb1R54GXut4rbLt+
aW5xdzVfq3XE13ZgcW9xw3t31ruv+ucD3oZkVPIbJmXpuYufjcr39+cFijzo
2LXqvhhZe9/whymRfmKN/dLozD/XS9xf9jxX52NCfLTMmTliXdngvz8vEBDW
PbvLrSg5u9ue/QP6Boony6q5Wx6IVveHO7+qYFfr7lk5rmPB2bWjwv76vEC1
C4UivmVFyselvvcfvDRE3M7tUu74Rf3fY68yb1WVsV4RsteEiDn/zgoXtULC
Xhq/jpB29o4/4y9FiA0+JZ3i3obLD+0qmBZPiVb3e7k++3DwpvUB23C5+cQl
f+MVZ4Xh5wXe/5dTrHiBMNl3SznXyRf+/nzArgk9fCb6hsi7DRotsqkgxbNu
L49lZQTLZt+f3GrXOFakjXw39UFokPQdeL/KKyv981IT83ld9wnT1/9zv9e3
5NOxxrv19f6d60UVib/uL994Dr4o6ujvF5qYNg4qMEBf38/15KQMu2NPSp+W
yUMOmL/20tf3M98tPbnX558LfeXXiiJiz5S/1/MnxHuOkk1OSN/49+OPWunr
97m+K5Hyud/6WZ5y4fuc/u5h+nr9VuM/S/9U/f3Jqy6/I+KP6evxma/ZJb+J
9fA6KGemv3lead3f6+vzW/vM2HBmlZpve6fVj456vknOe1L8Xfgg/f1M1hfs
Wjb0bWWrueLfORsHXnHS37+sUeJUDfuK+vp55uMDrNet+fxklXgcdP1jhUv6
ennmi2d7maeVa7lb+G1x72B8U18Pz/Xn4bjWpdyGHRTDXdZerrb57/XxucaF
y226dlwcfDSjT/QKfT0716NFe5p3XnxAX9+eL6j+wspbvMWxXbOPrLqkvx/a
fmp8tf6XMv96f7Pbj+yzhbL9xYyhJc/d+K5/34O6ft26qET1WQHCYqaR9eYg
/f1M1p+75L54ZP5vnKyxt2+ZrjdOqOs39XmijHf2Lyvq688rG+eVeb1Hypnd
F3X8fMDnr/Xo9YI/bR52P0ZeXTMz9or/3+vRE27Yrk0eEC3b5ZmurfLq7/Xo
YztvKZi28qwctOvrAst4fT2695ua3hkl9PXoXA8OOVZn9t5J+vr0yNT+7392
CJfbX/l0rddHX69+as+V6rXjY/5an3718NrsfOP19ekpy49tcskLlPWy75+r
OeXv9eq/rW1uXJkfIJsfXVRuZgd9vXpO2YJl+j3U16e36GTssHTW3+vRl1Wu
NmTZDv39iTrvC5+JsN0rnSpmD466or//urJ00umEVH09+r6vE7+e+6m/v8r9
0929dy2r3vuYSB7rN+Wnn/7+KfdLvcffKVKgup+4Z1dg+fgu+vpzi5n2h+5E
u8hum1Nule8dJ6e2ubihxWApNy13qr/aJlRWbppd+tOf88qvM72Ns4oGyRd1
/ttZd0uidN53sId9mpe83ONJ9g+vRNl0zaRTh2p6yWZGsuTIpKQ/8/aRhWfV
cJeD78cW33o8RRr3mzA96uoW+aPi2Y+rTqTI39PPr0nYvkWKZR18Zjv8mb/2
LDd+2NzD4sOW2+1ajnKTbYpVfPZfvTjpYvXmV5PyMbL+vJctk5aHyfXPS709
cyNW/n7p2/tW82BZZ/q22wFpcXKn0/cONj0DZcTMrmtjiybKPL/rT3519pYv
V3WbsmxZksw303HMh6xjcstom69V2qfIJh1mPn5a10HePj29/LUFqfLjn59T
//IwGVSk64mXS1Nlh+gTyzPWD5L57zh0dBicLreKivWXuh8QTU5vuPUyMENO
7ucWs/qhl7DIrvukREKGrDl9vpfHnJOi4e2RZ7oF2Yk9q/OtKjkkTo4bOud8
hT4bxPX8P1I39IuT07ycnnf57SAG7c9vXuvP9WW82Z0rv1qcEDeqG99LHhYr
He88C3xx8s/59ODco3u7SOnZp/Rxn8P+oqdVd0fzeTGy6N6inn2eBon5Zrfe
VIqMks233W374FOo6D8hZHdIbqS8/19Mz8XzwkWEbfuH9V5EyEqvP68u3eqs
yLQwCrryJkxu/nT63PuL0eJo0LcPh2+HSNPlvXOql4oV46bcHjMuN0huXBYf
0jshViywcizqdDhQuhbf/23Xqzhh5VQho/BEf7nprcnJfHbxIvdWy8rVlp+W
TsUWmf6wihczrRxnxgw8I4t2+VKxzL4EcaBzwHOPy6ekaUirYk1rJIo6poU6
tVjpJb80znsdYZQo0gM31Qn54CXLeS27tLVBkmjzut2X3KBjsvay1hc6eyUJ
q65OjYr0dpPV3Ha1a7QsSURtGHJnait3GR0dkP3VPVmsSV/0s1DaPvnuvW2M
T3SyqN6/d7+rPs5yVUjFU1WqpYhXmcc+177qIG0vh9z4aZcqolpW+HV6iI10
qh6Q4PY2VZw9n1y0f//Jwr1blz4b36QKxxUWI27unCT+OXWr//ILaeKsXbVW
v8tuE3XL/bvv0eM0EXbj7udyFXcIx6B5M592SRdh3+5ZtAhxEAW2V9pyZU2G
mH7lqck//m7iwd3pRfufyBCNR+265xvqLhY+WlSt/qMM0dtsfa1xQ46LW9fC
5xwokyW6t9hcL2SAj1g8aGlK6dZZ4mj4jlN27X1FkUqZcyYszhJnrrXu2vS3
n3j+obWXkWO2KNcg63zfkkHiwi7HM8mu2eLBrMtv35kHiX/8205Ja6+vH/+0
8WeHl5Z/xvctppt2vw0Qkft+D6g1JVtkP+6T2mZSoLDaFHg1t1aWbH9gWZdq
AwLFlje7kn5N0ddfLX9/bn0Jhyw54XrBW/7TgkVOjzzrKnOzZMLTjRYe0UHi
Qb1GH42uZMp/Ip55vnrtL+787N89sFeWXPTbcVnDwkHi6+JTWZFDsuTvMiam
riJItPJJ21Nyr76evEGvo/PrLtPXk/P+zHo7T0/nXH19+TH/XiMdpunryQvs
2fdljo2+/qLtUdvzvnv09RbDXIObxB6OlTs3NRxrGqR/nr1Lrar772RGyU/P
3v96uDlcHol6W3LcYf3z6/+F3X93sXq0KLro7BfX+aHS8kahaiNbRIu0mSJk
9pRQ6br0TZFLL/X1354fV7t0M0mQx6LmjLEufUaeW/LQ2Kycvt67eLJVq3iz
BGFm59Zpx3YfmdjoZ/dmgxJEufRRLX/99pYRCQsfxfvonzefc2CwcWBCopi+
tN1Mx40esvHaQhY2jxJFrXNdtzk/OS5jf7n/tBiuf9680I4FUyzGJcv48MOt
Epa4yqQKBzuOaKiv777zY8aDr5apIjc2oX3Yv0tkw3P91petqH8ePHxrif6L
/1wf+9zqEv380HrR+mTbVfHT9M+HB3WrELViTpo4ctjzwM5ja8WiO/n7lz6Y
Jkwjnx+/93qDWPGlnvkPZ/3z40tnBNoYuaTJxiY3PVYv2yWMy7wf2bu2vl57
5LSKQSc6Zoi4Rz7tv5geERstxtQP7p0hMgKzB/WVR8TXtjX7jf6ir9f23hja
o1ThDPl0bt1FXYccE82j30Xda5Ehvabea+Z/6Lj4ntOhetBZ/fPgP/d2meR0
OVPMubev/W73U2Le2hojet/PFAPyzExefjklFpqcLXewo75e+3pozbIOAzLl
NtNaXZ2b+4meFewOt3LX12ePSCg1SnhnyuipA88vaOYvouy+1z1fwUEW6NN5
+qUJcfL7kJjuuW/3yKwz/3WuOzFObu6V/vPiu4XSuKhblcMz46Tj0bWWd4J9
ZYcJM65tGBkrD5/fXT5mlI9cl3K5RdQSff32wYt1rGZ8j5VPP34ZujXHU+bt
8fLvfDNWjrFIaFM8yE32NI/vsKlWnNwwNaRc84g/563XP27GGOvrtXd6XJnT
1ihOOlh1vXymkqOY8mq0lUvDOHm5RfPe1TL3iYbev792KxYnT5zv2f3oV1fx
vXknmzHPYmVAs8bVo+pFycRVpmbSNEI659wz3zVJX4/t9uei5M6lP/O+u4ne
5doHy4JHu1TqYR8rq6YVSrSJDpZZY28VaTlM/36GOUXt45uUjBPBB38O8CwZ
KF2sxbe7R+Ll/GeXLF4s85duE7ZuOpMULxve77DiaS1/2WVXOfPKfvr3NwRb
2db4MDZB9hzmdqnaZj+Z//235xeKJMqilt9f2Hf3lpWt5zVvnZEgG1S3cG6z
xEfeCGwROKO0vr7aumb1+Y6dkmSSV9rwNSU95O3agRND6yXLJS8u/F5U4Ii8
E21n87muvv7j4lS/uNDHSWJ6K7Pf1nWPyHdPkoc8fKV/X8OAc73Givhk2bln
qVCb9H3S6rG7ccu2KTLOstfOMR0dZHvb0wtzjVLkilqXB0ee3StHnTJbU+o/
/fsbjB5fz+k5NEXs3XT/9IcS9nJyDastziNTxL35L6q0DN4tK9T8VN2muL7+
2XZljZmvu6TKWc3Tr+crOV++u9bJrl1uiri/dHADi6Ib5IMvyzcY3UiV8cnV
2tzZOV/0i9o/uqBxmnzuMmDv9f0rReqRIh/KzUiTLwfcK1Ci1FYxKyvTZ01J
fX1zr2/Sqe7zNPluvvN2v2V7xcfMXoUqij/b6xb+nL3cRUQ1qbPUoV66XL23
tVHLR/vEr1CvhdUc9PXNTlYirfXYdNE6buGm1tX2isk5jQ8VW5Iu7jaynjCs
v5P48mGXXVBWupg+5XOl964uwjyxcNLzG+nS8sGa3/nfuon6/xrdWzhd//6H
ekdzV43YmiEb3q17L9nuhGjtfTy+hoX+fRBWrss23S2eKRaMfm+5faKH8Kh9
9cioSpnCpHv8zfeeHmJn0qDajgszhemuxP3GBb1E19WRy6YWzZR573bWNzrv
Le6YDFvTxyxT1tpTY/jTKr5ilsmQNr//y5RnzCOb5n99WjgsyPxpHK2vV957
6UGXVg5ZYs6YnHktM0+Lmw23e6Z7ZIkZq1d/fjPijHjwttjyKi+zxOqFPz5+
9/UXxac736xZUF+/zHrlC35b7MXIOOlcJWRWkxBXWWViWbPCneOkU4kH1z7f
P6rWC7JeuefG9efOmcdJr/JtA3dU2Swvf3PKOTwjTnYu4rd32sSNstHzOUs6
zNTXJ94a6fJuR/8/88MglzdZ1qfkdPdBTXofiZUXdmTOi0iPlJ+WB90vVipS
xsX/OlJovL4emfU9oxwHmS/vHCmneX69vei6vj55QevRzq9z9PcPeX+suaVD
04LmgXLNaS8Z3jleNjhYN7y3tb4++etGu6Sg0AA571n+QWuL6uvDrh3eWDZj
mr4+mfUBw7+VOWlfzEO9n1vc5d7Ge6uPyqfL3T7btdP/vb+b6aFlxjf7e71y
8e2199S1HC17D0wu+/N4quybz3uWf9pQUWnxk1RLK309clrDi+P9+urrkbfY
jGgb+E5/v/OA+0Y7iyP6emTejzI+eXpMgbpeokKB0NUVcjJkpOf4vbX7nhIF
1zaYYW2nrz+uHpP6WFzMlJbxRXY3fuAvspPvnF4dqa8vNllX/pB9a319MeuN
7X5dv3PQK1DkuPmsnhubLb6bPO3x6M98qtSZcybP0yaKlH/unRs3KU5et77b
P+vuRLHtwoDtI/9nfXHt30sTKo3+c31W/YH946aT1PrVTaYnHY0beIjOIdu6
J66NlT16WC5e3tRD9Hy//cXo/1lvPOPNiu0FJ8RKKxlfwL25vj45xqHevBP1
Tv6Zjwe492wSK8XHWl7OI0+p92vH9bi18sTSWPHq3e15Pk2CpG96wqR67n+v
N248Z8FCl1NBssnqURUH3E0WWQcnzkwa6CS3bmnTZVR+/fOXo80qxY83SRfv
ndY2c+y8W60XmnTt4hz/5XtExNJnnYbX1dcTR2RX6hofkCH+fbHQvHn+Y6KH
tdvgFef19cJvXJ9uDOqRJUrfn17g0wlf8cM0Z9WG8fp64EM13ct6Pd0maj+o
OSVAxMkObSs3bN/5jCxYJC3Xs3qs7PbctNTEVl7S5KPjkpmJsbJ+iep5V+8c
FT2e7W3fJCNWXq7gPe+BWZD02Jp16oVfjHxV73uhX2vPCM/9B+uPvxoja9vZ
5GbNDpXPhg7u7p0XJavPCnbzXxogmgXd+3dxoRhpHWE/I6lqkOgT22dacpNo
WfLBx7GDp0ZIkw+HnVcVPysLitjXZQOCxRlP+3mjekXJrpuM1pq3CxUVDyW1
Lzn2rOx+bdD0zYFhwqtZ57a+MyOljbQ84BQSI4cXLfnw2JtQWS71Zu/w11K+
OJ85puqNEHlsVq26h5bEiI9NFw6KHBoiDxQv8swmRIoUp8YVc7sFS9t0p9rJ
deJkxwb/XLp0KEg+mHUrvbVHnIio9PNjQp6/9E9uVKK7Rbwod7FEyfqHz8j3
46ZNsuidKN+1nRowvuApeWjus4B+iYny+Le+5YvvOiF/x+d3X3ozQVhM87jX
7ORJuemCh/WbgD/nZ/tA+xU73OXLTZW8e05PEh0CYx8OXusuw0/UTioyNVmc
c2he06XLAXms9lHLxXNT5N32ZWevKrVLmned8DD5Wor8VahWh0PO6+W3b7/X
R55LEbsy7tjkBW2UNfybHrYNTxXvfp5NOdfWTFrNbzmt6rp06Tp2wafECYfE
+KykXvlbZcjrW4r1fR9yXPS8td788aIAKU36rhu5SsqKTV68nnw9WO6rUtrG
+XK0fDr1zuCWeWHyeaFGT/sXiJKBF3Ze6b8wWl7dHr9tR75w+S541emAnLPi
XdJ80xezw2TLOW+29w6Mk1bzKsReWPbn+njFw/GN+yRIp0W5pQbf9ZMzHtW+
a5wUL37fWDRz9SA/WXiJ37SqkxKF/8TOUav7nJClvb0X53NOloG9HEa8eOgi
axotrly5SZpYMjf3+dtxi0Srcx/vdUlJk04j1rhvXugguj60OlT/XrrIbdlu
xaP1B8STBjXcN6zJFK4dP15+2N9LWFb6/WpfwWxxYszY67mF9PVvYU2PhplN
CRbZvRZl77igr4crluMWerNWhPhmfPLksfkRMq2t85FaGyPF04GmUcsWhMtB
ZcytM575iJD9145+dpXy/wD6Gknj
    "], {{{}, {}}, {{}, 
      {Dashing[{0.01, 0.01}], LineBox[CompressedData["
1:eJwV1HfAV2MYh/FfdtkjSkoRLZKMUhQaRiWSUUgqm3ZoqoyIhoZEi0RUirbM
UERLSiUtK0IysjI+3z+u97q/z3nfc85znvt+y7Xp0Kx9kUKhsNOPysUKhRNw
IsqjEipiPl7F8ehdtFAYxb24Ar/Jc/ktnsdXoDl6yMO4ATfH5epmeAxDUS9r
eB2z5Tf4D/yOmfIsPIK75YF8F7+Knerz+RJugsboJj/M53IzfI/5+MlaXd6F
l9X34X70Q2dr/Xk2/8Nz+EK+AJ3Uffkcvgz18kzciz6obe3S3BPT5Vf4N/yK
l+QZ3Ivbc0++M+v4QV2Tt+M7TMu7WqvBv2Bq9pk9oytut9aNp/DfPJXrch3c
ou7Ep+db4Fu8EFs7jX9OVr+IjrhJ7sA38nP4Rl2Nt6XGJHxt7ZR8Y0zOe2cP
eQ+0tXYHP51z4me4Bp+J23ArqlhrgvF5hjyBn+fWOQuMzfnK4/IsjMEXcmXe
gYl5v7wr2uF6a6OxOT3JjfEVnsCm9Cr/iBH5/vJIrs6n4jp12/QsN8JjmJD3
zh5wrTwEn6nL8sUYlDOUB/M1eARr5dJ8UXos5yQP5JYYgDVyqfQOHsh3lx/k
FuiHVfKRfAHGqVugZb4zxqO/9U/4KL6Wr8yzuVX2gBLpGzypfgqj04fyl2iY
b5G/wVU4GWMwFn1duzrzyFX5Nbyeec2s4U/rf+FdfCwXT4+hJFrLN+T7575y
Gz6aV2eGcl9Uy8zjbbyDhdht/b3cU70odeaN38fe+xcKizNreAgf4FPXj+F/
UQbr5CX8KD7EevlY/g/lsEH+iIdiKT6Xj+MCl+eNvIyHoYh6Oe/puSt4ePaJ
veSVvIfrj/MuHsWtcFrmCWegQv6WK/IWXpUzyFlhq1wp98qZZH+8hhfxal7M
e+NZTMqs5ntav5nbZN85P/VJvE/OLX3Na3k/3hcT1X/mHtwONdVnoRaqykXT
57yN1/H+XAzP51x5cp6H2uqzcQ6qywdkf/wdr+eD+EBMyf8KuUtmmTtnrjMf
2J4554P5EHye8+MNvIQPxTR0Rw/cgztcm575zHtzb+7A5/J5aKquhcPyfryD
N/IRfDhmqnfzLO6I+uoGaIg6cvHMFTalV3hpeiNzhBmZQQzAA+iSnuO56TWe
x10z0+qL0SjvJJfgktiiXsabeXl6H69gEAbj0ezRtSG8IP2Z+eLuaKq+FJeh
vlwqPY4v1Ct4K6/k0piDERiJ4ejp2uOZqfS0Pl3IfVDWWrn0Oqqkb1Ams5HZ
c30B7+H3i+B/47wTdw==
        "]]}, {}, {}}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  DisplayFunction:>$DisplayFunction,
  ImageSize->{505., Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.477631483109375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"len", ",", "X", ",", "y", ",", "\[Alpha]", ",", "pk"}], 
  "]"}]], "InputOnly"]
}, Open  ]],

Cell[CellGroupData[{

Cell["High-Dimensional Input Spaces", "Subsection"],

Cell[TextData[{
 "An interesting consequence of the kernel idea is that the dimensionality of \
the input space ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 " does not matter for the time-complexity of the SVM algorithm. Since the \
solution is computed using only dot products between samples (in input space \
or some feature space), high-dimensional problems are solved equally fast \
(not considering the time used to precalculate the kernel matrix ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]]],
 ", which is usually not noticeable). As an example of this, consider a \
problem with dimension ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1000"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len", "=", "20"}], ";", 
  RowBox[{"n", "=", "1000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RandomArray", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"len", "/", "2"}], ",", "n"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RandomArray", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"2", ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"len", "/", "2"}], ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"len", "/", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"len", "/", "2"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "InputOnly"],

Cell[TextData[{
 "The kernel matrix is still just ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "\[Cross]", "l"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KernelMatrix", "[", 
   RowBox[{"IdentityKernel", ",", "X"}], "]"}], "//", "Dimensions"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.477631580578125*^9}]
}, Open  ]],

Cell[TextData[{
 "The SVM algorithm is still fast, although the problem is much harder due to \
extremely low sample density, which is reflected by more support vectors (the \
nonzero ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]]],
 ")."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"SeparableSVM", "[", 
     RowBox[{"X", ",", "y", ",", "\[Tau]"}], "]"}]}], ")"}], "//", 
  "Timing"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06299999999999992`", ",", 
   RowBox[{"{", 
    RowBox[{
    "1.211089873984116`*^-6", ",", "0", ",", "0.000012938671614024639`", ",", 
     "0.00002037877301948547`", ",", "0", ",", "0.000020763592349432624`", 
     ",", "0.00001699748974993139`", ",", "0", ",", 
     "0.000017861518357327016`", ",", "0.000035500849990381745`", ",", 
     "0.00003408626951564473`", ",", "0.000017722866951448772`", ",", 
     "0.000018399085116987075`", ",", "3.9148422824504784`*^-6", ",", 
     "0.000010149463197031619`", ",", "0.000012439635827778358`", ",", 
     "0.000014712346891151987`", ",", "0", ",", "0.000014227475172073993`", 
     ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.477631652609375*^9}]
}, Open  ]],

Cell[TextData[{
 "The solution in this case may be viewed using the projection of data onto \
the weight vector ",
 Cell[BoxData[
  FormBox["w", TraditionalForm]]],
 ". The separation looks almost perfect, although there will be problems with \
",
 StyleBox["overfitting",
  FontSlant->"Italic"],
 " (the solution may not work well when applied to new, unseen examples ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 "). However, this problem is outside the scope of the present article."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"X", ".", 
   RowBox[{"WeightVector", "[", 
    RowBox[{"\[Alpha]", ",", "X", ",", "y"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L90bD/AzvrBHirgYHgoftY0Axifw2H///We
OmwwvoDDoldzRcLgfBEH5pL/SUxlML6EQ1obU9wLuHkyDufylgTIscP4Cg7v
tKaYCYvB+EoObxeYNZ1hhvFVHGazb9+0Aa5fzWHm1Is6a+Q+7IfwNRyOfJg4
a96X91C+loOqtoAliwxMXsfBqNvtbwwnjK/n4DIxeOJjeRjfwOGIyhKGZ6Iw
vqFDWIjiP1M2GN/IwXzuqXlHfGF8Y4fpLWdXc32C2WfiwOkkl6Aq/WE/ANwA
Wos=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.477631659296875*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regression Analysis with SVMs", "Section"],

Cell[TextData[{
 "So far we have considered SVMs as a tool for pattern recognition only. It \
is also possible to use the SVM framework for regression problems. Consider a \
function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"f", "(", "x", ")"}]}], TraditionalForm]]],
 " to be approximated; for example, a quadratic."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "]"}]}], ";", 
  RowBox[{"len", "=", 
   RowBox[{"Length", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["#", "2"], "+", 
       RowBox[{"Random", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "2"}], "]"}], "]"}]}], "&"}], ",", "X"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Thread", "[", 
   RowBox[{"{", 
    RowBox[{"X", ",", "y"}], "}"}], "]"}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], 
   PointBox[{{-5., 28.154626515126306`}, {-4., 15.833036621557746`}, {-3., 
    7.661130781741198}, {-2., 3.490603762721455}, {-1., 
    0.16692756353562999`}, {0., -1.5277858291941209`}, {1., 
    2.8866981707708126`}, {2., 6.789709887346973}, {3., 8.827763040767561}, {
    4., 13.32310759209802}, {5., 26.739617908169013`}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.47763233590625*^9}]
}, Open  ]],

Cell[TextData[{
 "We can adapt the SVM method to the regression setting by using a ",
 StyleBox["\[Epsilon]-insensitive loss function ",
  FontSlant->"Italic"]
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["L", "\[Epsilon]"], "(", 
    RowBox[{
     RowBox[{"f", "(", "x", ")"}], ",", 
     RowBox[{"g", "(", "x", ")"}]}], ")"}], "=", 
   RowBox[{
    StyleBox["{",
     AutoStyleOptions -> {"UnmatchedBracketStyle" -> None}], GridBox[{
      {
       RowBox[{"0", ",", " ", 
        RowBox[{"||", 
         RowBox[{
          RowBox[{"f", "(", "x", ")"}], "-", 
          RowBox[{"g", "(", "x", ")"}]}], "||", 
         RowBox[{"<", "\[Epsilon]"}]}]}]},
      {
       RowBox[{
        RowBox[{"||", 
         RowBox[{
          RowBox[{"f", "(", "x", ")"}], "-", 
          RowBox[{"g", "(", "x", ")"}]}], "||", 
         RowBox[{"-", "\[Epsilon]"}]}], ",", " ", "otherwise"}]}
     }]}]}], TraditionalForm]], "DisplayFormula"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "x", ")"}], TraditionalForm]]],
 " is the SVM approximation to the regression function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]]],
 ". This loss function determines how much a deviation from the true ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "x", ")"}], TraditionalForm]]],
 " is penalized; for deviations less than ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]]],
 ", no penalty is incurred. Here is what the loss function looks like."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], "<", "1"}], ",", "0", ",", 
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], "-", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<f-g\>\"", ",", "\"\<L\>\""}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF1ns41PkeB/Bx/ZViRdqH5BiXcqndyricVJ9fpZQkuUQnlS4KUbIS1taM
CCVnjlIaDiZ3imQTwu8Xk6a11iVJal1KojAXY0aD+Z05Pbvz+z7P9/m+X8/7
83y//36px856BChTKJQ0+f7/ebyCySMIBG85TB0gCAKWzhqsdJxDcAuxrWvk
DAGcHQV+kTMInnTdpXacT8DK/toX43wEd63/6cabIQI+L/6Q92YIwbv1W5yr
mgkIC7b1rWpG8MHu4AcnEwm4aN6Hn0xE8DmXXxltWgSwMk3T2rQQnGbvbJa5
QgY5A0ln9y1UxzdjSwbu6szBsg7PvZZ6avjq3KJsDyspcN09nVrNVXEmuzDp
1u4Z2GlpHmFqooIzPVxGdziJYUO5X2H7j8p4hF+ta84REUivntRdb6mEi/Ta
Vp7wEMK0JD/98CoK/pm3y7rBjQ8ckzRaY6gMS9puFhT7dhwc1S5VWZ+YwyI1
ZCd9uKNwE7W33/KLFLNgnDkTJx2G41m+Hz/nzGAtDpW/vYIhaC8yWqjEEmMb
c2LMVAP7wGjxg3VYtQiLWou3zPV1gYbxSPtYqRBzp6y75ObzDN5lLWgdvCvE
BkecfNW/fwb39a1bXrOEWGCb77rGHg6464bVP7sqxOgs+oc1+zlwS11azA4W
Yg9oHc6a3s1gMqEZd8BKiGkHndX+3eMpONbZ0l6UCLAHeQe33ciqg8X2vj/i
bAGGh12eVjasg/6qGKvHdwTY4KayovDMWoi7jxkXJAsw417pIg9WDXBzd2ky
ggQYfTGrWzujGrwSD404WAow9HxvQOqNhxDilZBRXMzH6NdLtXX1CoAtq7Ox
YvMx4+4jF3aY50NPMf+Psjt8DDfQ64+2zQN0/qBaxVU+Rim+VDbozYalhevD
H4XInVCS4rcmE3a5B2raB/AxVGfpv5r33IGL0v8W1xyS359zcZXVmdsw6rZw
4ImbfL7Os0lSfgMaJAO7m9bK+/5ZnvnRJBCy9T5ts5T3XzuuTrHjYZXr7rhn
VHmvW2j+9D0d/MT0Fc4G8v5biIH/5FbXcHXk/hbCocVl3NNlkdwp6b1FN0/C
rIjKa1WRu7fou+gjbuC/uWJp5gwPo/y1WtMMdmePkbb7lMBg95HOdRQ8zm8l
HTH83KzsPmlDu/Oyx+dIX7k6SHtyjDS/f/fpRk/SnESTXo4t6dA37ZWdXycV
boy1CvjCIO3fPNBqlDahsPOmmYA/GaR/eKxNyTpHeq50C01/H+mMtLwsXW3S
HUdPhS5IHVd4C4WnJUz+orDJJtm+Z4wxhUsCq4aeVH9UOHiq0u8aa4h8/6La
AXXTtwrrRncvupX5UuHXJ0KsKj60KHwhxir1RXq5wqX/dkDz196Hv50axOjx
j3uusKbI1fHevpcKD0a00CLj3yo8Wbun6QJ3SOHCRLb/ieSPCpuLy3SjMscU
7n/4jwbHwAmF2xzCrUwukK5v5NxecIV05m9B4a/ySPu+r1p1doB055KdaXf3
TyrMCQs7tXA7T+EqcVM3z5P03Vi9rT3HSDOS6gzz6KQ356p2bawnvWalD5i2
kja8V3JvYR/p2cduiT0S0tPZ7jGHVfhAKZbEd025wMTQ1wedGnL3NU8dzQuA
YbO8T046cn8L4fDulKtRjb7c30I0dJdOe1lT5Q5+FVOaTofWiexr2RZ8oH+M
bN++Nx7qfhLMxNvL+z9ro2KbrkHGpVsv93nLPZLzMcIrHbxvDyZ9YfIh97OO
4bkVdyHVuUpT6Q4fcEFgNdU4D7iShLRlbPn810b3LpN82OBrnbWlkg8ocjrB
xqIQjPQjK253yudNmyen15fCKGtRzzYdAdDLa/03mVVCTLadadYNAeR+CrJp
+mctZBekNLjeEgJ/dcB4wEMOqB4MnVCLFoF2yKNH3w93wh/+JUUe8WJwuFyQ
7bKkDx5pGhyShMxA8HJa3eSbQVjJoo4irlJwpW3r+C5jGKSR8fNlnnMgmlgw
61M0Cl+ky7WKHWTQM21v6H5uHHJPJXYvN6WgaLtWif0OPjC3/J6ib66EGl/O
0LdxEYLW2bKtzXrKqGH//oQr1iJodKppqDZQQWOTw34OtRXDfOgRu/1aqqj0
bWPIPcMZUEK67ljPq6LKWvk2PtKvYLczvMmFoo6GMIfj0ylzIH13b1RPqI6K
ag90Wg/Pg1MIl7lHrI4m9TKpmePzcH32g0OCVB01kDw/pzE9D8YGy5NFygiK
0ux0xtRk4OyTbPlSF0FTy3U8C1fJ4GZnQDDTFkEt8lq7jU/L4IcWo3GNaAT1
S9nUqyeUQZT3hptbf0FQfmmERYJUBk+HvTfGMBA07kVZlEiZAC+V6yljyQha
rG6g/1KXgJ/R2dVcFoKK6eIDTFsCuHWvQxPqEZR5vuKtRjQBOi5Teg04gprd
HLGOYRDg90arUcRB0JqHK2LHkgngSbZrnWhD0H7eNUMui4Bltr+Wb+1H0NXB
gYcS6gnw57Tvj3mPoHhSzn0Rh4ASzy+yyhEE9SjqmT/eRsDGcJO9VB6CRg07
ZW/tJ+CK0maJ7xSCLlaJnawcIaCDeSCHKUHQXGrVZiqPAAPj887cWQSloZ9T
mRIC/voPoX//h/4Hr3L36A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"f-g\"", TraditionalForm], 
    FormBox["\"L\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {0., 1.9999998775510206`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.47763254934375*^9}]
}, Open  ]],

Cell[TextData[{
 "Using this idea, the regression problem is transformed to a classification \
problem: any ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["L", "\[Epsilon]"], "(", 
     RowBox[{
      RowBox[{"f", "(", "x", ")"}], ",", 
      RowBox[{"g", "(", "x", ")"}]}], ")"}], "=", "0"}], TraditionalForm]]],
 " may be considered \[OpenCurlyDoubleQuote]correctly classified.\
\[CloseCurlyDoubleQuote] ",
 StyleBox["MathSVM", "TI"],
 " solves such problems using the ",
 StyleBox["RegressionSVM", "MR"],
 " function, parameterized by \[Epsilon] and a penalty constant ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]]],
 ". Here we again try a polynomial kernel."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pk", "=", 
   RowBox[{
    RowBox[{"PolynomialKernel", "[", 
     RowBox[{"#1", ",", "#2", ",", "2"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "3"}], ";", 
  RowBox[{"c", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Alpha]", "=", 
  RowBox[{"RegressionSVM", "[", 
   RowBox[{"X", ",", "y", ",", "c", ",", "\[Epsilon]", ",", "\[Tau]", ",", 
    RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.03653162591222404`", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.025306009411427046`", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.011225616500796995`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.47763262990625*^9}]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["RegressionSVMPlot", "MR"],
 " provides convenient plotting of the resulting regression function. As with \
",
 StyleBox["SVMPlot", "MR"],
 ", the kernel type used is supplied as a parameter. Note how support vectors \
in this case are chosen as the data points that are furthest away from the \
regression line."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegressionSVMPlot", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", "\[Epsilon]", ",", 
   RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.01, 0.01}], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.01, 0.01}], LineBox[CompressedData["
1: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
CdtZB7R0PiTj//9PwE5TbvmlSWT8P1biq9g=
      "]]}}, 
   {Hue[0.6], PointSize[0.015], 
    PointBox[{{0., -1.5277858291941209`}, {-5., 28.154626515126306`}, {5., 
     26.739617908169013`}}]}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{-5., 28.154626515126306`}, {-4., 15.833036621557746`}, {-3., 
     7.661130781741198}, {-2., 3.490603762721455}, {-1., 
     0.16692756353562999`}, {0., -1.5277858291941209`}, {1., 
     2.8866981707708126`}, {2., 6.789709887346973}, {3., 8.827763040767561}, {
     4., 13.32310759209802}, {5., 26.739617908169013`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  DisplayFunction:>$DisplayFunction,
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.47763265978125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegressionBias", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", "\[Epsilon]", ",", 
   RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]], "Input"],

Cell[BoxData["1.4722141708058791`"], "Output",
 CellChangeTimes->{3.47763270853125*^9}]
}, Open  ]],

Cell["\<\
We can, of course, also obtain the analytical expression of the estimated \
regression function.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegressionFunction", "[", 
  RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", "\[Epsilon]", ",", "x", ",", 
   RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"1.435682544893655`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.025306009411427046`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"5", " ", "x"}]}], ")"}], "2"]}], "+", 
  RowBox[{"0.011225616500796995`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"5", " ", "x"}]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.47763271103125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Alpha]", ",", "X", ",", "y", ",", "pk", ",", "\[Epsilon]", ",", "c", ",",
    "len"}], "]"}]], "InputOnly"],

Cell[CellGroupData[{

Cell["Two-Dimensional Example", "Subsection"],

Cell["\<\
We can use SVM regression with domains of any dimension (that is the main \
advantage). Here is a simple two-dimensional example.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "2"],
            "+", 
           SuperscriptBox[
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "2"]}], ")"}], "/", "5"}], "+", 
        RowBox[{"Random", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.5"}], "]"}], "]"}]}], ")"}], "&"}], ",", "X", 
     ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"X", ",", "1"}], "]"}]}], ";", 
  RowBox[{"y", "=", 
   RowBox[{"Flatten", "[", "y", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd1DEKAkEMBdDBassppkiRIuYiegU9grC1V/cIKhayT5DP60LyZ8+P530/
jTFun/83f7/X5ZjjevSGJ144cOLCjZ3D3PDECwdOXLixe3AOc+KFAycu3Ng7
uAfnMBcOnLhwY3vgHdyDc5iBExdubA/tgXdwD85hJi7c2HdgD+2Bd3APzmEW
buw79B3YQ3vgHdyDc5iN/Q74Dn0H9tAeeAf34Bz/fANM8Eax
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwNwweW4QAAAFCjDCuddNJJJ510UoTVZ48wF9gr7NF3/ntf+v7757vf6/X+
/Rz8BD760GDIohjYH6CfY3g4Qkaf2HhCwwgJQvgUIABwNvlFQbAtKwyCWpIs
ECQ3x3mckGlGJKkFNlMY1hQlnRfUJadx/IpdGIIoUfRGWXV54Wl6ZNmuqoWm
5etGYJg7e1MEYeK48dZJXS/3g8zznbVahlG1j9s0q+OkSdJzUZ6y/BDtLuXh
deoeTXur6nvdXI/Vsz29u/PX+fIBTAcQOIShEQJ/osgYQ1GWwRYsQOAgSUxm
GExTCENP8TlEkXNuKRg6IfCkKFCSSMsSo8iybeE8x2kqr2vsShFNQ7LMpbru
g4CysVXX0X0vOpSa51pRaAS+GQb2LgqK3MtSJ4ndNNnGez/PwrLYV8e1s02a
Om2b7NTm3ak4d3FdlZdzdbs2j3t9v7XPx/H6+/R6du/X+ev9H2YDP6w=
       "]]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
    "]],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{1., 9.}, {1., 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.477632751015625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pk", "=", 
   RowBox[{
    RowBox[{"PolynomialKernel", "[", 
     RowBox[{"#1", ",", "#2", ",", "2"}], "]"}], "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", "3"}], ";", 
  RowBox[{"c", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]", "=", "0.01"}], ";"}], "\n", 
 RowBox[{"\[Alpha]", "=", 
  RowBox[{"RegressionSVM", "[", 
   RowBox[{"X", ",", "y", ",", "c", ",", "\[Epsilon]", ",", "\[Tau]", ",", 
    RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0.0020685997087761024`", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0.0007270356651898855`", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0.001341564043586217`", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.4776327749375*^9}]
}, Open  ]],

Cell["Here is the regression function.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rf", "=", 
  RowBox[{"RegressionFunction", "[", 
   RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", "\[Epsilon]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}], ",", 
    RowBox[{"KernelFunction", "\[Rule]", "pk"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"2.137623407004374`", "\[InvisibleSpace]", "-", 
  RowBox[{"0.0020685997087761024`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "i"}], ")"}], "2"]}], "+", 
  RowBox[{"0.0007270356651898855`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"4", " ", "i"}], "-", 
      RowBox[{"4", " ", "j"}]}], ")"}], "2"]}], "+", 
  RowBox[{"0.001341564043586217`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"4", " ", "i"}], "+", 
      RowBox[{"4", " ", "j"}]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.47763278296875*^9}]
}, Open  ]],

Cell[TextData[{
 "There are no specialized 3D plots for regression in the ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " package. Here is the usual ",
 StyleBox["Plot3D", "MR"],
 " visualization."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"rf", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
18/M3sDd3/K6i+j6mSlXelm2qEFA+TOX8TJWfrOpiU/5M5fpKbVqGNyHT/kz
l+E6zld3COZR/sxlhpmvd61q5FL+zGW2ZO09pJSkUD8zWk9PyY4vUqifmZoV
5yPZ+VzKn7nMh+tnlOdvpuuNzv5716GM9YW0P3OZxB9b/XRc6TzIZWzagyzs
m2h/5jL9dztqVlzj0/0gc3HzqsjUHSp0P8jY9Hh376SRMt0PMjJz6z79fpA6
HvjPhvgtGp/IfAO4kWWZclwXMt8Antxn4MlN08l8A7hV/By3jgcK/SCjfmhX
99b5Cv0go2Nz80PIEIV+kPFb9rbIX0OhH2Sqbb+9kgwnfQrwA0cFTW+CeHQ/
yGxOUtOcVsyj+0HmvI66x8RAPt0PMjwkSn+gL6DnG4zmNNcRzRJVer7B6AQ+
q8qOUKHnG4xXb8fMnhbK9HyDKfS4sau2n4iebzDRxoM2WRmRehT4ooPRu1QC
8FwI85hDbzLm5pM5EvBXZsOqjGcrzDcYb68ww+juCvMNZpD2hdhpX4jOwLXC
a36l/CI6A3fx1ti8ypT0g8AvV1jpPt1J+hR4df82o+hITwE932D0jwcekuYS
neHPb/x932qNb1d6XsfYLJvno9+gSs/rmNZzX49OPaSCdQZeFx7T3BGhTM/r
GLVi4axhkSKsM/DQ/E2vis6SOhW4wPOHn+y3AOsMvGjVoq7p6xXmdUyp8eNH
r4cpzOsYzUi9Axs7yBwJ+I7ZK9ddaCfzDeCWf4tXzRlE5hvA+77lbtu6lPTd
wM2jbNPNG4nO8LrpYkiN9y4h82DYBv2y693E8LrCq5d9HxvSJwLXOpMSmnka
X4//Xpiv64Z1xWQeCFzm9Fe5aIsq/f6MV/LsuQPeqdLvz0jmmOkbH+5Cvz9z
VBjwRe2JAP8//DujBlvmHbAk9sP7xRnmWFSeEtLXi/3S7dWzE1Xp65lC47An
g050oe1nJi/rc1VHT8i0bKwLDilTE8Orm/+b8Q+PY47/XOKve0d5hyp9PbN1
5Ei7/M7PRV3P2D6eaDZ3ONEZ/z31xm87XpH3hz+/+vKFmqSRvD/YO8BBKouR
Efvh79VtDEkt9xDS14s36Z2NtH4lpK8XD38xePrH96q0PczTbYO7tnR0oe1h
zI0MX130ETLrdGvuymRkrrvL8djmuGQBU+oX9VAmE5H5+fFPTfWvCcfz1QEV
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
pz7hM/8Ph0syZw==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
9ase/NTUeelh5lXROUH9+zmp67j607KMO+GHmFdH5zT5A6VS5//lqfs8eVZr
g/vIF3UflNujdZ28mm+itb18xZ+jdZ38sW/hTok9nO+idZp8nu+jdZ38n4PR
fYS8ncPRvZ68o9+j9ap8yyPRek8+knJ7h8Re3NFoPSk/6o9orSv/85es9qkG
HovWt/I5f4vWvfJFf81qhDzVQ3D3xN7Uy9F1Td7s2uicqfjcG12z5P3ujK5B
8nJfiq5x8oc3Z89RvsrWLLbl6+6CayTuE7dEa371j89F1yb5xnsUx4n95Oez
uFWf8Vh0fyef5HH49MS+xxNZDCu2FT+lE3smJbJ6obz7dXTvIz2+PDpnKuZX
RPeG8lU+iO415Iu+E61ppW3fju535C3LB/1EvxvsB3yq8wnucT7W7wZ7vR/A
O4N9gs90H4J1tfqgJ4P9sM917cG+70c6h2Bv+EN4V7CX8JLWcrB/sFfrMbi3
lo+6JtgXkaf3YLAvIo9uebAvIh9vRbCX/D68I9hLkB+7OthjkO+3MtiT2KO1
n+Vb5VrldnnYrykXqc5G94Dy5D+M7tHkG38Z3X/JG38fbp7Yf34jWofI838r
WmPrPcKb8EWJ3wt8Fd1jymP/KLr3lEf9ebQ+l3ctT/115cxgr/0NeEuwB/8m
vDXYI38Pfja4x1fdeSbYv3lVOVZ1H74isU/+cXT/KP+8ZGpd92Dq2qLrV33L
n63ZltJEqf0H+SQ72H5hYp8wpNa68lJei+5t5ZM0T13LVNNSeHpifyZPan0r
fyZvat0rPzBfap0sby1/ao0tvy6XWmNL894VrfHUm3TLWYsrX3XNWaMrHxZN
rZekPVqnjjfFXa+cewPlz2XRGkZecfecexXlxvuidY408H/Rnrn8qB459zDK
sSek7gXkW6quq35KYxTj8wL4AeYiqXuQ+5SPs7yhurw0W5vqd6QV9iWup5VS
6z3l/4qpe3b5ftJCikHpoArZ8Y9lMaa8J0/p3Wxda53uz3Kd1vin0X6L/KXi
2T1Uv/JetM8jf6lFap9HXutnbO+W2B+TL6Tr0vXdHd0LqKe7J1onq3dbEq2B
1a+9Dl+e2L+S3tuf5Rw991HZs9uc5TR52sWyeNC7lc6p64je9fRInUOUS56O
9prke1+dsw5WHSzAuIntS5gLp+4r72U+KXUfukzHi/as5DlvjPZh5Ks/EK2Z
5d31zrmfWZflf52nakTX1HlG76cuUf5N7Cf3Sb3W5Of3Tr0G5d/+xXeuS+wx
dkudr/QO61G2n5PYP++Q87sBxUPbnP27panfxbyS2KNul3N/rmtpn/M7G11L
x9RrWWta+mN3Fg9X5txP6j50zrmHVI0ukcWSnvVVOfeTWtedUnt98sx7pc5p
8m+vTp1b9G6iXGp/Q+/Xno32MfSu4WTGnMTvxbZH+296Z3FntIcmf6BHdi16
R9YldS7V+75/oz0H+ds9c/YLpE8KpfYHdB/U0Om9iXzv+6N7Gb3T+REelLin
6J6tZcXGtmiPUe9QeqbOb/Klu+Tcb0srvhrtB8q/fSGrZaqhu6N9IfnGnXL2
VbVm92R5W97v/wAtqsX+
         "]], Polygon3DBox[CompressedData["
1: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
4cH11nrgvet8dv2YQVyYwgOYTZghjE3hAcwWzAT61PU6q66n3rVefFrnd98U
18hrZYa4aYrM0GzRDNL1t0sT2aSZwhj46iayBjO8s1NkGGZ7O+fQYpPh5Utk
gmoZNY1ZoRnIeSk8hdmImdOx8LC6/q0Het+hcCmh8czC9GhqPzXEiSkyRLWF
ml/vPbKufz3VoBSZo17LzO74FBmgWZ6e74QUGaJeUE94XIqMRK+opzdrG1zr
hf11rhQaVj1i5jCg1hvrix7HbErPp/cxIz03hYczOzUDHZnCU5mNmsmOSuGZ
zGr1hENSZLZ6RT3nqSkyVL2oHvKUFBms3lLPeXKKzFUvqiY2S9NjqpX12GZ1
eli9t57ULE3Pqle1J+jHl6m9YrjrPMWad+2rF9rV/qae2rhEPnRwDr+vf1Rv
HpLDv29UQg/3z5EP9IAfho/I4d/0s/r9PXLo2fZV326bIy/pXCJP2D2Hflyu
6s2dcujhJau+3CZHPtIdfggekCMv6FpCrx+UI+9Yq4R/3DeHvrVn6bdXrr3M
e+q9XaX2Bu+h97Jzjt5hzzMfWKn2Qnui+e+KtVfa48wTVqi9b+0Sen+/HPp4
nRL+Y/8cfsQeYm/rVHvLKiXylN1y6OPlq3/plcMP6DH1mo81kW3o0fRqjzaR
bZymDkihGdWOen6zktubyALMBMxKzEDMCvR8er+ZTWQJelz1ovpa/aQe/KP2
B/WfHqFt1YPqRfXWPFX/qE/07LNr/1I/6sH14mYwZg96tsWqvjQrOCCHF/Oa
eG3MNMx+nBPODT2iXvG5JrIQPbpeXc9pduFmyU0pNKZa80T4rhQ90d6oJ9Wb
6kHNhszgL0qRkZjNm2FMSJF5mG2YYVyWIhMx2zCzuDRFpmSWoYf9y0s1Mdf1
3GbBeqRna7/397sn8VAJD64f2bDW63NL9AprprVzeInabU23tp9ZwpvoMfQa
I0rUWmu8tf4ca1ITNdhaPAzepAkPo5c5GV69CY2uVte/6H/0J/qVoSW8jp5J
73RWCa+jJ9IbnVRC26tR1apnl8iv9UR6o+NLaGc1qlq1bSv0530p+u/irfAn
D6To5wu2Qo/ensLftGuF/7k/RX9fqBV65Y4U+nyxVuiTe1P094VboV/uTKF3
FmnFvfUeqz8WbUWecE8KfXBCifxFja/WH1xCa6vx1fonltD6am6196AS2luN
rda2ho2r88/adludj9Pr/baGmJ26Rq0t1jSzT2uUtc4aNaL2s861nx9b+4f9
3zWt97VmudatWYNrf7KWTan9alTth9Yws09rlrXthtovJ9b1YQ3Tq1sTrW3W
mAtqf7X2nFHCG+sJ9YanlvCmela96ykl5oZzRK98eom56pzVS8/Tinzs+hR6
cUgJL6vH1evqMb2e39fPdz2PqXrDemONG131gOtbTd6f43ZVq59WYj9Ej6xX
nrcV9fuGFH5mvlb0i+kp/PL8rfCPN6bwv9eX6JX2UHvprSXulffMWnJbibXr
GnetX1ei19qD7cXTSlxLr6la5MoSvdWeam+9vMS98J6oJa4o0Wvtsfbaq0r0
Znuyvfn2ErXDmmHtuKNEfm1NsbZcWkJ7qDHUGjeX0GLWJGvTuBJzxTmj9jm/
hLdQo6nVLrCGN6Hx1HrjS2gXNYpaZSJ8ThMaSC00oYSWUeOodW4qUfvUhGrD
G0poLTWH2mN6ifxHDaYWuwWe2oRmVDveWOLeeo/Veuo59a16Vr13WQntpcZS
a00ukV+pcdW6R5XwznpqvfVxJbyuHlmvfGwJr6yH1ksfU0JrqDnMIo4usV+n
B9eLL9GKXmfP00+0aUUvsCeYlyzQCj9zW4o8ZWSJ/TI1u9r9yBLeXs+v9x9Q
opfZ08ya+pfoffZAvdnBJbyFnknvdG0Jra9n0DtMhcc3oXnVvlNKaF89gd7g
mhLeQg+gF5hUQvur8dR6V5e4ll5TvcMRJbIIMwazhkNKeDE9jl7n0BLZjx5N
r3ZYiWzHTMhs6PAS2Y+Zj9mPGkJ/oR9RW1yYYw/poya8mZm2e3dmzjOrx7yz
9lO9pzX3rtqP1YPWbGu3NdqsRQ86tfZb+6+ec0rtl3rRg3h828Se1aMl/LJe
+HMej9R+rl5Rn6hn1J/2f2v8vvX7qldere+3RlgrrBFmIfrPWRx/xuPhEpm6
e/Vm9mbt9iB7kT3H7E2PbFarhtU767fsvfZg/YwZt73BHjGjemZroTWqV9Vb
6i/1mPrJOeZcs+eZ5TkHnYuPNqHH3FNwb9WM370Ga5q1zZpmNmjGan5l3mP2
6h6Bf4vgnoR7B2Zq+p9hTfhDMx6zaDW22Y+e3axZzauXd8/Av50w33MvwczW
vWUzfbNc90zcm3aPwL0U9ZN6SX2l3rKn2lvtyXpxM27z0B5N+FFrsLXYNWc2
6Z6Hex/mb+7duAdgvmj+an5qBqjeU4+q18yI1T5qoHerJ3BvR82sVzDT1v/q
L/Wj7gH4tx/6YfcGzMzdW+7eRJZuhu/feuiP36mZglrEGmHWYKbv3rh7Jmb9
ZpBm8epPs8lxvPZpE3tS6jdrirVlZl0fahK1iZrHLMI9Eff+zZufqxmEWkiN
YzbhHo5/C+Oe2CPVs5jl6+/1MmogtZCayezDPSL/tsY9AfeO/g821T2o
         "]], Polygon3DBox[CompressedData["
1:eJwt13e4T3UcB/B7XXuP7Myysyo7I9kzsveWnRUiZIumnZXMykxmomSVmexN
EUK0kNDr+zznj/fz+b5f59zrd35nXbk69GnYO15MTMxqSSCd42Ji9sXGxDy0
ji8zbDzN0pj1eWt2wboT26s/0C1jprPDFnHmi7we+9H6EIs1K7I67JD1JJbS
rMBqs7PW3dghPYEkZrNZF7Zffxx9tpmsKzvAYiUhm8V+ZPHMSqwuO2j9E4tv
Vmb12WHrt1kKszyrxc5YX2JZzGasC7tmPT4ckFmMvWB5wPoyy262Yj3YTevf
WB6zI+vH/ra+zp42O7C+7C/rMyyt+TJrwy5a/8KymS1Zd3bL+hzLYDZiHdhl
67MsndmAtWWXrM+zjGZj1pFdsb7GcpvtWB/2h/VB9lAvJ9XZD+wKy2G2Zj3Z
79a/spxmG9aL3ba+yDKbTVlndtX6KstltmW92R3rCyyT2YR1Yr9a/8yyms1Z
V3bd+gbLG64b1p/9Y/0xq2j2YSNZWn2mlAznnr3OEuvT5fnoZwewhPr7Ujg6
jvCZH1t/wIpExxE+X7gw50l51osNR6n1WVIqXEtsEEuiz5cKrDcbwdLoc6Qc
68GGsZT6XHmB9WRvslT6h1I0+l7Cdx+rT5Fi0fl4LVxO+lQpztpH10acPkru
6vnkObbT9tHsnp5fnme72Bh2Xy8gJdhudoeVMQexCSy5PlYe6UWkLNtn+2SW
3qzKXomuq9usULjv2BD20HoGK2F2ZgNZIn2aPBdd4+G8JdD/lnrh97J5LJc+
Th7rRcP1xvbbPpuVNbuzoSyF/rsUiL77cH7vW7/DnjTrsBbshvUJltysxZqy
U9bHWTKzJmvCTlofY0nNGqwxO2F9hCU2q0XHe8z6LfaHnlsKs23sJEtl1mUt
2XnrkeyOnkueYVvZKZbarMdasXPWR1kSszprxI5bD2PX9SySh21gN1m+6DsN
1+5d6/fYM9GzJNyDj6w/YqXNV9lgllT/S2qwcWwmyxKOQSqx4ey96J55Vwqy
FqwbexC2h+9azyEF2RZ2i+WP7q1wfu9Zj2C39ZxSiH3N/mTVzbFsBsuq/yP1
w7li81lu/VU5qMdJIvaR7TvZFf3pcC2wNSyTF8nb5h52jrWzz5fSPtyzbBEr
qe+SG+HzRtf4xvAz7FY4F1KKbWa72c3weaUk28S+YC3DuyW6Jovpq6U5m8jm
sCL6GmkR3gVsLiuqr5MO7EO2mJXS10o79j5byEroG6Ubm8VWsIrhXSn/6qWl
SnRfvsGu6pnkKbaOxfMd9DA/ZV+zSvZJyPqx1Wwnqx6uWzYgHA/bzWqF9538
F+5nqca+tz3Ofj3Nz9hW9qJ9NkkfNp+tZVXDO9B+vdjnbBurzBKwvmwV28Fq
sM3yWngmsy9ZtfCutN9QtokdYA3YhnDe2Uy2nFXQV0kzNoHNZoX15dKQjWJT
WV79M6nL3oyu3fDcWCmNwvONTWf59RXySngOsmksn75djuvpwzXNFtr+Q7hH
9GelAvsmHCdrEO53NoXl0XfI5XAuwnORfWH79+xPvbiUZ9+y9axreA6yz1l5
fW943oVns1Rk221fymqF88wms+z6d3JOf1Lysk9tX8JqmkPYJJZN3y8P9DJS
le0J1wSrE54f7F2WU18mtdlQ9g7LoS+SqmwgG8cy6YulGnudjWeZ9U/kJdaf
jWEZ9IVShQ1gY1lGPbPzOyl8F+w8a89SsmFsMzvIGobnMHuDbWT72ctsiPyi
PyHZ2WrbB7Of9bSSja0K7yZ2SU8dvhu2MnxWdlFPKVnZinBM7IKePDw/2fJw
nbDfwj7RdxqeB6l9lrfMbewoa2qf3nJMTxN+J1sQjpOd1RNKxuh8DGXX9Mzh
+cTWh78L2FE9laRgH4f3PftJTxbC5rG0/t3R5rfsOGtunzRsFPuGHWPNWEY2
MTyj2FnWlvWUI+H3h+Nj821PZ78x5nZ2grWwT3c5rCeRpGyu7U/Yb5y5g51i
reyTno0Pz1p2mrVmGdgEtoudYW3C+4kNZGvZHlY73ONyUn+kp5PF4TphZ1h8
ycCWsQesdXiHs5WsuH5fmrJpbBkrpN+TJmwqW8oK6HelMZvClrCC+hYZzlay
71hj/SsZFO4ntoXV02N95u5sWWThGZuMDWEb2D5WnyVlg8M9y/ZGP9tXTsWG
P8B8b8YS2/9lrcL7NXpmh/fCY+nMFrINrKw+ITyPWUn2Ejtqncq/MdLcyo6w
JvbpJ6f1eOFZxJba/h9rY85hq9iz+kRJxEpF74XwN8gj1sn8hK1npfWH0pEt
YOtYGT38x6sLW8Q2quXYAqnM+rHRLH34/fbrz9awXawm+x/2Lqtv
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0bsrR2EcwOHjfr9lkiKbFKsUqxSTsrAxMbAympgJf4CYJUbXn+siud8v
SXId3CXxvGX4nOfUe87b9+0tae1q7IyLoqhX7wrvz7rSUHwU5XKUxZxkBRdY
w0028JwtfGIHf9jDzIQo6mchR1jGcVZxmnVc4jxv+KltvepBM4bZ4Sx3Oce9
8D33wxw84CIPGeMRl3jMZZ5whadc5RnXeM51XnDAvLf80qXe9Kg2c22xiTHW
coqVHGMph1nAPqazm9/2aw9nYDNPWc8NVodzsJwTLArn8981P5SjF90r33zZ
zGNWWGMms5jBDKYzjWlMYSqTmMIEJoc7ZRJ/lRjuJ6yFOWWEaNDj7v/+/wCI
PEiz
       "]]}, {
      Line3DBox[{661, 957, 458, 660, 1050, 868, 662, 1051, 869, 663, 1052, 
       870, 664, 1053, 871, 665, 1054, 872, 666, 1055, 873, 667, 465, 668, 
       1056, 874, 669, 1057, 875, 670, 1058, 876, 671, 1059, 877, 672, 1060, 
       878, 673, 654, 879, 958}], 
      Line3DBox[{675, 962, 1138, 674, 472, 676, 1061, 880, 677, 1062, 881, 
       678, 1063, 882, 679, 1064, 883, 680, 1065, 884, 681, 963, 1139, 682, 
       479, 683, 1066, 885, 684, 1067, 886, 685, 1068, 887, 686, 1069, 888, 
       687, 1070, 889, 688}], 
      Line3DBox[{690, 964, 1140, 689, 965, 1141, 691, 487, 692, 1071, 890, 
       693, 1072, 891, 694, 1073, 892, 695, 1074, 893, 696, 966, 1142, 697, 
       967, 1143, 698, 968, 1144, 699, 1075, 894, 700, 1076, 895, 701, 1077, 
       896, 702, 1078, 897, 703}], 
      Line3DBox[{705, 969, 1145, 704, 970, 1146, 706, 971, 1147, 707, 502, 
       708, 1079, 898, 709, 1080, 899, 710, 1081, 900, 711, 972, 1148, 712, 
       973, 1149, 713, 974, 1150, 714, 975, 1151, 715, 1082, 901, 716, 1083, 
       902, 717, 1084, 903, 718}], 
      Line3DBox[{720, 976, 1152, 719, 977, 1153, 721, 978, 1154, 722, 979, 
       1155, 723, 517, 724, 1085, 904, 725, 1086, 905, 726, 980, 1156, 727, 
       981, 1157, 728, 982, 1158, 729, 983, 1159, 730, 984, 1160, 731, 1087, 
       906, 732, 1088, 907, 733}], 
      Line3DBox[{735, 985, 1161, 734, 986, 1162, 736, 987, 1163, 737, 988, 
       1164, 738, 989, 1165, 739, 532, 740, 1089, 908, 741, 990, 1166, 742, 
       991, 1167, 743, 992, 1168, 744, 993, 1169, 745, 994, 1170, 746, 995, 
       1171, 747, 1090, 909, 748}], 
      Line3DBox[{106, 347, 107, 348, 108, 349, 109, 350, 110, 351, 111, 352, 
       112, 353, 113, 354, 114, 355, 115, 356, 116, 357, 117, 358, 118, 359, 
       119, 360, 120}], 
      Line3DBox[{750, 996, 1172, 749, 997, 1173, 751, 998, 1174, 752, 999, 
       1175, 753, 1000, 1176, 754, 1001, 1177, 755, 547, 756, 1002, 1178, 757,
        1003, 1179, 758, 1004, 1180, 759, 1005, 1181, 760, 1006, 1182, 761, 
       1007, 1183, 762, 1091, 910, 763}], 
      Line3DBox[{765, 1008, 1184, 764, 1092, 911, 766, 1093, 912, 767, 1094, 
       913, 768, 1095, 914, 769, 1096, 915, 770, 1097, 916, 771, 562, 772, 
       1098, 917, 773, 1099, 918, 774, 1100, 919, 775, 1101, 920, 776, 1102, 
       921, 777, 1103, 922, 778}], 
      Line3DBox[{780, 1009, 1185, 779, 1104, 923, 781, 1105, 924, 782, 1106, 
       925, 783, 1107, 926, 784, 1108, 927, 785, 1109, 928, 786, 1010, 1186, 
       787, 577, 788, 1110, 929, 789, 1111, 930, 790, 1112, 931, 791, 1113, 
       932, 792, 1114, 933, 793}], 
      Line3DBox[{795, 1011, 1187, 794, 1012, 1188, 796, 1115, 934, 797, 1116, 
       935, 798, 1117, 936, 799, 1118, 937, 800, 1119, 938, 801, 1013, 1189, 
       802, 1014, 1190, 803, 592, 804, 1120, 939, 805, 1121, 940, 806, 1122, 
       941, 807, 1123, 942, 808}], 
      Line3DBox[{810, 1015, 1191, 809, 1016, 1192, 811, 1017, 1193, 812, 1124,
        943, 813, 1125, 944, 814, 1126, 945, 815, 1127, 946, 816, 1018, 1194, 
       817, 1019, 1195, 818, 1020, 1196, 819, 607, 820, 1128, 947, 821, 1129, 
       948, 822, 1130, 949, 823}], 
      Line3DBox[{825, 1021, 1197, 824, 1022, 1198, 826, 1023, 1199, 827, 1024,
        1200, 828, 1131, 950, 829, 1132, 951, 830, 1133, 952, 831, 1025, 1201,
        832, 1026, 1202, 833, 1027, 1203, 834, 1028, 1204, 835, 622, 836, 
       1134, 953, 837, 1135, 954, 838}], 
      Line3DBox[{840, 1029, 1205, 839, 1030, 1206, 841, 1031, 1207, 842, 1032,
        1208, 843, 1033, 1209, 844, 630, 845, 1136, 955, 846, 1034, 1210, 847,
        1035, 1211, 848, 1036, 1212, 849, 1037, 1213, 850, 1038, 1214, 851, 
       637, 852, 1137, 956, 853}], 
      Line3DBox[{867, 961, 656, 866, 1225, 1049, 865, 1224, 1048, 864, 1223, 
       1047, 863, 1222, 1046, 862, 1221, 1045, 861, 1220, 1044, 860, 645, 859,
        1219, 1043, 858, 1218, 1042, 857, 1217, 1041, 856, 1216, 1040, 855, 
       1215, 1039, 854, 655, 959, 960}]}, {
      Line3DBox[{251, 459, 1050, 252, 472, 278, 1141, 486, 292, 1146, 500, 
       306, 1153, 514, 320, 1162, 528, 334, 1173, 542, 348, 556, 1092, 362, 
       570, 1104, 376, 1188, 584, 390, 1192, 598, 404, 1198, 612, 418, 1206, 
       626, 432, 1215, 640, 446}], 
      Line3DBox[{253, 460, 1051, 254, 473, 1061, 279, 487, 293, 1147, 501, 
       307, 1154, 515, 321, 1163, 529, 335, 1174, 543, 349, 557, 1093, 363, 
       571, 1105, 377, 585, 1115, 391, 1193, 599, 405, 1199, 613, 419, 1207, 
       627, 433, 1216, 641, 447}], 
      Line3DBox[{255, 461, 1052, 256, 474, 1062, 280, 488, 1071, 294, 502, 
       308, 1155, 516, 322, 1164, 530, 336, 1175, 544, 350, 558, 1094, 364, 
       572, 1106, 378, 586, 1116, 392, 600, 1124, 406, 1200, 614, 420, 1208, 
       628, 434, 1217, 642, 448}], 
      Line3DBox[{257, 462, 1053, 258, 475, 1063, 281, 489, 1072, 295, 503, 
       1079, 309, 517, 323, 1165, 531, 337, 1176, 545, 351, 559, 1095, 365, 
       573, 1107, 379, 587, 1117, 393, 601, 1125, 407, 615, 1131, 421, 1209, 
       629, 435, 1218, 643, 449}], 
      Line3DBox[{259, 463, 1054, 260, 476, 1064, 282, 490, 1073, 296, 504, 
       1080, 310, 518, 1085, 324, 532, 338, 1177, 546, 352, 560, 1096, 366, 
       574, 1108, 380, 588, 1118, 394, 602, 1126, 408, 616, 1132, 422, 630, 
       436, 1219, 644, 450}], 
      Line3DBox[{261, 464, 1055, 262, 477, 1065, 283, 491, 1074, 297, 505, 
       1081, 311, 519, 1086, 325, 533, 1089, 339, 547, 353, 561, 1097, 367, 
       575, 1109, 381, 589, 1119, 395, 603, 1127, 409, 617, 1133, 423, 631, 
       1136, 437, 645, 451}], 
      Line3DBox[{8, 667, 23, 681, 38, 696, 53, 711, 68, 726, 83, 741, 98, 756,
        113, 771, 128, 786, 143, 801, 158, 816, 173, 831, 188, 846, 203, 860, 
       218}], Line3DBox[{263, 465, 264, 1139, 478, 284, 1142, 492, 298, 1148, 
       506, 312, 1156, 520, 326, 1166, 534, 340, 1178, 548, 354, 562, 368, 
       1186, 576, 382, 1189, 590, 396, 1194, 604, 410, 1201, 618, 424, 1210, 
       632, 438, 1220, 646, 452}], 
      Line3DBox[{265, 466, 1056, 266, 479, 285, 1143, 493, 299, 1149, 507, 
       313, 1157, 521, 327, 1167, 535, 341, 1179, 549, 355, 563, 1098, 369, 
       577, 383, 1190, 591, 397, 1195, 605, 411, 1202, 619, 425, 1211, 633, 
       439, 1221, 647, 453}], 
      Line3DBox[{267, 467, 1057, 268, 480, 1066, 286, 1144, 494, 300, 1150, 
       508, 314, 1158, 522, 328, 1168, 536, 342, 1180, 550, 356, 564, 1099, 
       370, 578, 1110, 384, 592, 398, 1196, 606, 412, 1203, 620, 426, 1212, 
       634, 440, 1222, 648, 454}], 
      Line3DBox[{269, 468, 1058, 270, 481, 1067, 287, 495, 1075, 301, 1151, 
       509, 315, 1159, 523, 329, 1169, 537, 343, 1181, 551, 357, 565, 1100, 
       371, 579, 1111, 385, 593, 1120, 399, 607, 413, 1204, 621, 427, 1213, 
       635, 441, 1223, 649, 455}], 
      Line3DBox[{271, 469, 1059, 272, 482, 1068, 288, 496, 1076, 302, 510, 
       1082, 316, 1160, 524, 330, 1170, 538, 344, 1182, 552, 358, 566, 1101, 
       372, 580, 1112, 386, 594, 1121, 400, 608, 1128, 414, 622, 428, 1214, 
       636, 442, 1224, 650, 456}], 
      Line3DBox[{273, 470, 1060, 274, 483, 1069, 289, 497, 1077, 303, 511, 
       1083, 317, 525, 1087, 331, 1171, 539, 345, 1183, 553, 359, 567, 1102, 
       373, 581, 1113, 387, 595, 1122, 401, 609, 1129, 415, 623, 1134, 429, 
       637, 443, 1225, 651, 457}], 
      Line3DBox[{275, 653, 654, 276, 484, 1070, 290, 498, 1078, 304, 512, 
       1084, 318, 526, 1088, 332, 540, 1090, 346, 554, 1091, 360, 568, 1103, 
       374, 582, 1114, 388, 596, 1123, 402, 610, 1130, 416, 624, 1135, 430, 
       638, 1137, 444, 656, 657, 658}], 
      Line3DBox[{445, 639, 655, 431, 625, 1205, 417, 611, 1197, 403, 597, 
       1191, 389, 583, 1187, 375, 569, 1185, 361, 555, 1184, 347, 541, 1172, 
       333, 527, 1161, 319, 513, 1152, 305, 499, 1145, 291, 485, 1140, 277, 
       471, 1138, 250, 458, 652, 659}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
BN5P0xP7DBl6G1Am5yzV24YITSFvTb3xnvIg+DX6rNSM8tufBr4NbIYGbHXs
jhG+F/YXUozXyejs8mIYJaMFpOg7bkzjObu7/1GESHYbOlPwSfp1DQn2vIdN
r580KDMbW5LV6ELZCda9Di1kMHgaczW4gAby7R8zolbboGHmKjNTy224e+Fk
fRP+/JvVnjcL5SiQrbn7SGpFAJRSK2ZNX+I8zyQc5nS7GTIkFB73TURDnsBY
pz4+zwUd2wrSVgNEF8xuPl5KBqclobErrRi0lzOYJEtUgtShbr7PuzJBNy3T
hGkc942j6wS913kQFL/V6cGdB7f/mndfn8NAqC1WS98lGkTT92sdECgGzt/G
chwY/pzGWw3CyxnoZZDux6fBFTCcd0OhYgLnBzXag0GjMnRT5HvewFYVLGtJ
aFHbMLh6+8QIEqpD2h4hTAq2tfBf+q9P8QUY8Hr9rbCcI6C0hsYt+uZ6SGBo
k3QOwPNRk1inV0VCohKMJ5u4muDhg51SEbcwiD7X+KTJnYrqbtYQgiQJ4BXa
THEWx0CDfDTtPl8nKv0gfNlRgwjEQ2Lj9vicG+vzt0iXO2CObbP32nIqaozi
YPBTxUDQuoY9JbQV3lXqlhxXeYfiRA6MGLnje3Tr7a2c5haQEzc8+9c5HDm8
CF2pTcTfv8mDnNWL4FfD0WYy8xOUp/jmkCEBg/+Kdzq+2VkD97OxwPtTTuCl
+6i2bxTnN6PDv1PES+DFjh8KL/aFQBY9W/gaDe/p53UWvL1SoDjaPWAmMRZ2
Gb8WjdrAIJleO8Hf/z3O0xRu/5FMwAQWF7+tYDDfObPXlLMYrYjRBk8N5oFJ
pjJ/2hQGbqlg0GBRjTSnc70DCMXwQb0pF+vC4GiKmXCIGEK8h7g8N6+WwbM3
G0o7izCgJ5nEh9m3oC+P/B2jSyvghPrIHQl/vL+/rPp67EQrqqUvtw5hqgaB
FxyHKm5gcC6k9PPp7+2IlNLO8Ph6LdyPH5hmxbmOx9XJXOttJ3CcYTv7zKQM
vTg7L0vAeRVy/7ML/EIF87scZ07uKEFzXEtV9/CcOhbyYDLlMBmkYn6o52jk
owO0ywp/cN1u6S2c+6ZNBAez2rU6xyw0WfzuxDquhyyL0wFFH+og0aHgXK9v
Koq4yu7I1o3vNfnTAVu6cmgyHOcr2B+P2goTerAfGCT0T65pKGUBwU31Yb5U
KFIuE+O1/Y1Bn3KGsxFHJPo6wjI1cOQhmNkY3fL+i0Gs1Wd6actclB8rIeMp
EQrXwlbVmFdxLg21In+KqED0ehaM23vjYfxuexvTNwwc1n4wVds0oJ5zq1iC
Typ4xNBPZ1AxOKJapqjG2YyEF65pjdlmwRH6BwEHszAQu7xH2OkLGQ3+sfT4
qJIP3GUsimXe+D5W/tu+ldKG/M8myJltF4PjiTKn7ssYDKcFV260d8Ggwusr
du/qUcPxj6XfFmjw0iT6xxHxdrAMsVuUMqtFlJxHmVzHMIgMEz2KueD+HrQo
ReCoRg7DI9mOeA8lXzOSC8toBmR1gc+2qgIVZTeEPsPz4iftFUtPXCNkaTC+
eKlfhtjf+s/Ol2NgvtiZKNhbCW870nKukYvR0ZBgJvN+DJ76hWxLzeZDqzWx
aOtjHqIIHxoOmsHggKBPwcppH3SEa/T2xscUxEOUvGD8B4P9F2zoijLS0UR1
lfS3hFi0pB16pB2fv02Y07EzdaUoOkZRvoQrBEXxMAi9/4lB3LX4SIXoWnTG
5+Xr0O9OiPXhWPviR9zn39mm1BURUOhOcrAx4xOQ/N1ruYrnZkLadkS5Pwm1
Xtde8XMIh91R5Ia5KAzCj8GeH9eo6M1wcNrmqXfAdXBjSATn4X0c94tXV7uh
+M9NOR8T3Kdvj5S+rKSBu/G9NJPbHXCIYVti+SIRtcvb3SKu0qD22KKpSVkr
BIsz+IvKEJD085Ggl3jfNCiR1NxcboFBpoabUrxNyE/7i4CRFQZnKm3onooR
gNLP79vUWo8ap933deBztm5si8iOqAEeZu9YM4datJG9N96/FO+n/cLcV0kl
0CuqQvb7V4UW1l04lfA9/VWbzW3q6QaCmJncDs4yRH+Be9IPn49hfOi6aUsC
8sasjq/xFyM5tqvLQwsYcNyMrjWrKER9Evyt1nvz0NAzlfOh0xhMNeqbnaqr
Qnu9jqQp7cxEQye+xtUMYxDzftr/T3ATirXsfFoxn4zin0198MLzNGyjrMpW
pAXtfMBbevVTNDJn0hLfnYbPOczElhfn5L8vH9s+yQ9A5x7n9WY9wXOWOcmG
tKcXrnmNfbzdRUEnDElCeg9oMDDZ2a4f2Akn718QLGknIxd6gslRnLc7KzZ/
fpylwm/+O2fqm0hIzdB3eHKFBnttArOXlciw6svi8T23BUXXKmox4T2F87WK
DHpIhEqUHJz1uhnd8f5MkDTDdWvGGMylWY/7kJhlxF0iotcd3R5/hUHej9nC
zIByEKbLMtBVIaCeR6JGnZkYdF6mXv9RGQpnJTp0RFLq0ZiQl9HZHgxSN9/M
7VcNR2OM63Vs4rVIYJK07ybOAwlXojHN+Wx0tSxamZxRhSIIuhkzuA7PT9p6
sQ+Vo5CVZWFFgQq05ObEvoyfF4fu4oFrBfUoPa8i+UZUKZrMMPMLwfkh+6Om
H1MNESXsyW2EvUXo9Zvv05/weRbG6D+0DCWjg48VMti3c5D93abRA754b+I+
VpYY2guGu1vecol1IK6K3VwcEjTg/u520jq9Cx465dpdPNmOev0WHHe60QD+
FfhE7sN7I+9u49sKbcjrS/qyegmu22QTGW83CjDGfpBPkKEi5obaYR0877rk
s1131zZDT194tolAKxLhVOIvFMTgMbmZo+l7Iwjohr1lZaQgz+DZko0rGGw7
hA43qFRBNdOrqXPfSOioRX1I730MJEJ0i81z3kHMfNau54HNaPBsb/AE7m8D
H/v5nvE/QLd8rZL09InoUqFJUQzOqxP69yUPiqShP69qsz5zE5D10Wd0M/j+
+uXUTJzGShCPSLiGfE4jOq5Udby1Cs87g+NOQ6Qa9NQ+SX9WsB41e8V3qORj
IKJIPqSpRUBbX2Svj0TUIN8tioRFLAb1Q1vX9IRI6Hhh9vLOHVVoRzBLtQXu
q8H0WduWrH1w6+o82dS8Bwmxa3bGDC5A1e6KCf7iblBsOlSk4t2Nfh1Kj5MW
oIHyyIMtTKYDHqhtrlwN7UJDpxtS7uH9cWMaTbTEtwJtjtG1JqYTid+MPv0j
hQampp1cpostMHQxILI6qgM12vRu8nyiwWfxBdMyJQI03c68nRzYjoCTPBDG
jHMgw+Hnf8Zr4Ay3ZePo/TY065fOunAK33eux7UeU2mw0s5OU5RuRTdvrwau
4XNmspoVaNZ/Ata7R50+b5GRVWk3gR3P5V6b6h0XUBxyv5k6X0Uhobr3dUcX
wzEYSxVtN2UtQA+eXNqZENyCTjxx7vSLxKCLdzVo33Al2hnQce7x5WY01HGK
pxX3JUaDt85ZyY1IIeEJs8ZOIupyZh4n4hzryVXIGp3fjJLNjWlLjxGSqbKT
jnbA+e1J4CTLiz7Q79r0oNb2oa3RhPlWrwX4wtw5op7fA59vhL+/pt+HGPIi
9vqSF+AW6UKVr0ondFFd6I5/60UNAU+puqw02Lmu7XeqigoTSuolNm69KP2R
xa7KqzQQGE18sMRPhk5SpCXLfA/SP3Q9XiWIBuc8lMreuBNhvi1UzojWjTwO
/8d9r4kG/LYSdULO9cBjSz28MtWFEsCpY3qeBkVJNIVE0xw47T5kHVHVgS7d
E38se+r/+Ug3ok59C8oD6a6fw9vRxi6DKlNc50bNnd9aU4PRxfsKBj+t2lDI
DTe1MNxniptHOcpUsxCT3jOl58epaOGiQFi2Dc7DPlRbv9kyVC3zfd+TRQpy
1LRJjMCvs1r2zywW1CEF3ryllmIy8rz6XksPf84/3aAvi3JExDP3c+66Awnt
Fcm+vqSD+4lm0truX30gX61VNFE2gAKswvw8Di5AfINU16ROL0wO9LOyGA4g
4cM9qnO2CxDJErPAodwFTsr+lx8s9KMYk7nzlKIFyPSIDrIjtQF14YXhum8/
eu+5VJ+6hN//6tCZ0yoU2Kr3KHvH2Y/4drXwMsrRYJh06at0cjPcc23itIvv
Q8knjI/+54D7jDD9jUu4D2gXP6S58/chqfXxH4kJNPC3Udz0Ly2ES1Lha7Vc
vcg0YqzkOu4nztKNPBvURDCgk729uacHZcWXT5/eg4GSpm6iqooFImcbrC9/
70KQvd7pehiDjq8cnbufpqD7xn9H99V0In5/uSAqzi0WKoL6KhvF6IGUqKTw
yw4k6HOxQkIWgxNvKn+sVVej973VdRta7UiRMe33i+N4Djok/PbeR4Ln+16X
uNS0wDWWRGKYEp4Lr9zQCDsBpoT0fJiiyeA1dMCUBeeod0F3qWcZa2DrMN2J
oy6tYFzoJzahh0GP1VF6c2oxPF46Qhep2gbDgSpDf3Qx2CFvvMG/JxnWxm7m
RO/ugMGL5TOO53E9VCXr3HK/gUrE706HUzohp/rM8ysyGGiKDTWO9aSgnrf5
xF1PusFO5qjzKAcGgwwrPI8qK1E8wVSKybwL3ANsOJR2Y3CYc0dw19tGpLz4
+ejh9W4If9fOfGCQBqz273jrMppR7XW3PbYavWBeNTA8HkeD0eeq7/ycKEj1
wvUqAfo+INvc+HL4Bg1C65lPYXztqLV1QnOuug86zjRQHuL7xZB+5fVqSRd6
cW14/I1dP9i1mg4FNCzAakwDi8xrMsz4ML4o398EUkvv2r31Mfiw7pJ7L4gI
iupRHHI/CdBCFOA44YjB71XMv2m9Dh7oBW1bUZsh3NBpXdkLg3hDNqNrfWWg
M6tLOpRKgsa1L6UPfDB49I/fXu1SJtR6du4Jf0ABrsnbed34/c84N1JvU15C
nt0/b0ZVKvA+1lo2dsJA/NA7peSMGDSwt+rPyN82uLhQ2q6C94KCX/yWL3nK
0Zaez379SSooQsLNx/ietv42U5Niq0cBkS9YsTftYP7Ze3JSAIPb5tk3E92J
yG+Y/UeYdCcEL1GUamdo8NhkQGXuEhlNvn9EL9PYBTrTk8J+eTTQJOgu/2Bq
Q9YzoRtLqj0g1V/m/9mGBrTef1kGZZ3IgyOcPdG4F7a3qnOcDtJAUYBTTVSo
FwUfOt3ezNQHAUrxgQO4v9VTs3cv/qVA1ImVntXMCtgp4uoehfO2Qnkn+8y/
ZlATfJzvb1sDWVW6myG4r0bYbFEfzTTCoOLSThfRBsi/fMd9JhrvrapHK3lQ
Jbx0kWrZnkDgej7OzRnnhFqtx6KO+/NBMTnqEoVKhCoRunerGfi+aFUlsBlE
g/3JyX7VxBbIDVRM/y8Jg79fqPz35vxRym9SkpQ9GcheAQ/5XuN8ciA5uNK6
BN0sLOZd0yEB8ddTOyO8Rz9Ra1q+86AGfYs3+yu7iwI9e/75dOHvL/hgwsDj
JAE9RQs53JWtQEwN9VLFuXf41Mw4Iy8J+e1eFXG82QZML0IpEms0KNifL/F6
rhWx9MWVHZ1vB7Fju/sO41zN7SPhF5TRgewnY4vu3++EJc0dWg3O+HVZfseR
Cz2I7f7ASvJsFzxtztIpOEwDk8ENapYDFWJMxp6O62UB8+OcqlJLPMd1bhU+
uUcC9x1aSfykQqjPEl0aDsRgNTjQw9meAAVHOJvSksvgTdFF7wCcQ66OrLLu
yauB1D2J996aVwEdohKc6nCesRHjXHpQAmzPBk2kD9YBpl/prkvCv9fLoTjI
OQX2jZ1/29LRCNI3vglx49f1iwItOUb4ETpWkmNaR4CXtCLuJpxbdgkdfcqh
mY9uaRjdSz2LIMJM49neagwenHozE0ipRDfOCWELNkRQsp35xRSD58LFDVGN
3kb03OXVHS7hFrhYJ+oXjevfo2F25NlYM1rvq7W4MYjvkfyDRInTGPjT26/q
NVJQ8NlnS75PKKCsSbPW3qIBNU3px1AAvu/6tvv891FByH6vQkQNDWS4TJZL
lbtRv1xb9Mv3beDlO01Kd6HB271HAvLb2+DHLRLpa9gTcDh41LTzJv5d9419
3D+RQawsMCLONBpWC5S7Vv0w+FQgqyw3RIRSozTxt3xpMFWyx348D4Ocu9T4
tFCct08UL5u/zYWsrpNuAhQM5KwMEqdulcNc3bXF//xKwDEslcUF52ftl06h
AQpZoHrVk8CoVgHsJgKBcRMYENepp7RL/KGG9Y1I1Eo18Jh6tL4exc+xnVc/
MDcTqQ4xvXRtqISa3i4zdvx6nILJqcNM5eg9//2frua18ILyj/4HAc9TiaEs
46P1SNrtnmMc1gAbAvFs24n4XpwPfnAyioiyLyZGzuD8dZFzUavaDYP1WwO7
R1+QkabaumzGAhHUHCjfQ5UxaLrJeLPIrA0FpIbtIsS2wOjpfhGuPzQ4Wmtj
xiLYhbwtD1dKKpBBPv988EgFDRozZab+E+qAPONrZ38rJCO7ytQruzQwaLv7
r19GuRWEGd/3vmkJR/kzndHzj3BfOnh/YUgV74kB1mQLzALFaffvH8X3et8e
0Q0nhyYo9KlcHTMNgvQbXA9NyRjM8h0ZjjxbBajtr6pMRAJcmua5xY7PrbCA
Kii1nQ/X6UTr5dUy4fHmsEbRPAYhcuzvC8ZiACxcuuYrCqDrdEYQ1yL+u0Yn
SydWk5HT11Tz5PM5kCf3r6dzCYO19PjO7+dK0FG+D1ZX0orB3u+Veu9n3J99
eHPTnWvQWLmryd5H5cDc6D/Z24zBUP/GZ0l1AlpSvrPnNFs1nKaYZwrhc576
ZGK28ywJPVeUF3gcWQdMhZjaMWc8f1ntn5aJUBGNY73rN2MTfOYn87vKY3DB
YMP85moH+je/vZevlAAq/ddafZZooPpQgrPVAe+JdSyjtrKlyP0Mp22uEAYP
WUMDlUKpcDz99O7G6/now4yb5KIpzre7tYCaRAIR9e0Tm+IZ6JpDvV9iKAai
Sx7fXiUQYDib+HauLh79nbF8JVaDAYWsyhPCUwvnrb2/xW/6IXMuowU+vP9q
bH1puzBRAsdqp3aOzbiCjP6fpyI0DKTdiChSLhXMfSU7Z8kRwHNc349uE+/F
lzV8gp5FoYbC5LXBppfQZ3RUe3Mb16dVzMxQTx46AW8UOFEc3mPlT5njc+76
teHyM60SaazEbQy0pEPZM8P3YWMYpLhoTmu0NSIJ1/fWPjz58COUfqgH74ka
DMeOjsw2o+fP749OipeCTOjNsUc4t5/uGS1G4xS0/9fP8yfKK2B0wb5u1QKD
pRDB6+ca29GSigUnRboG1i+yGvaLYXBESkrCMrMLnH3beaI86lC2/ud6Ubxf
v5kqHTkz1AbRakpXfzNXI8F3Q1fuKGBg9oVw/vUSGU5L0lV3h5Qj5wFm0l1X
DLakMw8e2yTCq2rr6z6rxUgx+tZa3nsM7LPFNTwn64GpJqn6cWUO4tdgGM7G
deuRy1xlW1UOxpIW6uvmqeiEkh/T8iQGT7fp7GZpWWBQUjxa+zMSzb7AaMpr
GOSrma9I/fFFjWYK7P+GEhE2+IrBbQsD3c93f/7gzkS2gnKGjaMh6FGJl67O
Oj5Ph4f7VLvKkCaJLq2b+RpUHxa4/nkWv77PNW77Xx2KveuUNBMbBucrkh5d
78Og5MG1lvg3RLRz3+uaOp/30LS3R+5XEQY3T+aXT4WQ0dWU8OoQ3yyYV7De
sfclBqP6tKyEx21IMj5SSTarEGa4l1JkcQ480nW+1LS/G158HqS0thGR40ue
2j2NNPh4/sqjg/s6IJRmE3dTlIAmrwvfrN6B+89nPYZhlVZYpn91enOqAa0d
njDOw/1BdGK7Qf5aCzRekZCvdqlFe513MVzAuch1m03mTEoTcC2aubycrEQz
mOnXVTy/dGojvPNeVoFfPTVC52IZ+k5Ui77QgcHOsR1+AckF4HWkp/KFaiFq
0jt9rmMKg+9Ka4VMe23Ar492XXGsBCWaGT2VxfVc2qvv4JX+HpnZXpIV0s5D
83qJ9/xwf+BTJyw3jRcjj/blNInBNFSoNj0XPofvaep7gxjJGrT/wI+wsfoY
NC9cUWn3Cf9d2/LMfAkCYsqes9B89AzVTy0GKTVhkF0baWF7goSSyKVfxN56
w0tB6+hr8fge3X1xxl+Miih1rpX7n0bDb3kvJW487z5lT9K2sR74GJpNGVWj
IBhSk2F4SoM5K7+339U6QXm8eFW8kIRo5/eWxLfSQA99PR3mSYUohkaGw6wt
6L/vH6+usuD54qhy3iSeBHMhcl1Ft4koSLPqP7dLGM5j8vobmQTg7de6t6aD
kMGjp9xuTzHo/09IZE2jFryjl2fiKfXIUE1DxCkbz51cHRFngVJYupLz9rhs
DaJINmTQqPh3jVhp1n0Pgdtf6Tmc3eoQ+VeAnvsABhLMXVKefJGIzK51MIxY
hdZSFKtEcH8+JJ/l7LI/Dzn+vMsoyFKO1BXVZ1Lx64qRG+Y3LlciV2c6+8Dk
IpRwZy/73CA+Z+kc7LRXIzK/MMprLZ6N4rX2Pz5AxP2TeUY/v60ZDZ48n3jZ
Jhl19W5TLdPxfrFs3K1BpSAn6Vt03yPD0d+WDqND+He9YjON/+bTCwOTnNYn
E9vRe9E75EG83/3ztFqZvdMF4mbDiaRDbejAnLwr0ZcGCc6B4m3ZbdBXz6Iz
8LoVHT7xTWS9nQbn5b7Qng+RYXHro92hX2Rk+5mk382K86rbomrwIhGWXuxn
D9IiIY5f/CNpWhjQV+Vcd1msB+ZxtwbFt82ot38U+/oYA68vlHiDL+XgIF/F
5tRHQLXsf7/sScG5q0DlWLBmPBwTEWA0WSKiBWsBCCvA/S1J3WDC3QeV7bpg
9l2YgBrOJgc54roSsbVnfKiTgdZtnszXxeN7ZFAfeBbnjZ0vGGl5VmUoi9q5
j+t7DbrQVXKT1oJz8rCelmRMHWrQo/nfk6hEI9dOD/nhPFbRoVV/yYyIvC+q
E4IcS9EVl0k/sVQMvl2LNj5vSUaNN5uGWM3y0Rma+BMWX7y3ztZlVG3jvUus
YejZcDdiYVHiM/q8AGQZKYY8t27I5p0eDHfuQgetTzj9PUmDxIte1/qp7fA7
w3dJerED8cl93OX9nAZHrpDMW/a0QlrRMZdxu3akayiyfBjXs9GTUwLVci2w
tkSzuNVNRc5cSt/UduF8aCDA/up1E7BVJF4PkWhFRkspyxfP4bnglc6UGFEF
kS9iHf0fkdHFxN6HmfgekenoKRlKaRDLJjz+NQ7vhek9BRxPMJDpL9fi1nYF
xFJ2980ACYmc7GClRuC8Oia9Yr87CcWMZhY+Y2xBNGFF0Sp8DiEb1lVHlorQ
E8ujpdayRDQzZCNTjPvPeP+ic1J+NboelPZlLb8J8W34Kmbg9zdyhrl96ENI
r+8I+4lfdUip7FNkGv78nirxcIGlFvTRtKaFX64atRt7BA/g/laRr5np/LAP
dtzQZXrp1Yd+Bsj1WPktwA7+H8sjbj1AT+DkONfdi34fMBc7MbYAVbc29aRH
O2DJL+LLV75e1L1+653xcbx/BdbwuEhTYapik+8M6kaL2s5w0pMG2z42enG2
JBC0NyuwVO5CK6UklX0NNNg1fWpqRxABvB0rmGl4/7ArunLj1joNLp6X/1R3
shYMmWssmxna0WVSYJa7NK7zI2vle8qy4XyWDiSJd6DPTXFd787iOWjUqKHB
HQrFO/ob+13aUOHKiT29OIcYbXkpNIS8RRy+jo8N81pRsoXPVog7Br82rnDR
CeUi85NNZ3LHyaiEsb3s7X8Y/PcyQ4evsQJ9FGS89ZSJhCJMpUOa8D6YHfiT
IXWyAfHTgcjrE81ozpdDj8UTw3XVtuX/tBkxfXaNzdInoEiJisev7TDo++fF
w/6tD5JYQx90PxxAuZYOPZOiC1C4S1TrpGwvaGhkXH0+2I9mPdnRGZ8FSBHl
3gyZ6ITJJ1V6k1L96OcZoZrH/QvAc+j0yb/qbXCe7WPZTu8+FCRmewATooFL
+znk+ZoMJ7mO9XI296JcuYfff9vjfhIaOL+XQIQ446vtWvS9SCemWIaWS4OA
wcF2z6Z6+OqnWbPl3o1CB4LCFL/h5/XFSInAWgjikxXyprE9SDvYp28V5xBJ
7fkrz/jewcUMwtbZhS5kQ7mUq8iHgbr1Dl2dZk/kWOs8nKrYiRSEDpTeVsTA
6oIzb7FROiro0vz582E7KuS90it0GeftBtlJwe5SFPJaVSwtl4oKktytLhng
fHvv8rEXtFr0Lluix+EjBR1a2t9Zp4/nYNKuszvWmqHuw4iMzYlW+Fg04xbJ
j/OkUMWh5eheZMNQ2fKTdQBG5mZt6e7iOtz3/UjquV5keK5TPSKkD44cJPRi
RQtQIbz9Szi8D7zJV77d3OhDq9dvVLG5LoCUsoFUCgMR1QmX/rbbJqEU+F5z
7yIGKmTSh/F2hF61P/NZdaei/bej6t5J4Hk0NNJLdUSorvdo6cOdbejK2kb0
qDAGRSOZqXPkZuA7dPHIxeZWCHL8+s7zAO6fgjIvAgNbwGvYOdx0ugWkv15+
qKCCwZnV8WtFY62gPvGG85FzMwhPdMm84cXAdo/lULxOE6wWz9xMuE2G7bU1
63R8PoJ/Wwbz3CtB9MRuv+u9FPBcoOhG4H2/O2bXpObBXPh+O6/27xkq8Ewy
T47gvVvL/PO+10JvIGffwIJoUht0sroLPjLB4A1dVfDEahRapaP77rzaDvvn
JOP+w3Phr0fusohgAaLLvVCZpNEJnA5cMcckMfCWMacVtlWhu6e5pDNfdsF7
6Tdqg/T4+0z8sq+zRijLNrg2obobLqh8HZnvpYEBscJU5GcLarILmaWM94DL
LEnrbwwNrP8qf9Rlo6LM/bKSXU964a3a6N/M6zSoCHPKcebpRHcmTweb/uuF
hMIuQjgzDdjfWyFvul4UqFO3x+NpH7AEKAg8ql2A+KovY3/6SeAhq2ZKTUXQ
LXzj3xlDXA8jf7TTRdsgu8e/f6ugAfr5ub16pfAc55A5PnCPAK4Fz61VLhNh
X8vcrcf3cH/4ladcu7MGXDkKZ341NgPD/uzC4zhPomaBf3tli0DNM9TL4zgJ
mOdU+kRD8Odv8ghMRMQBxNBGNWPIwP/hneKFQAwIJbevHrLwR3F+b8lLaxSo
nvpYFYX7eX7TpcE9VtnohL2roIQuFbYXdl9Ss8LgwH7LdWffCjRX7KpX/q4N
MnV2J4QDfl6sLI1dpxrRJ8ESncDRdpB5nlczvxeDhTAl3qyvzShxwvIUmaMT
Ggzfkj6M0UCn2Xbqy95WZHCK/kWFYhcMhysc+JZEg6X/KB9mj3UguSeGOV3X
umHxX+N04w0a/HEn6tAf7UHNHXFmFbd64PR/k4h/Dw1mmn+0Or/A/f3ye/0E
qV44a2aw2FS2AC5/T5t+PkiBE5yFVYesqsGmMem/s/j7Ry83OmvatcNlVu4Y
wv0K8L+0m0UQ7yM3fR6oMtQSIb34fZeYfh00/g2/pumHweEDgz2x0XWg+0hF
pPVsI2xcy/LtTcJAbL+26NnMUijJfWb+i5MAZSYOrJH//z9RYeWY2PVUeOSW
dqbIhwi1UkWGVjj/W3qadsRkXEfSyUHpAj+awbdp6K0Cnnekkw2ppNA0ZO94
2mpIkwSNn91FxPH+NRie9kpFqgztO8+fGpRIhqYq6SJXDwywF/PMt1brkP6m
4druWQrQJ+jKOVzFQOCk8DVCNxGRq4OP6RyjQuVbZcHXhzBwOag5wsZOQT2C
8ZEed9qgDE0W2n2hQZXkdJ6MQjsiCk0tDwa0Q/bTtujERLwXL/f5Sah3I3K3
y/RkWgeMkjy9v+rRIFctfbH2QB/6wW2wdb6kEyI9N1RXthfgdxHdj30mrRC5
9Wf/tHQRrOVI7uaxxzlBw2syNqUDmn+a2FZa5EBV7EMdG3zO0v1nlxW3m+HA
U97MrX+lwBxHcP8UjnMskxLnTuFGSOuOENqcrYBgnnWR08UYRN7svhYoVwE7
H0fK3uqrhslPV18NNmMQIPx4hNcmC0Zup/rtLK8DsencVne8p7Tanxo1vesL
mePfXeZCGmEzrnJtBefqD+x/NAv1E9B9scSHIdIE+F8dZx5NVfu+8TSQomRq
UhKaS1EqqrtM0aSEJFGSQkQZIiEZi2Qqc+aMmefhxjkOxzykkKkolZwdmQu/
513ru9ZvrXet99+9tm3v57mf6/pcz773sV4c9/5mETlfNdnjhG8aOvQcnOx5
Vg7uBdLxrGiSH9e6s97E5+OFkSSBuM8VcF76TFYn8U2P4MjRscwytOg9pZYt
QQfHoJg+f6Jv3q+enJSep6OmBnxaeq8SLnn0y78m4180361ou5+JltEXaFUJ
DAg2z+QJ/siC8lz3GE/Vety2u9zkeGsVGKSPc+31Z8EzW5vslvgm9PvQOPfz
VzVsjlKp2yTPAplqo1I3v2rwWtZvPSgYCl7KOoK5BhREK3K+fNlSB0NZWscX
3vQBixPa1GvCFalsG/dqHKFDIO1xfPvpGDhW03JDkNQV12OXN6VvELoDArKq
+RNhZW614CHCq7ynrpVlFebCnRb3RI2+t7Bkm1BaahMF3AEeYtOWyeDNhfxS
6pmwnP/F3W29FPzppS9JLPeDGsdb2sZSOVBAT5+0I7n7Z8B1Te7bvmh+/dCv
qmX5AArStSGdJH9tkXoUkZuEtS/urL36oRCSqMupkVVEhzUlW/aeysXTZ/z5
DV6WgOAfgZqqRKI/hWNeFRsQOUG2LH5zGURxmxWZEE6eTHQQ/qfvWizEsPqL
eTlUn3J5tkSVzG8kh5no9mr0fUupD2dXwMU75v1b+Yj+a7Jp66jV4d6+3wH9
wzRYf3R7lF0DC3TWWmtXSDRhoFX6zjXrK6FjOIYvl+QUrlehrw7QmWA37Xk2
0PcBZt393rdVi+Rl7Sd31f7Ug9yo+DFTJV/83F4fN0j4QeDXiOwZK7I+731I
UYi0hE3v7cfGid6KrPVcd4q3HJbVlWy1C3gBrtI+IkU5FATVv13seqwADPiL
4l4JhEFs8+ziGZLLToiJZu05kQ6ZD+T4GxpjQM+k96nadwqOzuo6iX8IAz0R
ri2S/omwccktXtdRUp9e3Do10Y9w/lmAX+e5NKjZOuVj+YuC9KrhJ8dr4lCs
bExUzyETDDlXPd3aT0H9Oc320E9Z6Jl/dI3L6RxYfOByX1UNBVaRHaIPGMWo
9ldcbx1XPjRvDLkWRfKpZ19qoktlBT7XDlz6sqQQDNWsTggTX1gCWkdi+KrQ
j720OflqCQjf251SLUeBlsi3L2MqtViYlax3+QfCItsVXkcWUrAvs+KWws1G
nKq+fGl8bzlw+H34tKuABT5XuM5JDtdAygExhf0RMVgAQVs9yXVkIu77jq1t
hE86qruBIxF7DDz8DBdQwCdm0bLuDQNmHqnmRkqG4VNQPuP5kPjjwpSfkqcr
4LSYy7WEmReosM7/Ey2JAuXdlhvqCouAErZ1KHlojd6tSuMpjRRIftitzKJl
AmTXs2lr2EDKY36+d/+M80JVx1yrGAiva39noOkLVYEn+wenSH6hUz+7hG/C
kIxW76b2MBgINujJ/0u4ne/PY6GmSFwlcVV819ZYCDRx+C4zTvz3t01ggVkG
au84n+f0PhECPuwrcyXrwjhY2irheiGeHXq75KhlGrjCUfF3dMJXVg3dv0PL
cfmaLH3zR5kwo3V/8HEYWacVnZLPxipxv1DU8mTJHGD35e9aakxBRL9lC126
BiUvlCo/+ZAH0ZcN5//upqD2Est3v14DhraxeYwbFcLQDslJju8sODivelpd
pB5+x7yDvyKF+CDguYXALAvunpm3ZYY0gVHehozVcWT+j9TWSmWyIJknJlVs
pBoSuz4lrXuWh3seSij6EX9/MtD9Y2MCHX6n7pM7+jkb6S73N4+RvCD/ztC1
QaUM9v8e2W23PROv1qeufZVAgY3eDhGV7DxomOPZfIXxFtOczkqz6inYm8Ae
EGWVCm56bzo/iSai7Q2vNvdvFOQEMiPFyl9Cr8OuaWGLGLzZdfnsKjL+uycz
Dv1e8QyTN/c4Dd8KxcVb9JMuk/HPHbJxWTuQgNHr9sTWM31wnue21kUy/lxP
8FGGdQ46zC499zDQAtWZG4L5Sf2f2n1w1tqwFF24Blj2O+xBfXVQ+ftKCqZ9
jn89FEbDVOpnrKmeHzzpOXF6jPh7mWHfU/HRKhTyHGYtfh4OMzdD2r+Q/Bt+
zFRWcl8dlo5qugoqxcJpuwW6x/aSeT9kbTGyowGcZJbznecpxz9uN2mT9SzA
tcURcWuaQWxloKarfAVG7I2YP+XIAtEFJzYEcdTAcbNM5ckYRFXzhcOJ/EQf
IOKQSE0leLeaPnTnLcFm9YChWOIvUZX+ap+tysH7cvv7NWaFmLnfpVzWnQLF
zqXcBzcUgrKxe01Zfh4WX9T41JZBwfFMo3vv9maApm/QyMexbMwQqi7+3Uzy
Xbja017dSOCW5hRdIp6JzV2fKyUHKcjSFLaMyTVB89V8Y3xBbzGGb1/c+RHi
L9E9jyU6Y/Cy+4YnhR0JKOM/YbGb6EznOqG4LeOZGFX06+1KgRic3hJbVUfG
2XzXjOn9n0XYZjj/VT8yBKcVFOM16sg8HtSsGTGoQLMlabNvFJ5jpP288Cqy
Tt+WcQabVTDw3OFVK3i6TTFDuf/7LZJbRyuG5nOX1WJ1uftL580OEHqJd6qH
cD7PiuuN7NsJ/zmxuYyRvJP1tkJF/BULnGJn+E6RfCTacOdRnQgDaz/uYwgq
siABxocD+WphMNA++ns9DWVnj7glfGLBTNxO+++fGXAuNWbBUb8KnGnM8OgV
pUBq+pLfxpAKYF+r4pR4uhy3xGmeF7xKwfYUtQ9OtsWgdVEvcMsEYtDhrqQk
LwoYszcs7MKzoKCMc2K5fAmG2vIN8GRSsOiLkPeVC3EwH/M0S9+pEEdfl3G2
k3E4Vykft0TODg6nPr/FTM9D4eParqldFGQuKzqsEhqOXyY5+1Z9yMYQ7a5W
vU//7EtHmieYpeO3b/xHpSYy0GtpokQf8dOm5ujsIaMCdIjdKmO1+S0qsip4
5Jkkf32+KJWxtRxTnlYIWWsm4P5wyg5TKGC7xDW58Vklbvulx/eQ8OZ4rJ14
KuFbtuT1Bzd/ZGKxpUkjIzIYT6YeDn2sTkGfpEVPOHcTSKQcSjD+UI0rF8a1
r7tM6nb+yq5QthbI27U+h2eIiTpOybyrF7Pg5+CqBbH8dZDhtVLkTW4VTim3
LWJ/wwKOpLjPXSNVoLqjOXSXJwPdVo/ICAyzwBkXuTBzaHB7Q3vGM9VKFPrQ
5uqzg/hgm3uRXVUp6J1/3+S4jI58b8L4a3UpuPOqVu3rXA5wdQpEsQor8Fly
7NQ+TwrSXmpXz0klAVv3qbkv18vx8TZtfyXCD/J8E+Xsbi+gUlfsYdCCMnz2
ucr+TSkFse6hJjmu/lh0S2A+fW8JfhW1f8NLxq3qUfmG9ppkXGmwUV1MoxBl
uva+uEW4UY8W3sr1KRejw8pueVjkYesLa42EYqJXD9v2cdQi0o/yqf3yyEY9
i61x03EUxB0eipA6S0f2FMs4y4gMRKrbKcqFgk3XgkN1YqpRZ96vTck4FaOW
zw0vJnk2vy/kUZJTE/xYduvkg5A6bHnEHq3Hz4LGpQtKn91pgQMTPrzK4fX4
N+vblXfFwyD24uPpm8vq4ZnUDhumZy2WlIrEKd1kQXBG50v7iWqYOM+z/4FJ
DU6zBlwr37Lg9YC7pXw1HYyVpxN+ABMPNe+7uOkXC/xWW2KrcxmwfVS7lslR
ja436Ylvtv3zfp8+o38xH5Iqvd570Rh4yk/hesklCq5e2889vzANor99TtW3
rEQ5mZIVHfbkuYwD6d7XQ0DYqd1YcT0dB4ZdNnm9osDHbPXQoylnzPqYmGtS
UIFZE8ZaroQr0pYvDlLNi0fz9ttHd50vRye+CTN/Up+i4pf28ahnY6QxTwqr
HLFF80VOPMlHUgce7V8IJbjV64zF685iZPOqCWsOpMDho5hyIScN8xYO7HUd
LkAb+zkBZcInzDMF+wwMqvCFhQwbzubiFe2ozquknmuOPy8KHm6Ct8y0Oy83
N2HxdL2XM3MYVmkVHRVqbgFTvXXZWqFNWOA3zNN9dxjmV4YoBo/Vw/WyhkoJ
xUZ0MPl+eEqIBaEHettv/mICXefH1QbpBhQ799r0oREL5u66BnA0V8KQrtB6
xXX16M4+LqJKxr+p93bj1eByOKQaa/WHqsXozym6ZT9YIHC9UPlWcCG49pk/
dc0nfj5qXbVjI+G065dLTLszILdYwD7WkoncN7WEZk9SoND6UziFOxpqKjtu
KYpXoxKr6H7JLQpMqixDCvcdg1U7Jzsdahlot2bJGBfRzwedYtICb6LwwMdt
tV63K5HVkNuWRPziM+/LEcnKDDRTfbyndpaGY9ZWjtbkuLPhXQe/1EL8YUw3
TPOqwJWNv4PNyfwqy9Tcqi8vx41GNswywXLMs1+9rMiQAsulhsnKwgw03WEk
IyKLyHW+sPkV0Wcm+9PTRurNUCZf6jTyoxmXZKx8udp2GCS6vhSta20AgyUl
6Hy/GXUaft1IaxiG4UJwvtBL8ud5N/HAsSakO6rH1GxggXzzGqmURgbc69Bv
lzRrwmTplqkUUudMpYcxjfEVQLn41Y6XNaL5oeriqDgWLPB2fhHcWAzdTVs3
Kr5qwEz/fO0F3SxwyFyyQ2pXNpQf+sD5U68eaSZbi/cupwBU1imueR8P3/5c
+pW+vg5T3g0+TZMg3L7f5HVXtAvMv8vsdqutwTZJaT7eUxS831jV03gkGBuR
O+WpORO7ZfOfc2pTEOp6PEvb9C1Ghk8kzS2vxorbI/E39ShQ4bgoMbsmH88N
NfxUeM3AG2UtHILk/BOOtt98rMuQv9PLsn1nJboVL/u+g1y//P3k12VtdOxM
z8uPyKLhVcXQvS3kfoTH/m78dgPhDwoM/pWohPFjC2fOnqdA7PTywpVeuVD3
pu9ldDQD1g20/HxGdPLiosmWRarJwN8d6X97RTUIabm7bdEnehVmPb991g8a
K1qevrdggk70DIP3CgVbb7gsX/b8Bd76E7/ueW0NaN7aqmSoQubd81DpMJWI
JkXNzhfW1YFsp6aD5j+caSyx6cPFUvx8sWxLrV8D5HMu+WP9gQUKXo5n6m/S
cP9DyeTWwkZ4N1gRHB7Bgh1n372YflqF3/frSysbNwHVuUxG6SrJv1PZ8uYv
a3F4k9LdBqoJHkYYT64nurc5gWkQ4dqI/rI3TvaZNkN7Sv7pNtowtKUPG2xP
bsbZqfVNjwaaQdzbLkTCdBjuLkjNOCdbCL6bjvccul4BVi/fq3iQnL53xt+6
9EIGVPgatVi00IDjyN2Tu59SwG95f5N7aSQcPPOMV/1oJahaHjwzS3xkep9B
xfmr+ugUKNVqFMmALEGl4SkHsr4elM0fnYzGi7lhLZozVaC489FyOSMKFvZ4
N+e0lONdeeXp4MpaqPO9mSkwxIJT5tnXUzgZ+M0tYc36X3Ww4rSJmyLRAVpa
Tt++bTXIwWS728P1T//vUPBqohv54de5THY24NOoZRn26xuBatwTCkRnwlZv
+2m9tBnbLryv7SI+fMnIf/3D6mFYEXLE2ncuG2JbT/qxcyOEce6wziO6mrFA
oa2DKwESvC8U+U2UAVeiyo+It0S3z+zqsTjlAek+q/x7r1XA8ZEfmp6Eu/5a
dKxqKHmFMWkhvBM0GuiPbTF/EkpB4X2JlX22dMzna/MUpaph6Kbh1MNJFkj4
KK3RSqrGyTLL1nChGhivzChvy2UBCBm3F5TVYUH2AaefR2ohuKVow4wpC9im
xy5sv9qE144EicWq1sHOxefPxpJ1rbnfftf362ngqJykcli+AFZ/XqzmSXx2
LXf1c/HcEKD7v7YKFymGUfknMYG1FBwM899yL9cZnU6MZOaNl4KhloeoO42C
LW0LvV9tqMLZ4RlZuVUMuJBzl8v3LwtOrE215lSqxXOtUfqSclUgXO4ZfTSf
Bf5mM2Mdao2oTrvh8MywGjbLs2cOmJB5UTS5+zU5FmbFur1qbmeBW89Abz7h
rpP0v8d5ky1BU7Z51XqlXJjkH9n0ro+CDc5rBFcUM9Fz8lXSp9006F6YlHxq
hgUjT003LfxYj+pf2TaV6tNB7oCQqx3JU/abPgq00/1hlb7b5euLkqF85ev8
lb8Jx0pzODperMMahzs/ppTKIHe7iUIq8eXf/+qvmP5ff4UV/pz2esAEk0uZ
G5r78nCHUv6TgoMU2A5euPdAshJ+KJvcaDqcg3s7eKRU7lGQvaLYJOp9GSxv
q3R57ZyJN55IKe2OoWCA4xKrozkfUgMKZbY8TMPAq8ci2wj/bApwPaWfmwZC
A3aT9p2JaPe393fdFwp6EkJvH1EJBU/7NqfmbbG4UJPPpXiCgomDUo/DI+OR
oRefvUTdF6+IaJu0kOOraBrPezWz0cCrkeuwsg3O1po4T5HrvO2Qks1XKcHn
b6w8j7pbw+iyorOCNRSUrrpHZ62kIXTxVXX8eQEXr75Xcib3qU+7PWRxuwrz
w145UXvDIM46yyGDPJeZi+CIZ1ItMjzdUCc0BhzE83ukDlH/2Rdh1d0w8+Mj
A3wD9SbeF5XgZP7vkN/y/7wva1Lh964AseMrDR3XF+GZ6Q+nxwk/cEm/MrdS
L4YFXdGQYpSP19i8ZDeSPBt3yfJMrVkWBOnUmicl5OCfY1ObvpH7r9dZOZ7d
Hwt/vxcxOT5m4mG2Ito3kvfN4y41BGalI3ulxLKzrrE4Wejl+pvkrHtR164N
pBXgYALfqhePwtHnwebao60UBDdwLzh9qhwL5ORcz077opZ0+0RsFgVLDjAO
WKdU4uaiA2dDt9ih3MjLtU+JXnFt//LtxgwTffc7RDmtuQ+vz9tammhQoPq/
voXAf/UtyAc8WuV4iA7y6KhxnFmOiyxLjWOVKQiwnT45QkcY7DyRstC+DN04
12QNPaQgdcbisddYLkyXHa6inSrF/jflutKEb5vbqlr28qTAbatrKxZ5F2HU
oZyupXQKDDg2Hz7ElYua75cFhW1Jx/W5n133kLw5nLHyV89MKbKtmE4fcEzC
6qSlwUX5JIcO3j66epCGMb3D365nx+K804bGAMJ1kn3xPO3HqvFS80tL9U/h
2Pz+Qa/Ybeo/+wREJb5krn5RDvr6Wt/10unYKrWzq0KR3P/CvefYjQrBJfHz
4xjiS91mvtt3WlEwf9+f97JvBvx5rMf3iacCW2X2M+xDiJ5IevL4aBbhQw62
1nd/c1D9lfitHJLjMpP3s21dV4EuJRFSe3mzcIXJc/XklxR8lH249JUtA4WP
FDyV2ZqOBuzvBsXNKVD/33v2yX+9Zx9t7otexyyBmC8eeNq3CivtbspryBJf
Hvfn2LMsB/Y0nYh6rczAXN91FysIXz3ipwv4nixDecegsbvlRdj3qIaHSfLm
ipNnbO6n0HFL0nTXhZZ87PRUeaFuSvKa3NWTtnfzgc9q7yF+4xpMOvdA1mI7
4Rl+o0qtjgrMSzN+YJBfhrcXf5/LI3wi9D5EYUKtCty/2WxRCasAnpTx9jOE
P5ULis4sHmzGG8Y89xxHm8Fwe6zyAv1hyNNTYF823gIdlm2hy861YEzF7pGL
24eBde/2wF2JVnglmD2qcaUFN7Atdnu7YRgiIq5+mFSh474jag/W9ZPx32xU
liRFwZf9Ob5dg5Xwk37gVld/KfjszDLRJ/yTbC238/uFTBS3SDLuVmGCK/Nk
+TrCIUdHlw1O5VZB+oSqyEWiwzMSeQ+fq1HQusr64fOrNPAIkXS0ky6AY3tK
42/bEr4dkGtVzknF7q6ihgcbSb18ZhYWPaYAzcLYldLycL9crpr0XQa8UuR4
5URy/cb/9Rs/+le/8cqFpROODkwIuvVISOR4Moz8tutZTLjrDe/CcrVdlVBf
tXvxd490sNleeaee8PbCcP/eyqoy2DF/ck/F/SxQCg35cDuK+MgDObGrcfE4
UhZsd66nDOyuJwvapFNw4aHmoroj2biGL+TYh8MVMHNp0ZVIPwq65OyaNbhK
8DDHaemDXjToOheyTdf4v/t1d4fKJb4ivhshI/xTb9AfTB9m/2mQo2Dp3i2i
9b8ZcD/AYHCt9mv46q2pcsGGnE97vub0ywqYvyHvFn4vDlTFG1hfyX0uKj8w
KHq+GD5obKAHH0uGR/bVozwVJK85u8t6jEcge45vw811BfD4eVd8+TsKxqVX
c9Hz0/G19px71+cikDjzXORNCQXn7DUVLkQUoOk+oU/0sFLwN0nXqyNcESrf
ZpMkWY7V6jpOLdFlULpS6VnQXQom/9cfq/Sv/thLstZ/XKg6uDgqbL1hgzcu
Ov7cQXAnBRGqH4pEM6thpYSIlsq0MS7g8ArkJOvFyD/MqvMqHXjY8u02fnKE
88lJmvokhxbKfM7++ZNwEn3blhWm/rCFy47yKSX++26d+/EFeZBhN9lc8jsC
3roemln/kYIxh4uK9rYvMHLUXzZENx04H1TI7mJRsHlXYdqqs0mof/b2pkGp
LLi5vHE9Xw/hwyvQ0b8hF7v0fvqnz+XAI6W3MxNk3ARczlXc+FOK4ifErKA4
H5qFrTp3hhP+3/hB/MRHGvo0e3sJGBfBJpGOq2Km/92/+pZHzyw7sAF8tzzk
bNNLwKadL3+KchK9rT0YFnazBuYe5436jkbjr5kHl3f9s44afwSFCBG/M63b
O94aggP7wrP/kvpvOfi+8nhpOTTeMBh23umD92w0HcfSKPAzcxrnCi+EZJ+4
/svvzHEmoW/mKfEj+cCd2eYxGSAq8rBmdtkjuJnLNLz4k4JtI3NronR18SON
4SmqHAEJEicP3PpLOHNCw8yKLwbNN8t4JPfEQmLUZaYj4RzNO/tUbz/PxAVC
tovLvJJg32slK8NeCg6E8wtIORQhw17wjBx/OoxosylplxEO3K47v35bBQat
VXI88T4Tzi/KXlhE9PYHY+aZgAMDG7ZWHerwzIHCGLOl7Df+v+/U5F99pxvz
Wo1vSjTCy3OcjluvlWNDQ2vvSCELxrOPvY++Yw3bv+ffebYoHY8Zqd1soyho
s+hV6FZvgju6nQGOdytRypkWLGBLONYr5azy6zoYOnDnRLk8HQ8mTve5M1jA
J8j1PE4kAJbP2deqleejdr/Cm8XtFPSLcNZkLn6BElMpx679yMH8D6PJQ4Qb
FW7rJTRwNsMzvkcxvTeZuOyOeAFIsGBw5stScaEG2C//Z6vp6WrcOXjv4jsn
FuTeKM45xFED6z/bBC8Uq8ItxnMbWTUssDg8tHSffBTcfi9mezSrDD3fCTue
zCG5ptgz3fjMJdxmELNzILQUI/qOXTtcScHiYvP1LrRo7MuRcGfQi/C+om/l
JsItd17KvTqe2wzfNfPPlh2vRy2Hn647e4ahMnef8E+PRigRfrXF51Ad9r/l
9VGXYgHv/nj9X261ELbL2cpzcy1+ujH3zucxC7Tk2COGb1eRcZtb9WeOiTk8
AZ/XV7Pg+diTXNWrCSBrOSehNk7HG6rLo5Z6kPUIhQdCpz3hrwz/EbsgGn7I
eaxDjyBcwWjwK/n5EtVaW711pSpwz2nLd2kkp2j17py1MUvFau+0Q9erytBg
SlkoPpnU/9VT2zi0W8D7wZqZRY5NGOfQIB/qNgyhVj+jPe41gXHVuR8Gi5vw
2Ljw7RryXHZcf+m/J+rgvpXw+pVLGlHiirt28F4WnI/3mq8fqgaZr2yR46P1
2M8jYq70kAX04WeuOxh0kL34/Qa9pQ7VxD0yBUtZsEh0x0s1rTT4tCJaYqko
E7mzPM41El+QL10ucu5EKBRm+e0qbKpCOBV2gM2M6Oflreu+dTphkBn7yzOW
DLzWIXAgzYnwoUtjFG19PLKF3whbvLISm3/vPxNJxkemmtJeOpeFgr9O/VWM
piG35R2OYtd/vl8Ykdi4phlGrprWrO5uxp6OnWKzT4ah03W5SK5mAzSMCe/P
MGhGC7/lf5vbh+HTXBq/nl4NSDiImdUMNKHRSuM23q0seGQgf9ruDAOeGV8Q
Nif5rCmhm2uxGQty0hZvLtxUAf78Ues9whuxv+jK4dEUFkz6xY/OCWbB75xC
Ru+heuTstNkqy0PBPpbNO+e4WDgs8erAzGgt3tt2INCR6JUcdux6EGkDUu4i
xQpRNUj/IXUr7AwFt7gDNvUnhuNXic+2nxSY+FhQwlLpCgX+vW276BfSUbv7
itnq3ipk6z0nd4HwSUT8QDlDsgADLvCHnbFgoMADG7t0LaKrKb/t/Y6Vwb2J
t9RVtkrwXKz0t/osBQ+5Y+RNafnwVqU5K0aJAUu7P2+cIdefSixWTZlLhydv
XwW1uVVBy3BZPJc+8a+P6pzHjaJBn/Nn9HxZNfx6VeDym/zfULPjwnszrCF8
vdEi2TEmyDx765FFuJrl3nCk81owKtw5sTRDuBbaSk0Vb5AcsWOe//Dz4yUo
XZC/7smdBuBOdvf9082CoNMfL5tcqsBj5/9wuFs0gpRFQlZJKgsSzj9pmJit
RNPDra4fDzSBfMKRrj5rFoxOX20Z9mUif13qjGFqExgZlkU1H2bBvE0lp/eq
euQxvK2sKtwMyYF67xZNDsOXsobT1y4VEQ7/EFUjWQHj7usULAiHhPOqr6/z
zoKzk2VSadY0uHd/J/s/vz/MnX3/R7PNG2BcePT1cw4deKOWb9N4RviW8zUt
4IgPlBph8n2qErTG/d62k3o74uz6o+CUD0pcVrK231wFnpM+LKEHhH/uqOt6
q5SjeeeHvuGIWqCY6tIbRlkg4Ny2ovwvHWfUTwf3xdVBwqWBJgOyXjKXf+Hi
jajGC8cHy25H14PY72RLURcWXGQ/Wxe8sw5Fp3dzHg9oAMMwNK6VZ0HDmXvq
KTGNOOOg63nwYSMMVB2xb5sdhjXOOeyzQrlg8ufDZ/v0UhjSTjrLH0+Bx9Os
Pee8UuDe7+ynMyGEv+Ss7IZSSZ7SFxC7+SYYFpic6jDvKAffpsflOuT4p26T
Hf7CNrj8k/eCDF4azB7iDjWKJbnAzGm79QgNHagMjYXV1TBWxM+9cJ4FB3+p
Z+i/rkKaZBqbWjMTHL0GVn+vIutoqHnvPplaDDh2oiemqQZYj1/I3nhK1svG
lIe8ZQ3o0fM+Ja2yFvQO8nwdVGKB7aZgpnRzOmw420v79TUfbFenUbpVFERu
PK1T3BsF47UO14MJD4zgqlXdtSRvooQnDc0hM+0DhnwtgbQfF850kfOLA5Rk
dr9kYF2VaWLo90owE/fneLGYguXvjWtdjtbgtadb/maNM2AdA28dJH6xXJ5L
OKCpHlf11RsfnaqCj8W7Uv09WSAX+DhoERUP5l0rhdO4suBZQgz38k8UGB5Y
t1HY0gusfVcuX+2TAycz5djXkzw75Cw08OkAE7lc1uTEL6HBmiDFpKKFFAhO
qNTpt9Uh02XBBIuf1NUOZuepShYk726IYD8XBK8dfvZrnU6Cluu3lnwapcDB
f3lcXUMtur1ZfEBoYxmEvzZV9pj+732PpPdrbMrnmBC9Kc4gRiofWWbOeo2E
zz2O3QqjFBgQeXhF75f+HCySP9IQZED0pynz1Ca7CrDU+XorwT0LvVlbG3kJ
V0+4ig85nCgBbZ0xr6ubMtChInTXxzwK8nhg6J11DnznNri7Xy8V31yvywtv
I/lCY2NhjFQy5G6IFBA1S8DTbQ2CgkMUuA3Mvu3UicVr1+V6KbofKiy7tFds
ioKGi56fFwpm4m3/KPtLho8x0no/S5acL67byi3+qwBt5CwW7LmsASOcFd/a
yPXrwiyMnD+W4eTimITHoW4geVHJWIzk4th3gR+eZdKxLmcqdt2eQAi5PLbH
hNy/9cH+9QF21WigKlhSSEUATfF9/6zBf+97yFnfodvdqALxqC/fA7lL8dpA
+herIxT8VnjZ3hxFg2cnlzyi04qQ1zOCvoP41Lm/d+3fRyKI6iWnPr5TgMkX
ObvuBFFwP//YoG9/HhySeTInw5mHua1Ovb2FhLuKLBdJr0qHGMY1g8eh2Xj+
4llZafJcTgO/Ne3E03DPQWVB3WNxONcSn1vxneiwVlKIxL083BeTcUxpXySe
kdXzsOwgPMzpev3sCURMMd5gffYltqWHL6ogHNiy48GN/Y9oSDs/0iP21AM3
p0zpDbymIED3rjDPmSrk3jO6Ld9VHzVVv0SKk1xz/j/2PfTzStR3l9Nh3nGP
e8xIOW67fdQ45AQFVyYHmmamyuDvWwHGpcYy/L7x4hE+kt8lKp5dzlMohOVj
PlI5pxELeVjmfwl//trQrF7jmAnCeik+5UPFeCzw/IEFuRTU3vD7Pv4zG52O
1tDcn6TjzTrdCBvCz2Je+qtulBdjKc/eExFjyVi7L/btRyScWb8VtU9U4IaF
1VtaP8cj/2yy/N8YCrzuutpnCTCwOYX32JO2KHyk1se21um/9z2mdl9+Ebu2
Agp+KIZrtNPx8HB/liRQsAyX9roFFUPIB+01yvk07Ewrcj5H8uOH1cLRSf3Z
sOHpEZrviwpcdj67nO5NwUXD8Tbjw4UYtzNnaL92LooVzmTeJzypGW6bx76g
HKOY94Nq6gmPKPpEJRBOE0jlmrAh/+8Ls0e/5ngGuhq/6Pvndxs0/mPfw3ZZ
hqtpdymYxYSV9udX4anokQ75A0T39r0+uEY2D4zNFacyQhgY3JYT+U2Hgsem
TfvCLBHVd02eVRcuxgzL43UTPv/UFVPYKJCGLvlhHXI+BSiodXe1iDUF2io1
fQ4uBSAm49ah61uDfCo/tn0WpSCrot088mwFfjILL4kYLENVAR37cyQv3I/W
evDwaiUc3NEe+00O4ayd6q3+cxT4Dp3ryjHKQs/ddwcu32NC9TajI8YKFNx9
/VmHI4YBrd0OGLMoD9iP187tvErBmWXG1x42V4DCLeHwjoACaLEoknMn/mt3
TYx2jycDSw3fM6LuVYJigVpapi0FqpmGHqWMfEyObuAfecUArYqltWe0/v97
53/vP5wQ7K96/bkKBBgbB0ctUsGU7/sqVcIt0Q4vOOaIzkpWXg6JU8gASxzQ
SHCnQMe75MRhmTJwyKWKHjVnQaTZbMCGOLLeNXjGHTRTUYW5wuD1tXIIn/pd
5Ut803VNevUvi1xk43VRu/e8Atac1HDx86TAxvFKz6/Npbgp06IVcmiwbro6
M9Hgv/cfVLe/yZJa/8++tOWhk8Rvyw02XD2uS+pWP3i2W60S+Jz1+Mw7omCn
GbevLeGQZCuLg0vsy+FgxIvbawbjoVgpJJQinJ/8oNXFT7IIsv7cOjswlQwR
UeEiGiS/FKpL386wScCcFW5diQ6FoCR7/3AwyS8RKseE1HiykXKyKEv4VgxV
lnwiRzMp2O57Wye7uQiHbUcPrD2JYJbb967Ul4LBpyFKiiXlWKYrduhQXRlc
6pfXvWX0/9/n/nv/4QevfxTtdA3UtSXqcOxxwMyMV0eWXaDgcniI1oqnDHAX
0bU//0Qf9tvGq06T+r8Q+/q0R34FNFttMnHw9oCJlV8un39DfPP+LId1Vglw
9E1E2J5/CddB4mY+g/D8zGO9wr4ciFboFN0oFQltzcOfv3dTsDLQX/e4RwzO
qyybmxPNBKeWikjTL0SfV1/zCI/JwEM6E3/uBmeTvxc4OthM/EuzmIt+rwDf
f5feP7UkDxzuKHqtJLr0rgalpgLLUNbljcyPWwUQnxios4X4CMcxRv9XAzre
eRawM7+kCPoeLs95aPj/+w/Uv7+fDTY9dPN+Lfxhvgq6fyYWC2o1jOpliI5J
+bb7F1TB0KhKePpUBKbcl15ylPiI/gkJrQIWDTY1iYV/kApEUZVTiiohJAfR
lSMVBcrglNBQQXaUGxbrnr3nV0rW6Zamw1l6+XBZ+diXB8YauFHD7HBVJwWJ
HdsWOTmnA5fT2P0fho9BZIG+WTyL6MP+xjHtNeFoP6CeLmkeA+9FXlRUT5Dc
9G6679aVt/gx1f57vUkCTNrqmMA3oudWC7I7OfLwS1bXuPiVVGBr2yh+nIyb
j1SYd1lDKaqvCL5ycUMGDPHOJywg9XMy5uUt82M0DGLfG2TzJAumB971Vj2l
gP3plI0bexUmGy6KN+3JAX9/IbWfV/57/+EmN684pDYAm7NxtOKhclwtI+Pj
TmfBhZBgHgXRC1Cdv0QgQTUNX+y9/jrxFwU93AX+RomNYKR8hf2raCWG8i28
pODNgmWzL1hu6+ugtuNN6gshOqqoDDPzG1mg/faizptdbsD6mVBcvpzois7V
gjMfKeA0rrRR8ArAeEFqVe7zHKxcWmcMhOveVJzsYZxpgus3GpMl/1RjxdJF
Lu3nWPA0T44tdU09sIw0xOXYqtG/5ctb6QAWtJ98s4nfmQmhVfumrWYZGL5H
8UVGKwvYYfNdDfZACM/HaP3dZfgy/EqLbzEFT7dff+0244KrYwpbg7+WYBb3
u92OhFeraHqKtkvisDvlVyivURH6nFC3GmcS/eSckS4qbYIvBapN00V1mFkd
6FXLyQLn13+6Di9rAKbDBkHeJpIrv6hp5V5gwTvWqgvoVAO7kmUS33bUoOsh
iwh+cp/n724yjfrMgN6/0vsXdTBxN7e9pHETCzYO6diLdkbArEX5izUn6Rgx
IhFTHUCBu11f7uNiQEMJtiWjvDTEh4uyPQj/S9aPenwZfo0hPLnbK9vL8XHA
9qLxZAoeeHqxOaamYeU23QCb4DIctHlnMUf0KkegTcV1RzNsG4p8s12yCTdP
s6uklA4DN+d2rWmqAS5taQ/+5daIX89tnq5cyoI441jmcctaWHLh+p/nEQ1Y
eGLgU9JZFjz7ea1bq78K9rOijqgk16P4gx0BPV4siNKskR0/Roe4iOro86l1
eClS5dp3wtVhui4TKxVjYaD9k8Bn1WoUOWovoEH0OWQ7c5VQvTOYnjOIWCla
hU8XHZDJIXlN7+gdsaM9gZjb911glFWJd0wybX+5EN3Q5rrj8DIJefrFG65l
03H259TBIaLPJSVcpt7rc7CTcu+Us6ShrmXe91ByfuVMgG0LsxHmJf70c/k1
4zK14N/TBcNQqRumaqBTB4x+epmAeDNOLgTTpWws0BtnLLrUUQ2+CmFzdzKb
sPvwQcFSORbc1SkwkZWrhNTo/cMbZZqQ+6JoS7QDC4wtupS7gsrhsoFJvduD
Rpx7qceukM0C5VUWEMGRCBq1LZo9CnW49FhOR8pOogMnvRV9d/pD2yeX4/Gb
ajHp7F1OC+LXzdxCxher3TFF+ZfW+G8mivoFBZ8k+X2hJPt8pEscnvS+Ou2L
pP6nfHWXE5+S9v7I3P4sE2tz/3JruFSh0AjNIYEcF094G1N/thAvcLA92CrP
wKrTpweELlHwfz4+nJI=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{366.3801602712196, 261.14799255864006`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-4, 4}, {-4, 4}, {2.137623407004374, 3.547598300467111}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-2.31995148530841, -2.0667391918012146`, 1.3403037785846017`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.477632807171875*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion", "Section"],

Cell[TextData[{
 "In this article, we have demonstrated the utility of the ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " package for solving pattern recognition and regression problems. This is \
an area of very active research and these algorithms are evolving quickly. In \
a rapidly moving field such as this, it is important to have a clear, well \
documented, high-level approach to implementation to minimize confusion. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " provides an excellent solution here, due to its high-level programming \
language and symbolic capabilities."
}], "Text"],

Cell[TextData[{
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " is currently 100% native ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code, written with the emphasis on clarity. This does incur penalties in \
terms of computational speed. Some parts of the QP algorithm are therefore \
being ported to Java at this time to improve performance. This should not \
impair the clarity of the software in any way, since the ",
 StyleBox["QPSolve", "MR"],
 " function is easy separable from the other parts of ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " in a \[OpenCurlyDoubleQuote]black box\[CloseCurlyDoubleQuote] fashion."
}], "Text"],

Cell[TextData[{
 "The ",
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " software is still in its infancy and will no doubt expand rapidly, as our \
group is currently involved in many projects in pattern recognition and \
high-dimensional data analysis in general, as well as in a biomedical \
context. We hope that this contribution will initiate other efforts to bring \
understandable implementations of machine learning algorithms to the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " community."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "G. Casella and R. L. Berger, ",
 StyleBox["Statistical Inference", "SO"],
 ", 2nd ed., Belmont, CA: Duxbury Press, 2002."
}], "Reference",
 CellTags->"Casella"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "S. Haykin, ",
 StyleBox["Neural Networks: A Comprehensive Foundation", "SO"],
 ", 2nd ed., Englewood Cliffs, NJ: Prentice Hall, 1999."
}], "Reference",
 CellTags->"Haykin"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "S. Russell and P. Norvig, ",
 StyleBox["Artificial Intelligence: A Modern Approach", "SO"],
 ", Englewood Cliffs, NJ: Prentice Hall, 1995."
}], "Reference",
 CellTags->"Russell"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "N. Friedman, \[OpenCurlyDoubleQuote]Inferring Cellular Networks Using \
Probabilistic Graphical Models,\[CloseCurlyDoubleQuote] ",
 StyleBox["Science", "SO"],
 ", ",
 StyleBox["303", "SB"],
 ", 2004 pp. 799\[Dash]805."
}], "Reference",
 CellTags->"Friedman"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "V. N. Vapnik, ",
 StyleBox["Statistical Learning Theory", "SO"],
 ", New York: John Wiley & Sons, 1998."
}], "Reference",
 CellTags->"Vapnik"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "R. A. Fisher, \[OpenCurlyDoubleQuote]The Statistical Utilization of \
Multiple Measurements,\[CloseCurlyDoubleQuote] ",
 StyleBox["Annals of Eugenics", "SO"],
 ", ",
 StyleBox["8", "SB"],
 ", 1938 pp. 376\[Dash]386."
}], "Reference",
 CellTags->"Fisher"],

Cell[TextData[{
 Cell[TextData[{
  "[",
  
  CounterBox["Reference"],
  "]\[ThickSpace]\[MediumSpace]"
 }],
  CellSize->{24, Inherited},
  TextAlignment->Right],
 "S. S. Keerthi and E. G. Gilbert, \[OpenCurlyDoubleQuote]Convergence of a \
Generalized SMO Algorithm for SVM Classifier Design,\[CloseCurlyDoubleQuote] ",
 StyleBox["Machine Learning", "SO"],
 ", ",
 StyleBox["46", "SB"],
 ", 2002 pp. 351\[Dash]360."
}], "Reference",
 CellTags->"Keerthi"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Additional Material", "Section"],

Cell["\<\
MathSVM.nb
MathSVM.m\
\>", "Text"],

Cell[TextData[{
 "Available at ",
 ButtonBox["www.mathematica-journal.com/issue/v10i1/download",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.mathematica-journal.com/issue/v10i1/download/"], None}],
 "."
}], "SmallText"]
}, Open  ]],

Cell[CellGroupData[{

Cell["About the Authors", "SectionAboutAuthor"],

Cell["\<\
Roland Nilsson is a graduate student at Link\[ODoubleDot]ping University \
working with machine learning algorithms in analysis of high-dimensional \
biomedical data.\
\>", "TextAboutAuthor"],

Cell[TextData[{
 "Johan Bj\[ODoubleDot]rkegren is an associate professor in molecular \
medicine at Karolinska Institutet, Sweden, and cofounder of ",
 ButtonBox["Clinical Gene Networks",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.clinicalgenenetworks.com/"], None}],
 ", a biotechnology company involved in system-level analysis of biomedical \
data in cardiovascular disease."
}], "TextAboutAuthor"],

Cell[TextData[{
 "Jesper Tegn\[EAcute]r is a professor of computational biology at Link\
\[ODoubleDot]ping University, Sweden, and cofounder of ",
 ButtonBox["Clinical Gene Networks",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.clinicalgenenetworks.com/"], None}],
 "."
}], "TextAboutAuthor"],

Cell[TextData[{
 StyleBox["Roland Nilsson", "AboutAuthorB"],
 "\n",
 StyleBox["Computational Biology \nLink\[ODoubleDot]ping University\nSE-58183 \
Link\[ODoubleDot]ping, Sweden\n", "AboutAuthorI"],
 StyleBox[ButtonBox["rolle@ifm.liu.se",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["mailto:rolle@ifm.liu.se"], None}], "AboutAuthorI"]
}], "TextAboutAuthor"],

Cell[TextData[{
 StyleBox["Johan Bj\[ODoubleDot]rkegren", "AboutAuthorB"],
 "\n",
 StyleBox["Center for Genomics and Bioinformatics \nKarolinska Institutet\n\
SE-17177 Stockholm, Sweden\n", "AboutAuthorI"],
 StyleBox[ButtonBox["johan.bjorkegren@ks.se",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["mailto:johan.bjorkegren@ks.se"], None}], "AboutAuthorI"]
}], "TextAboutAuthor"],

Cell[TextData[{
 StyleBox["Jesper Tegn\[EAcute]r", "AboutAuthorB"],
 "\n",
 StyleBox["Computational Biology \nLink\[ODoubleDot]ping University\nSE-58183 \
Link\[ODoubleDot]ping, Sweden\n", "AboutAuthorI"],
 StyleBox[ButtonBox["jespert@ifm.liu.se",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["mailto:jespert@ifm.liu.se"], None}], "AboutAuthorI"]
}], "TextAboutAuthor"]
}, Closed]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
PrintingStyleEnvironment->"Printout",
WindowToolbars->{},
WindowSize->{787, 791},
WindowMargins->{{22, Automatic}, {23, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{Inherited, Inherited, 
   Cell["Roland Nilsson, Johan Bj\[ODoubleDot]rkegren, and Jesper Tegn\
\[EAcute]r", "Header"]}, {
   Cell["A Flexible Implementation for Support Vector Machines", "Header"], 
   Inherited, Inherited}},
PageFooters->{{
   Cell[
    TextData[{"The Mathematica Journal ", 
      StyleBox["10", FontWeight -> "Bold"], 
      ":1 \[Copyright] 2006 Wolfram Media, Inc."}], "Footer"], Inherited, 
   None}, {None, Inherited, 
   Cell[
    TextData[{"The Mathematica Journal ", 
      StyleBox["10", FontWeight -> "Bold"], 
      ":1 \[Copyright] 2006 Wolfram Media, Inc."}], "Footer"]}},
PrintingOptions->{"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False},
ShowSelection->True,
Magnification->1,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (November 10, 2008)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Style Definitions for \n", 
         StyleBox["The Mathematica Journal", FontSlant -> "Italic"]}], 
       "Subtitle", CellMargins -> {{0, Inherited}, {Inherited, 0}}, 
       CellFrameMargins -> {{20, 4}, {8, 20}}, FontSize -> 36, FontWeight -> 
       "Bold", FontColor -> GrayLevel[1], Background -> GrayLevel[0]], 
      Cell["TheMathematicaJournal.nb\n8-26-05", "EditorialComment"], 
      Cell[
       CellGroupData[{
         Cell[
         "Style Environment Names", "Section", CellFrame -> False, 
          CellDingbat -> None, ShowCellBracket -> True, 
          CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
          StyleData[All, "Working"], ScreenStyleEnvironment -> "Working", 
          PrintingStyleEnvironment -> "Production", 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.115343, 0.350561, 0.362966]}, ShowCellLabel -> 
          True, CellLabelAutoDelete -> True, CellFrameLabelMargins -> 6, 
          ScriptMinSize -> 9, PrivateFontOptions -> {"FontType" -> "Bitmap"}], 
         Cell[
          StyleData[All, "Presentation"], ScreenStyleEnvironment -> 
          "Presentation", PrintingStyleEnvironment -> "Production", 
          Magnification -> 1.25], 
         Cell[
          StyleData[All, "Printout"], ScreenStyleEnvironment -> "Printout", 
          PrintingStyleEnvironment -> "Printout", PageWidth -> PaperWidth, 
          PrintingOptions -> {"PrintingMargins" -> {{54, 54}, {72, 72}}}, 
          ShowCellBracket -> False, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Notebook Options", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], Inherited, 
             Cell["Author(s)", "Header"]}, {
             Cell["Article Title", "Header"], Inherited, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, PageFooters -> {{
             Cell[
              TextData[{"The Mathematica Journal ", 
                StyleBox["volume", FontWeight -> "Bold"], 
                ":issue \[Copyright] year Wolfram Media, Inc."}], "Footer"], 
             Inherited, 
             Cell[
              TextData[{
                ValueBox["FileName"], " ", 
                ValueBox["Date"]}], "Footer"]}, {
             Cell[
              TextData[{
                ValueBox["FileName"], " ", 
                ValueBox["Date"]}], "Footer"], Inherited, 
             Cell[
              TextData[{"The Mathematica Journal ", 
                StyleBox["volume", FontWeight -> "Bold"], 
                ":issue \[Copyright] year Wolfram Media, Inc."}], "Footer"]}},
           PrintingOptions -> {
           "FacingPages" -> True, "FirstPageHeader" -> False, 
            "PrintRegistrationMarks" -> False}, CellFrameLabelMargins -> 6, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          StyleMenuListing -> None]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Styles for Headings", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "Each notebook should contain a Title cell. Title resets all cell \
CounterBox values to zero (except Title).", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], ShowCellBracket -> False, ShowSelection -> 
             True, CellMargins -> {{54, 24}, {0, 15}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, LineSpacing -> {1.125, 0}, CounterIncrements -> "Title", 
             CounterAssignments -> {{"Subtitle", 0}, {"Section", 0}, {
               "Subsection", 0}, {"Subsubsection", 0}, {"List", 0}, {
               "NumberedFigure", 0}, {"NumberedTable", 0}, {
               "NumberedProgram", 0}, {"Equation", 0}, {"Text", 0}, {
               "SmallText", 0}, {"Reference", 0}}, FontFamily -> "Times", 
             FontSize -> 36, FontSlant -> "Italic"], 
            Cell[
             StyleData["Title", "Presentation"]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{72, 72}, {14, 0}}, CellFrameMargins -> False, 
             FontColor -> GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
         "Sub(sub)titles are optional, follows Title, precedes Author.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, ShowSelection -> 
             True, CellMargins -> {{54, 24}, {5, 2}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, LineSpacing -> {1.25, 0}, CounterIncrements -> "Subtitle",
              FontFamily -> "Times", FontSize -> 24, FontSlant -> "Italic"], 
            Cell[
             StyleData["Subtitle", "Presentation"]], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{72, 72}, {12, 2}}, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], ShowCellBracket -> False, 
             ShowSelection -> True, CellMargins -> {{54, 24}, {5, 2}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, LineSpacing -> {1, 0}, CounterIncrements -> "Subtitle", 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 18, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["Subsubtitle", "Presentation"]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{72, 72}, {6, 2}}, FontSize -> 10]}, Closed]], 
         Cell[
         "SectionFirst should be used for the first section level heading in \
a notebook. SectionFirst sets the Subsection and Subsubsection counters to \
zero. Sets Section counter value to 1. ", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SectionFirst"], CellFrame -> False, CellDingbat -> 
             "\[FilledSquare]", CellMargins -> {{67, 25}, {10, 30}}, 
             Evaluatable -> False, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Section", 0}, {"Subsection", 0}, {
               "Subsubsection", 0}}, AspectRatioFixed -> True, FontFamily -> 
             "Helvetica", FontSize -> 16, FontWeight -> "Bold", FontSlant -> 
             "Plain", FontTracking -> "Plain"], 
            Cell[
             StyleData["SectionFirst", "Presentation"], FontSize -> 18], 
            Cell[
             StyleData["SectionFirst", "Printout"], 
             CellMargins -> {{72, 72}, {2, 30}}, FontSize -> 12]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\" to over ride bold setting \
from above. This sets FontFamily to a bold font....must use inline styles \
\"SXR\" for upright, \"SXO\" for slanted", "EditorialComment"], 
         Cell[
         "Section should be used for subsequent Section level headings. Sets \
counter values Subsection and Subsubsection to zero.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> False, CellDingbat -> 
             "\[FilledSquare]", CellMargins -> {{67, 25}, {10, 30}}, 
             Evaluatable -> False, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             AspectRatioFixed -> True, FontFamily -> "Helvetica", FontSize -> 
             16, FontWeight -> "Bold"], 
            Cell[
             StyleData["Section", "Presentation"], FontSize -> 18], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{72, 72}, {2, 30}}, FontSize -> 12]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\" to over ride bold setting \
from above. This sets FontFamily to a bold font....must use inline styles \
\"SXR\" for upright, \"SXO\" for slanted", "EditorialComment"], 
         Cell[
         "Subsection is an optional style. Sets counter Subsubsection to \
zero.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "\[EmptySquare]", 
             CellMargins -> {{67, 25}, {10, 26}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 14, FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsection", "Presentation"]], 
            Cell[
             StyleData["Subsection", "Printout"], CellDingbat -> 
             "\[EmptySquare]", CellMargins -> {{72, 72}, {2, 16}}, FontSize -> 
             10]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\" to over ride bold setting \
from above. This sets FontFamily to a bold font....must use inline styles \
\"SXR\" for upright, \"SXO\" for slanted", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionNoSpace"], CellDingbat -> "\[EmptySquare]", 
             CellMargins -> {{67, 25}, {10, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["SubsectionNoSpace", "Presentation"]], 
            Cell[
             StyleData["SubsectionNoSpace", "Printout"], CellDingbat -> 
             "\[EmptySquare]", CellMargins -> {{72, 72}, {2, 2}}, FontSize -> 
             10]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\" to over ride bold setting \
from above. This sets FontFamily to a bold font....must use inline styles \
\"SXR\" for upright, \"SXO\" for slanted", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> 
             "\[FilledSmallSquare]", CellMargins -> {{67, 25}, {6, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsubsection", FontFamily -> 
             "Helvetica", FontSize -> 12, FontWeight -> "Bold", FontSlant -> 
             "Oblique"], 
            Cell[
             StyleData["Subsubsection", "Presentation"]], 
            Cell[
             StyleData["Subsubsection", "Printout"], CellDingbat -> None, 
             CellMargins -> {{72, 72}, {-4, 2}}, FontSize -> 9]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain,\", FontFamily->\"Futura \
Heavy\", FontSlant->\"Oblique\". Use inline styles \"SB\" and \"SBO\". Sets \
as oblique in print, roman in notebook.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionNoSpace"], CellDingbat -> 
             "\[FilledSmallSquare]", CellMargins -> {{67, 25}, {6, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsubsection", StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontSlant -> "Oblique"], 
            Cell[
             StyleData["SubsubsectionNoSpace", "Presentation"]], 
            Cell[
             StyleData["SubsubsectionNoSpace", "Printout"], CellDingbat -> 
             None, CellMargins -> {{72, 72}, {-4, 2}}, FontSize -> 9]}, 
           Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain,\", FontFamily->\"Futura \
Heavy\", FontSlant->\"Oblique\". Use inline styles \"SB\" and \"SBO\".  Sets \
as oblique in print, roman in notebook.", "EditorialComment"], 
         Cell[
         "NoDingbat heading variants used, for example, in the frontmatter.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SectionNoDingbat"], CellFrame -> False, CellDingbat -> 
             None, CellMargins -> {{67, 25}, {10, 30}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
             16, FontWeight -> "Bold"], 
            Cell[
             StyleData["SectionNoDingbat", "Presentation"], 
             CellFrameMargins -> {{0, 0}, {0, 4}}], 
            Cell[
             StyleData["SectionNoDingbat", "Printout"], CellFrame -> False, 
             CellMargins -> {{72, 72}, {2, 30}}, CellFrameColor -> 
             GrayLevel[0], FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionNoDingbat"], CellDingbat -> None, 
             CellMargins -> {{67, 25}, {10, 26}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["SubsectionNoDingbat", "Presentation"]], 
            Cell[
             StyleData["SubsectionNoDingbat", "Printout"], 
             CellMargins -> {{72, 72}, {2, 16}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionNoSpaceNoDingbat"], 
             CellMargins -> {{67, 25}, {2, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["SubsectionNoSpaceNoDingbat", "Presentation"]], 
            Cell[
             StyleData["SubsectionNoSpaceNoDingbat", "Printout"], 
             CellMargins -> {{72, 72}, {2, 2}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionNoDingbat"], 
             CellMargins -> {{67, 25}, {6, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsubsection", StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontSlant -> "Oblique"], 
            Cell[
             StyleData["SubsubsectionNoDingbat", "Presentation"]], 
            Cell[
             StyleData["SubsubsectionNoDingbat", "Printout"], 
             CellMargins -> {{72, 72}, {-4, 2}}, FontSize -> 9]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Styles for Body Text", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{67, 24}, {4, 4}}, 
             LineSpacing -> {1, 4}, CounterIncrements -> "Text", FontFamily -> 
             "Times", FontSize -> 16], 
            Cell[
             StyleData["Text", "Presentation"]], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{72, 72}, {2, 4}},
              LineSpacing -> {0, 12}, FontSize -> 10]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{67, 24}, {4, 4}}, 
             LineSpacing -> {1, 4}, CounterIncrements -> "SmallText", 
             FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["SmallText", "Presentation"]], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 11}, 
             FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Quote"], 
             CellMargins -> {{83, 40}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 3}, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["Quote", "Presentation"]], 
            Cell[
             StyleData["Quote", "Printout"], 
             CellMargins -> {{96, 96}, {2, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
         "Styles for Input, Output, and Graphics", "Section", CellFrame -> 
          False, CellDingbat -> None, ShowCellBracket -> True, 
          CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "The cells in this section define styles used for active kernel \
sessions.  Be careful when modifying, renaming, or removing these styles, \
because the front end associates special meanings with these style names.", 
          "Text"], 
         Cell[
          TextData[{"Input cell style to be used for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " input statements that are followed by either Output or \
GraphicsOnly cell  styles. Sets ", 
            "DefaultFormatType->DefaultInputFormatType."}], 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{0.25, 0.25}, {0, 0.25}}, 
             CellMargins -> {{67, 24}, {-1, 10}}, Evaluatable -> True, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultInputFormatType, AutoItalicWords -> {}, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontSize -> 12, FontWeight -> 
             "Bold", Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["Input", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             CellFrameMargins -> False, LineSpacing -> {1.25, 0}, FontSize -> 
             9, Background -> None]}, Closed]], 
         Cell[
          TextData[{"InputOnly cell style to be used for ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " input statements that produce no output or graphic. See Program \
and  ProgramNoLabel cell styles for presenting segments of code that do not  \
evaluate."}], "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InputOnly"], CellFrame -> {{0.25, 0.25}, {0, 0.25}}, 
             CellMargins -> {{67, 24}, {10, 10}}, Evaluatable -> True, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultInputFormatType, AutoItalicWords -> {}, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontSize -> 12, FontWeight -> 
             "Bold", Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["InputOnly", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["InputOnly", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             LineSpacing -> {1.25, 0}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
          TextData[{"Output cell style is usually generated by the ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " kernel. To follow Input cell style. Sets  \
DefaultFormatType->DefaultOutputFormatType."}], "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
             CellMargins -> {{67, 24}, {10, 0}}, CellEditDuplicate -> True, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, AutoItalicWords -> {}, 
             CounterIncrements -> "Output", StyleMenuListing -> None, 
             FontSize -> 12, Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["Output", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["Output", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {2, 4}}, 
             CellLabelMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1.25, 0}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
         "OutputPreserved cell style to be used to retain original output for \
Timing results and such. ", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OutputPreserved"], 
             CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
             CellMargins -> {{67, 24}, {10, 0}}, 
             CellBracketOptions -> {
              "Color" -> RGBColor[0.88864, 0.320928, 0.140932]}, 
             CellEditDuplicate -> False, CellGroupingRules -> 
             "OutputGrouping", CellHorizontalScrolling -> True, 
             PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, AutoItalicWords -> {}, 
             CounterIncrements -> "Output", FontSize -> 12, Background -> 
             GrayLevel[0.949996]], 
            Cell[
             StyleData["OutputPreserved", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["OutputPreserved", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {2, 4}}, 
             CellLabelMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1.25, 0}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
          
          TextData[{
           "OutputOnly cell style to be used for output generated by the ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " kernel without the Input. Sets  \
DefaultFormatType->DefaultOutputFormatType."}], "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OutputOnly"], CellFrame -> True, 
             CellMargins -> {{67, 24}, {15, 10}}, CellEditDuplicate -> True, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, AutoItalicWords -> {}, 
             CounterIncrements -> "Output", StyleMenuListing -> None, 
             FontSize -> 12, Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["OutputOnly", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["OutputOnly", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {2, 4}}, 
             CellLabelMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1.25, 0}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
         "Variants for use embedded in NumberedList.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InputInList"], CellFrame -> {{0.25, 0.25}, {0, 0.25}},
              CellMargins -> {{103, 24}, {-1, 10}}, Evaluatable -> True, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultInputFormatType, AutoItalicWords -> {}, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", StyleMenuListing -> None, 
             FontFamily -> "Courier", FontSize -> 12, FontWeight -> "Bold", 
             Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["InputInList", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["InputInList", "Printout"], CellFrame -> False, 
             CellMargins -> {{109, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             CellFrameMargins -> False, LineSpacing -> {1.25, 0}, FontSize -> 
             9, Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InputOnlyInList"], 
             CellFrame -> {{0.25, 0.25}, {0, 0.25}}, 
             CellMargins -> {{103, 24}, {10, 10}}, Evaluatable -> True, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultInputFormatType, AutoItalicWords -> {}, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", StyleMenuListing -> None, 
             FontFamily -> "Courier", FontSize -> 12, FontWeight -> "Bold", 
             Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["InputOnlyInList", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["InputOnlyInList", "Printout"], CellFrame -> False, 
             CellMargins -> {{109, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             LineSpacing -> {1.25, 0}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OutputInList"], 
             CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
             CellMargins -> {{103, 24}, {10, 0}}, CellEditDuplicate -> True, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, AutoItalicWords -> {}, 
             CounterIncrements -> "Output", StyleMenuListing -> None, 
             FontFamily -> "Courier", FontSize -> 12, Background -> 
             GrayLevel[0.949996]], 
            Cell[
             StyleData["OutputInList", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["OutputInList", "Printout"], CellFrame -> False, 
             CellMargins -> {{109, 72}, {2, 4}}, 
             CellLabelMargins -> {{72, Inherited}, {Inherited, Inherited}}, 
             LineSpacing -> {1.25, 0}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
          TextData[{"Message cells are sometimes generated by the ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " kernel during evaluation. To follow Input cell style, precede \
Output cell  style."}], "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], CellFrame -> {{0.25, 0.25}, {0, 0}}, 
             CellDingbat -> "\[WarningSign]", 
             CellMargins -> {{67, 24}, {0, 0}}, CellGroupingRules -> 
             "OutputGrouping", PageBreakWithin -> False, GroupPageBreakWithin -> 
             False, GeneratedCell -> True, CellAutoOverwrite -> True, 
             ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0.869993], 
             CellFrameLabelMargins -> -9, DefaultFormatType -> 
             DefaultOutputFormatType, AutoItalicWords -> {}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
             RGBColor[0, 0, 1], Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["Message", "Presentation"], FontSize -> 12], 
            Cell[
             StyleData["Message", "Printout"], CellFrame -> True, CellDingbat -> 
             None, CellMargins -> {{96, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             CellFrameMargins -> 4, CellFrameColor -> GrayLevel[0], 
             LineSpacing -> {0, 10}, FontSize -> 8, FontColor -> GrayLevel[0],
              Background -> None]}, Closed]], 
         Cell[
          TextData[{"Print cells are usually generated by the ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " kernel from such commands as ?Plot."}], "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], CellFrame -> True, 
             CellMargins -> {{67, 24}, {0, 0}}, CellGroupingRules -> 
             "OutputGrouping", CellHorizontalScrolling -> True, 
             PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, CellFrameColor -> GrayLevel[0], 
             DefaultFormatType -> DefaultOutputFormatType, 
             AutoItalicWords -> {}, StyleMenuListing -> None, FontSize -> 10], 
            Cell[
             StyleData["Print", "Presentation"], FontSize -> 12], 
            Cell[
             StyleData["Print", "Printout"], CellFrame -> True, 
             CellMargins -> {{96, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             CellFrameMargins -> 4, CellFrameColor -> GrayLevel[0], 
             LineSpacing -> {0, 11}, FontSize -> 9, Background -> None]}, 
           Closed]], 
         Cell[
         "Graphics cell usually output by kernel. To be preceded by Input \
cell, followed by Output cell.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], CellFrame -> {{0.25, 0.25}, {0, 0}}, 
             CellMargins -> {{67, 24}, {0, 0}}, CellGroupingRules -> 
             "GraphicsGrouping", CellHorizontalScrolling -> True, 
             PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             ImageMargins -> {{30, 0}, {0, 0}}, StyleMenuListing -> None, 
             Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["Graphics", "Presentation"]], 
            Cell[
             StyleData["Graphics", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {8, 10}}, LineSpacing -> {0, 12}, 
             ImageSize -> {144, 144}, Background -> None]}, Closed]], 
         Cell[
         "GraphicsOnly cell to follow Input cell, not followed by Output \
cell. Set Graphics cell to GraphicsOnly cell manually.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GraphicsOnly"], 
             CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
             CellMargins -> {{67, 24}, {10, 0}}, CellGroupingRules -> 
             "GraphicsGrouping", CellHorizontalScrolling -> True, 
             PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             ImageMargins -> {{30, 0}, {0, 0}}, Background -> 
             GrayLevel[0.949996]], 
            Cell[
             StyleData["GraphicsOnly", "Presentation"]], 
            Cell[
             StyleData["GraphicsOnly", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {8, 10}}, LineSpacing -> {0, 12}, 
             ImageSize -> {144, 144}, FontSize -> 10, Background -> None]}, 
           Closed]], 
         Cell[
         "PictureGroup cell style used to group graphic cells that comprise \
an animation.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PictureGroup"], 
             CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
             CellMargins -> {{67, 17}, {0, 0}}, CellGroupingRules -> 
             "GraphicsGrouping", CellHorizontalScrolling -> True, 
             PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellFrameColor -> GrayLevel[0.869993], DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             ImageMargins -> {{30, 0}, {0, 0}}, StyleMenuListing -> None, 
             Background -> GrayLevel[0.949996]], 
            Cell[
             StyleData["PictureGroup", "Presentation"]], 
            Cell[
             StyleData["PictureGroup", "Printout"], CellFrame -> False, 
             CellMargins -> {{96, 72}, {8, 10}}, LineSpacing -> {0, 12}, 
             ImageSize -> {144, 144}, FontSize -> 10, Background -> None]}, 
           Closed]], 
         Cell[
          
          TextData[{
           "PlacedGraphics cell style to be used when importing a graphic \
from another  application or when presenting a graphic not associated with ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], 
            " input. May be followed by NumberedFigureCaption."}], 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PlacedGraphics"], CellFrame -> False, 
             CellMargins -> {{67, 24}, {10, 10}}, CellGroupingRules -> 
             "GraphicsGrouping", CellHorizontalScrolling -> True, 
             ShowCellLabel -> False, TextAlignment -> Left], 
            Cell[
             StyleData["PlacedGraphics", "Presentation"]], 
            Cell[
             StyleData["PlacedGraphics", "Printout"], 
             CellMargins -> {{72, 72}, {8, 10}}, LineSpacing -> {0, 12}, 
             FontSize -> 10, Background -> None]}, Closed]], 
         Cell[
         "CellLabel style definition controls how labels appear when a cell \
has ShowCellLabels->True.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], 
             CellMargins -> {{5, Inherited}, {Inherited, Inherited}}, 
             StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
             8, FontSlant -> "Oblique", FontColor -> 
             RGBColor[0.115343, 0.350561, 0.362966]], 
            Cell[
             StyleData["CellLabel", "Presentation"], FontSize -> 10, 
             FontColor -> RGBColor[0.115343, 0.350561, 0.362966]], 
            Cell[
             StyleData["CellLabel", "Printout"], LineSpacing -> {1, 0}, 
             FontSize -> 6, FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Styles for Automatic Numbering and Lists", "Section", CellFrame -> 
          False, CellDingbat -> None, ShowCellBracket -> True, 
          CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "NumberedEquation is for DisplayFormula cells that number \
sequentially throughout a notebook. Sets as   \
DefaultFormatType->TraditionalForm.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], 
             CellMargins -> {{67, 24}, {5, 10}}, PageBreakAbove -> False, 
             CellFrameLabels -> {{None, 
                Cell[
                 TextData[{"(", 
                   CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
             DefaultFormatType -> TraditionalForm, TextAlignment -> Center, 
             SingleLetterItalics -> True, SpanMaxSize -> Infinity, 
             CounterIncrements -> "NumberedEquation", FormatTypeAutoConvert -> 
             False, FontFamily -> "Times", FontSize -> 12, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}, 
             GridBoxOptions -> {AllowScriptLevelChange -> False}], 
            Cell[
             StyleData["NumberedEquation", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["NumberedEquation", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             FontSize -> 10]}, Closed]], 
         Cell[
         "NumberedFigureCaption to be used directly after a PlacedGraphic \
cell. Use the TMJStyles.nb palette to begin the cell and paste in the word \
\"Figure\" and the NumberedFigure counter value. Allows for a descriptive \
caption.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigureCaption"], CellDingbat -> 
             "\[FilledUpTriangle]", CellMargins -> {{67, 24}, {8, 10}}, 
             PageBreakAbove -> False, CellLabelPositioning -> Left, 
             TextAlignment -> Left, CounterIncrements -> "NumberedFigure", 
             FormatTypeAutoConvert -> False, FontFamily -> "Helvetica", 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigureCaption", "Presentation"]], 
            Cell[
             StyleData["NumberedFigureCaption", "Printout"], CellDingbat -> 
             None, CellMargins -> {{72, 72}, {18, 4}}, LineSpacing -> {0, 11},
              FontSize -> 9]}, Closed]], 
         Cell[
         "NumberedTableCaption to be used directly after a Table cell. Use \
the TMJStyles.nb palette to begin the cell and paste in the word \"Table\" \
and the NumberedTable counter value. Allows for a descriptive caption.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTableCaption"], CellDingbat -> 
             "\[FilledUpTriangle]", CellMargins -> {{67, 24}, {8, 10}}, 
             PageBreakAbove -> False, CounterIncrements -> "NumberedTable", 
             FontFamily -> "Helvetica", FontSize -> 10], 
            Cell[
             StyleData["NumberedTableCaption", "Presentation"]], 
            Cell[
             StyleData["NumberedTableCaption", "Printout"], CellDingbat -> 
             None, CellMargins -> {{72, 72}, {18, 4}}, LineSpacing -> {0, 11},
              FontSize -> 9]}, Closed]], 
         Cell[
         "NumberedProgramCaption to be used directly after a Program cell. \
Use the TMJStyles.nb palette to begin the cell and paste in the word \
\"Listing\" and the NumberedProgram counter value. Allows for a descriptive \
caption.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedProgramCaption"], CellDingbat -> 
             "\[FilledUpTriangle]", CellMargins -> {{67, 24}, {8, 10}}, 
             PageBreakAbove -> False, CounterIncrements -> "NumberedProgram", 
             FormatTypeAutoConvert -> False, FontFamily -> "Helvetica", 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedProgramCaption", "Presentation"]], 
            Cell[
             StyleData["NumberedProgramCaption", "Printout"], CellDingbat -> 
             None, CellMargins -> {{72, 72}, {18, 4}}, LineSpacing -> {0, 11},
              FontSize -> 9]}, Closed]], 
         Cell[
         "Use of Caption style by itself should be discouraged. See cell \
styles for NumberedFigureCaption, NumberedTableCaption, \
NumberedProgramCaption and the TMJStyles.nb palette.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Caption"], CellDingbat -> "\[FilledUpTriangle]", 
             CellMargins -> {{67, 24}, {Inherited, 5}}, PageBreakAbove -> 
             False, StyleMenuListing -> None, FontFamily -> "Helvetica", 
             FontSize -> 10], 
            Cell[
             StyleData["Caption", "Presentation"]], 
            Cell[
             StyleData["Caption", "Printout"], CellDingbat -> None, 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 11}, 
             FontSize -> 9]}, Closed]], 
         Cell[
         "BulletedList is an optional style. Adds a CellDingbat of \
FilledSmallCircle. Text indents left a little more.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BulletedList"], CellDingbat -> "\[FilledSmallCircle]",
              CellMargins -> {{104, 24}, {Inherited, Inherited}}, FontFamily -> 
             "Times", FontSize -> 12], 
            Cell[
             StyleData["BulletedList", "Presentation"]], 
            Cell[
             StyleData["BulletedList", "Printout"], 
             CellMargins -> {{109, 72}, {2, Inherited}}, 
             LineSpacing -> {0, 12}, FontSize -> 10]}, Closed]], 
         Cell[
         "BeginNumberedList to be used as the first item in a numbered list \
sequence. Use the TMJStyles.nb palette to begin the cell and paste in the \
List counter value.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BeginNumberedList"], 
             CellMargins -> {{79, 24}, {Inherited, Inherited}}, 
             ParagraphIndent -> -24, CounterIncrements -> "List", 
             CounterAssignments -> {{"List", 0}}, FontFamily -> "Times", 
             FontSize -> 12], 
            Cell[
             StyleData["BeginNumberedList", "Presentation"], 
             ParagraphIndent -> -31], 
            Cell[
             StyleData["BeginNumberedList", "Printout"], 
             CellMargins -> {{85, 72}, {2, Inherited}}, 
             LineSpacing -> {0, 12}, ParagraphIndent -> -24, FontSize -> 10]},
            Closed]], 
         Cell[
         "NumberedList to be used for subsequent items in a numbered list \
sequence with a single-digit label. Use the TMJstyles.nb palette to begin the \
cell and paste in the List counter value.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedList"], 
             CellMargins -> {{79, 24}, {Inherited, Inherited}}, 
             ParagraphIndent -> -24, CounterIncrements -> "List", FontFamily -> 
             "Times", FontSize -> 12], 
            Cell[
             StyleData["NumberedList", "Presentation"]], 
            Cell[
             StyleData["NumberedList", "Printout"], 
             CellMargins -> {{85, 72}, {2, Inherited}}, 
             LineSpacing -> {0, 12}, ParagraphIndent -> -24, FontSize -> 10]},
            Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NolabelList"], 
             CellMargins -> {{103, 10}, {Inherited, Inherited}}, FontFamily -> 
             "Times", FontSize -> 12], 
            Cell[
             StyleData["NolabelList", "Presentation"]], 
            Cell[
             StyleData["NolabelList", "Printout"], 
             CellMargins -> {{109, 72}, {2, Inherited}}, 
             LineSpacing -> {0, 12}, ParagraphIndent -> 0, FontSize -> 10]}, 
           Closed]], 
         Cell[
         "BeginSubList to be used as the first item in a lettered list \
sequence used as a subitem to a NumberedList item. Use the TMJStyles.nb \
palette to begin the cell and paste in the SubList counter value. Sets \
SubList counter to 0.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BeginSubList"], 
             CellMargins -> {{95, 10}, {Inherited, Inherited}}, 
             ParagraphIndent -> -24, CounterIncrements -> "SubList", 
             CounterAssignments -> {{"SubList", 0}}, FontFamily -> "Times", 
             FontSize -> 12, CounterBoxOptions -> {CounterFunction :> (Part[
                 CharacterRange["a", "z"], #]& )}], 
            Cell[
             StyleData["BeginSubList", "Presentation"]], 
            Cell[
             StyleData["BeginSubList", "Printout"], 
             CellMargins -> {{85, 72}, {2, Inherited}}, 
             LineSpacing -> {0, 12}, ParagraphIndent -> -24, FontSize -> 10]},
            Closed]], 
         Cell[
         "SubList to be used as subsequent items in a lettered list sequence \
used as a subitem to a NumberedList item. Use the TMJStyles.nb palette to \
begin the cell and paste in the SubList counter value. Increments SubList \
counter.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubList"], 
             CellMargins -> {{95, 10}, {Inherited, Inherited}}, 
             ParagraphIndent -> -24, CounterIncrements -> "SubList", 
             FontFamily -> "Times", FontSize -> 12, 
             CounterBoxOptions -> {CounterFunction :> (Part[
                 CharacterRange["a", "z"], #]& )}], 
            Cell[
             StyleData["SubList", "Presentation"]], 
            Cell[
             StyleData["SubList", "Printout"], 
             CellMargins -> {{85, 72}, {2, Inherited}}, 
             LineSpacing -> {0, 12}, ParagraphIndent -> -24, FontSize -> 10]},
            Closed]], 
         Cell[
         "SubListBulleted to be used as subsequent items in a bulleted list \
sequence used as a subitem to a NumberedList item.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubListBulleted"], CellDingbat -> 
             "\[FilledSmallCircle]", 
             CellMargins -> {{113, 10}, {Inherited, Inherited}}, FontFamily -> 
             "Times", FontSize -> 12], 
            Cell[
             StyleData["SubListBulleted", "Presentation"]], 
            Cell[
             StyleData["SubListBulleted", "Printout"], 
             CellMargins -> {{119, 72}, {2, Inherited}}, TextJustification -> 
             1, Hyphenation -> True, LineSpacing -> {0, 12}, FontSize -> 10]},
            Closed]], 
         Cell[
         "Reference style to be used in the bibliography portion of a \
notebook. One cell for each bibliography entry. Use the TMJStyles.nb palette \
to begin cell and paste in the Reference counter value. Use Inline style SB \
for bold font changes. Use Inline style SO for italic font changes.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Reference"], 
             CellMargins -> {{79, 25}, {Inherited, Inherited}}, 
             ParagraphIndent -> -24, CounterIncrements -> "Reference", 
             FontFamily -> "Helvetica", FontSize -> 10], 
            Cell[
             StyleData["Reference", "Presentation"], ParagraphIndent -> -25], 
            Cell[
             StyleData["Reference", "Printout"], 
             CellMargins -> {{85, 72}, {2, 4}}, LineSpacing -> {0, 10}, 
             ParagraphIndent -> -24, FontSize -> 8]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Journal Element Styles", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "OnlineHeader to be used at the beginning of a notebook. Precedes \
the Title cell.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OnlineHeader"], ShowCellBracket -> False, 
             ShowSelection -> True, CellMargins -> {{0, 25}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{54, 4}, {2, 8}}, 
             LineSpacing -> {1, 1}, StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
             "Italic", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.725383, 0.0545968, 0.0770581]], 
            Cell[
             StyleData["OnlineHeader", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["OnlineHeader", "Printout"], PageWidth -> PaperWidth, 
             CellFrame -> False, CellMargins -> {{72, 72}, {0, 0}}, FontSize -> 
             10, FontColor -> GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
         "Cell Style PreTitle to be used for such things that precede a title \
as in EDITOR'S PICK. Should be entered all caps with a space between each \
letter, two spaces between words. FontTracking is set to Wide.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreTitle"], ShowCellBracket -> False, 
             CellMargins -> {{54, 25}, {Inherited, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{55, 4}, {8, 20}}, 
             LineSpacing -> {1.125, 0}, StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 14, FontWeight -> "Bold"], 
            Cell[
             StyleData["PreTitle", "Presentation"]], 
            Cell[
             StyleData["PreTitle", "Printout"], 
             CellMargins -> {{72, 72}, {14, 0}}, CellFrameMargins -> False, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\", must use \"SXR\" and \"SXO\" \
for inline styles.", "EditorialComment"], 
         Cell[
         "Author to be used after the Title cell with author name(s). Author \
name(s) may be preceded by \"Edited by \" for certain columns. Text in author \
cell to be used as the left page header. Usually followed by an Address \
cell.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Author"], ShowCellBracket -> False, ShowSelection -> 
             True, CellMargins -> {{54, 24}, {4, 0}}, CellGroupingRules -> 
             "NormalGrouping", PageBreakBelow -> False, FontFamily -> 
             "Helvetica", FontSize -> 14, FontWeight -> "Bold"], 
            Cell[
             StyleData["Author", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["Author", "Printout"], 
             CellMargins -> {{72, 72}, {4, 4}}, LineSpacing -> {0, 14}, 
             FontSize -> 12]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\" to avoid double emboldening. \
Use \"SXR\" and \"SXO\"", "EditorialComment"], 
         Cell[
         " Abstract is a required element to be used after the Author cell. \
Contains a short summary of the article.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Abstract"], ShowCellBracket -> False, ShowSelection -> 
             True, CellMargins -> {{54, 86}, {4, 25}}, LineSpacing -> {1, 3}, 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontSlant -> "Plain"], 
            Cell[
             StyleData["Abstract", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["Abstract", "Printout"], 
             CellMargins -> {{72, 72}, {Inherited, 2}}, 
             LineSpacing -> {0, 12}, FontSize -> 10]}, Closed]], 
         Cell[
         "BeginQuestion is used in the In and Out column directly after a \
section cell. Followed by either Question or Input, InputOnly, etc. Last \
paragraph of the question should be in EndQuestion cell style.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BeginQuestion"], CellFrame -> {{0, 0}, {0, 2}}, 
             CellDingbat -> "Q:", CellMargins -> {{89, 34}, {8, 8}}, 
             CellFrameMargins -> {{0, 0}, {2, 4}}, LineSpacing -> {1, 2}, 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.115511, 0.321752, 0.580118]], 
            Cell[
             StyleData["BeginQuestion", "Presentation"]], 
            Cell[
             StyleData["BeginQuestion", "Printout"], PageWidth -> PaperWidth, 
             CellFrame -> {{0, 0}, {0, 2}}, 
             CellMargins -> {{72, 72}, {4, 16}}, LineSpacing -> {0, 12}, 
             FontSize -> 10, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
         "Question used for text cells within the Question portion of a \
QuestionAnswer.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Question"], CellMargins -> {{89, 34}, {8, 8}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Times", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.115511, 0.321752, 0.580118]], 
            Cell[
             StyleData["Question", "Presentation"]], 
            Cell[
             StyleData["Question", "Printout"], PageWidth -> PaperWidth, 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
         "EndQuestion used in the In and Out column as the last paragraph of \
the question.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["EndQuestion"], CellFrame -> {{0, 0}, {2, 0}}, 
             CellMargins -> {{89, 35}, {8, 8}}, LineSpacing -> {1, 2}, 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.115511, 0.321752, 0.580118]], 
            Cell[
             StyleData["EndQuestion", "Presentation"]], 
            Cell[
             StyleData["EndQuestion", "Printout"], 
             CellFrame -> {{0, 0}, {2, 0}}, 
             CellMargins -> {{72, 72}, {18, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
         "BeginEndQuestion is used in the In and Out column directly after a \
section cell. Used if the question is a single text paragraph.", 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BeginEndQuestion"], CellFrame -> {{0, 0}, {2, 2}}, 
             CellDingbat -> "Q:", CellMargins -> {{89, 35}, {8, 8}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Times", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.115511, 0.321752, 0.580118]], 
            Cell[
             StyleData["BeginEndQuestion", "Presentation"]], 
            Cell[
             StyleData["BeginEndQuestion", "Printout"], 
             CellMargins -> {{72, 72}, {18, 14}}, LineSpacing -> {0, 12}, 
             FontSize -> 10, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
         "BeginAnswer is used in the In and Out column directly after an \
EndQuestion or BeginEndQuestion cell style to begin the answer portion. \
Followed by Text or Input/Output etc.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BeginAnswer"], CellDingbat -> "A:", 
             CellMargins -> {{89, 35}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 4}, CounterIncrements -> "Text", FontFamily -> 
             "Times", FontSize -> 12], 
            Cell[
             StyleData["BeginAnswer", "Presentation"]], 
            Cell[
             StyleData["BeginAnswer", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Answer"], 
             CellMargins -> {{89, 35}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 4}, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["Answer", "Presentation"]], 
            Cell[
             StyleData["Answer", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["EditorialComment"], CellFrame -> False, CellDingbat -> 
             "\[FilledCircle]", 
             CellMargins -> {{36, 25}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 3}, CounterIncrements -> "Text", FontColor -> 
             RGBColor[1, 0, 0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["EditorialComment", "Presentation"]], 
            Cell[
             StyleData["EditorialComment", "Printout"], 
             CellMargins -> {{24, 80}, {Inherited, 0}}, LineSpacing -> {1, 3},
              FontSize -> 10, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
         "SecondAuthor to be used after a Section cell. Author name(s) credit \
a particular portion of a notebook. Used for columns Tech Support and Tricks \
of the Trade. Usually followed by a Text cell with author affiliation/email, \
etc.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SecondAuthor"], ShowCellBracket -> False, 
             ShowSelection -> True, 
             CellMargins -> {{67, 24}, {Inherited, Inherited}}, 
             CellGroupingRules -> "NormalGrouping", PageBreakBelow -> False, 
             StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
             14, FontWeight -> "Bold"], 
            Cell[
             StyleData["SecondAuthor", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["SecondAuthor", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 14}, 
             FontSize -> 12]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\", use \"SXR\" and \"SXO\" for \
inline styles.", "EditorialComment"], 
         Cell[
         "SectionAboutAuthor to be used as the section head for the About the \
Author portion of a notebook.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SectionAboutAuthor"], 
             CellMargins -> {{54, 25}, {10, 60}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CellFrameMargins -> 4, FontFamily -> "Helvetica", 
             FontSize -> 12, FontWeight -> "Bold"], 
            Cell[
             StyleData["SectionAboutAuthor", "Presentation"]], 
            Cell[
             StyleData["SectionAboutAuthor", "Printout"], CellFrame -> False, 
             CellMargins -> {{72, 72}, {0, 30}}, FontSize -> 12]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\", use \"SXR\" and \"SXO\" for \
inline styles.", "EditorialComment"], 
         Cell[
         "TextAboutAuthor is to be used for the text in the About the Author \
portion of a notebook. The last paragraph should be affiliation and contact \
information with author name set in bold.\n\nUse \"AboutAuthorI\", \
\"AboutAuthorB\", and \"AboutAuthorBI\" for inline styles. Sets serif in \
Working, sans serif in Printout and Production.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TextAboutAuthor"], CellMargins -> {{54, 24}, {2, 5}}, 
             LineSpacing -> {1, 3}, CounterIncrements -> "Text", FontSize -> 
             12], 
            Cell[
             StyleData["TextAboutAuthor", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["TextAboutAuthor", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 11}, 
             FontSize -> 9]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], CellDingbat -> None, 
             CellMargins -> {{67, 25}, {6, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 70}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsubsubsection", StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["Subsubsubsection", "Presentation"]], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], CellDingbat -> None, 
             CellMargins -> {{72, 72}, {-4, 2}}, FontSize -> 9]}, Closed]], 
         Cell[
         "Production sets FontWeight->\"Plain\", use inline styles \"SB\" and \
\"SBO\".", "EditorialComment"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Display Formulas and Programming", "Section", CellFrame -> False, 
          CellDingbat -> None, ShowCellBracket -> True, 
          CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayFormula"], CellMargins -> {{67, 24}, {4, 4}}, 
             CellHorizontalScrolling -> True, PageBreakAbove -> False, 
             DefaultFormatType -> TraditionalForm, TextAlignment -> Center, 
             ScriptLevel -> 0, SingleLetterItalics -> True, SpanMaxSize -> 
             Infinity, FormatTypeAutoConvert -> False, FontFamily -> "Times", 
             FontSize -> 12, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}, 
             GridBoxOptions -> {AllowScriptLevelChange -> False}], 
            Cell[
             StyleData["DisplayFormula", "Presentation"]], 
            Cell[
             StyleData["DisplayFormula", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, 
             PrivateEvaluationOptions -> {"OutputFormPageWidth" -> 342}, 
             LineSpacing -> {1.25, 0}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ChemicalFormula"], CellMargins -> {{67, 24}, {4, 4}}, 
             PageBreakAbove -> False, DefaultFormatType -> 
             DefaultInputFormatType, AutoSpacing -> False, 
             ScriptBaselineShifts -> {0.6, Automatic}, ScriptLevel -> 1, 
             SingleLetterItalics -> False, ZeroWidthTimes -> False, 
             FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["ChemicalFormula", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["ChemicalFormula", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          
          TextData[{
           "Program cell style to be followed by NumberedProgramCaption. See  \
ProgramNoLabel cell style if nonevaluatable source code to be displayed  \
(e.g., program listings from a program language other than ", 
            StyleBox["Mathematica", FontSlant -> "Italic"], ")."}], 
          "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Program"], CellMargins -> {{67, 25}, {Inherited, 6}}, 
             FontFamily -> "Courier", FontSize -> 10, FontWeight -> "Plain"], 
            Cell[
             StyleData["Program", "Presentation"]], 
            Cell[
             StyleData["Program", "Printout"], 
             CellMargins -> {{72, 72}, {2, 18}}, LineSpacing -> {0, 11}, 
             FontSize -> 9]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ProgramNoLabel"], CellMargins -> {{67, 25}, {10, 10}},
              FontFamily -> "Courier", FontSize -> 10, FontWeight -> "Plain"], 
            Cell[
             StyleData["ProgramNoLabel", "Presentation"]], 
            Cell[
             StyleData["ProgramNoLabel", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, LineSpacing -> {0, 11}, 
             FontSize -> 9]}, Closed]], 
         Cell[
         "Table cell style to be used for cells containing displayed tabular \
material. May be followed by NumberedTableCaption cell.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Table"], CellMargins -> {{67, 24}, {5, 10}}, 
             DefaultFormatType -> TraditionalForm, TextAlignment -> Center, 
             FontFamily -> "Times", FontSize -> 12, Background -> 
             GrayLevel[0.899001]], 
            Cell[
             StyleData["Table", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["Table", "Printout"], 
             CellMargins -> {{72, 72}, {0, 18}}, FontSize -> 10, Background -> 
             None]}, Closed]], 
         Cell["DefinitionBox, 2 left-aligned columns.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DefinitionBox"], CellFrame -> 0.5, 
             CellMargins -> {{67, 24}, {8, 10}}, CellHorizontalScrolling -> 
             True, AutoIndent -> False, AutoSpacing -> False, 
             SingleLetterItalics -> False, LineIndent -> 0, FontFamily -> 
             "Times", FontSize -> 12, Background -> GrayLevel[0.899001], 
             GridBoxOptions -> {
              GridBoxAlignment -> {
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
               GridBoxItemSize -> {"Columns" -> {
                   Scaled[0.4], {
                    Scaled[0.6]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
                 "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.6]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}}}], 
            Cell[
             StyleData["DefinitionBox", "Presentation"]], 
            Cell[
             StyleData["DefinitionBox", "Printout"], 
             CellMargins -> {{72, 72}, {8, 10}}, FontSize -> 10, Background -> 
             None]}, Closed]], 
         Cell[
         "DefinitionBoxInList, 2 left-aligned columns, additional Left margin \
to allow for use within NumberedList.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DefinitionBoxInList"], CellFrame -> 0.5, 
             CellMargins -> {{103, 24}, {8, 10}}, CellHorizontalScrolling -> 
             True, AutoIndent -> False, AutoSpacing -> False, 
             SingleLetterItalics -> False, LineIndent -> 0, FontFamily -> 
             "Times", FontSize -> 12, Background -> GrayLevel[0.899001], 
             GridBoxOptions -> {
              GridBoxAlignment -> {
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
               GridBoxItemSize -> {"Columns" -> {
                   Scaled[0.4], {
                    Scaled[0.6]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
                 "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.6]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}}}], 
            Cell[
             StyleData["DefinitionBoxInList", "Presentation"]], 
            Cell[
             StyleData["DefinitionBoxInList", "Printout"], 
             CellMargins -> {{109, 72}, {8, 10}}, FontSize -> 10, Background -> 
             None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DefinitionBoxInListTOP"], CellFrame -> 0.5, 
             CellMargins -> {{103, 24}, {8, 10}}, CellHorizontalScrolling -> 
             True, AutoIndent -> False, AutoSpacing -> False, 
             SingleLetterItalics -> False, LineIndent -> 0, FontFamily -> 
             "Times", FontSize -> 12, Background -> GrayLevel[0.899001], 
             GridBoxOptions -> {
              GridBoxAlignment -> {
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}, 
               GridBoxItemSize -> {"Columns" -> {
                   Scaled[0.4], {
                    Scaled[0.6]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
                 "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.6]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}}}], 
            Cell[
             StyleData["DefinitionBoxInListTOP", "Presentation"]], 
            Cell[
             StyleData["DefinitionBoxInListTOP", "Printout"], 
             CellMargins -> {{109, 72}, {8, 10}}, FontSize -> 10, Background -> 
             None]}, Closed]], 
         Cell[
         "PseudoCellExpression cell style to be used when displaying \
unformatted box expressions. ", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PseudoCellExpression"], 
             CellFrame -> {{0, 0}, {0, 0.5}}, 
             CellMargins -> {{67, 17}, {Inherited, Inherited}}, 
             CellFrameMargins -> 2, LineSpacing -> {1, 4}, FontFamily -> 
             "Courier", FontSize -> 12], 
            Cell[
             StyleData["PseudoCellExpression", "Presentation"]], 
            Cell[
             StyleData["PseudoCellExpression", "Printout"], 
             CellMargins -> {{84, 96}, {Inherited, Inherited}}, 
             LineSpacing -> {0, 12}, FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Styles for Headers and Footers", "Section", CellFrame -> False, 
          CellDingbat -> None, ShowCellBracket -> True, 
          CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 9, 
          FontWeight -> "Bold"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 7, 
          FontSlant -> "Oblique"], 
         Cell[
         "Production sets FontSlant->\"Plain\" to avoid double slanting, sets \
FontFamily->\"O Futura BookOblique\".", "EditorialComment"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Frontmatter Styles", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["tocentry"], 
             CellMargins -> {{67, 24}, {Inherited, Inherited}}, AutoIndent -> 
             True, TabFilling -> ".", LineSpacing -> {1, 4}, FontFamily -> 
             "Times", FontSize -> 12], 
            Cell[
             StyleData["tocentry", "Presentation"]], 
            Cell[
             StyleData["tocentry", "Printout"], 
             CellMargins -> {{84, 72}, {0, 0}}, LineSpacing -> {0, 12}, 
             ParagraphIndent -> 0, FontSize -> 10]}, Closed]], 
         Cell[
         "LetterWriter to be used after a letter. Use inline formatting SCBO \
for person's name. Use Text cell style for letter text.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LetterWriter"], CellMargins -> {{67, 24}, {4, 4}}, 
             LineSpacing -> {1, 4}, FontFamily -> "Times", FontSize -> 12, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["LetterWriter", "Presentation"]], 
            Cell[
             StyleData["LetterWriter", "Printout"], 
             CellMargins -> {{72, 72}, {2, 4}}, TextJustification -> 1, 
             Hyphenation -> True, LineSpacing -> {0, 12}, FontSize -> 10, 
             FontProperties -> {
              "FontMonospaced" -> False, "FontSerifed" -> True}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LetterReply"], 
             CellMargins -> {{67, 24}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 4}, FontFamily -> "Times", FontSize -> 12, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["LetterReply", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["LetterReply", "Printout"], 
             CellMargins -> {{72, 72}, {8, 4}}, LineSpacing -> {0, 12}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["IndexEntry"], 
             CellMargins -> {{67, 24}, {Inherited, Inherited}}, 
             LineSpacing -> {1, 4}, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["IndexEntry", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["IndexEntry", "Printout"], PageWidth -> 336, 
             CellMargins -> {{72, 72}, {0, 0}}, AutoIndent -> True, 
             LineSpacing -> {0, 10}, ParagraphIndent -> -27, TabSpacings -> 1,
              FontSize -> 8]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Classified"], CellFrame -> {{0, 0}, {0, 2}}, 
             CellMargins -> {{67, 24}, {Inherited, Inherited}}, 
             CellFrameMargins -> False, LineSpacing -> {1, 4}, FontFamily -> 
             "Helvetica", FontSize -> 12], 
            Cell[
             StyleData["Classified", "Presentation"], FontSize -> 14], 
            Cell[
             StyleData["Classified", "Printout"], 
             CellMargins -> {{72, 24}, {Inherited, 0}}, LineSpacing -> {1, 3},
              FontSize -> 10]}, Closed]], 
         Cell["Use inline styles \"SB\" and \"SBO\".", "EditorialComment"]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Hyperlink Styles", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell["The cells below define styles used for ButtonBoxes.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0, 0], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Presentation"]], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
         "The following styles are for linking automatically to the locally \
installed on-line help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Presentation"]], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Presentation"]], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontColor -> GrayLevel[0]]},
            Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "FormatType Styles", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "These cells define styles that are mixed in with other cells.  If \
the FormatType of a cell style matches the name of one of the styles defined \
below, then that style is applied along with the local cell style \
definitions. ", "Text", CellMargins -> {{24, 0}, {Inherited, Inherited}}], 
         Cell[
          StyleData["CellExpression"], CellMargins -> {{54, 24}, {2, 4}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, Hyphenation -> False, 
          AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12, Background -> GrayLevel[1]], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, Hyphenation -> 
          False, LineSpacing -> {1.25, 0}, StyleMenuListing -> None, 
          FontFamily -> "Courier", 
          FontProperties -> {
           "FontMonospaced" -> True, "FontSerifed" -> True}], 
         Cell[
          StyleData["OutputForm"], LineSpacing -> {1.25, 0}, StyleMenuListing -> 
          None, FontFamily -> "Courier", 
          FontProperties -> {
           "FontMonospaced" -> True, "FontSerifed" -> True}], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", 
          FontProperties -> {
           "FontMonospaced" -> True, "FontSerifed" -> True}], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, ZeroWidthTimes -> False, 
          StyleMenuListing -> None, 
          FontProperties -> {
           "FontMonospaced" -> False, "FontSerifed" -> True}], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text", 
          CellMargins -> {{24, 0}, {Inherited, Inherited}}], 
         Cell[
          StyleData["InlineCell"], TextAlignment -> Left, ScriptLevel -> 1, 
          StyleMenuListing -> None], 
         Cell[
          StyleData["InlineCellEditing"], StyleMenuListing -> None, 
          Background -> RGBColor[1, 0.749996, 0.8]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Inline Formatting", "Section", CellFrame -> False, CellDingbat -> 
          None, ShowCellBracket -> True, CellMargins -> {{0, 0}, {10, 40}}, 
          CellFrameMargins -> {{20, 4}, {8, 8}}, FontColor -> GrayLevel[1], 
          Background -> RGBColor[0.269902, 0.558434, 0.715618]], 
         Cell[
         "InlineInput is for code segments embedded within another cell. Sets \
as FormatType->DefaultInputFormatType.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineInput"], Evaluatable -> True, CellGroupingRules -> 
             "InputGrouping", CellHorizontalScrolling -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> DefaultInputFormatType, 
             ShowStringCharacters -> True, NumberMarks -> True, FontFamily -> 
             "Courier"], 
            Cell[
             StyleData["InlineInput", "Presentation"]], 
            Cell[
             StyleData["InlineInput", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineInputBold"], Evaluatable -> True, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> DefaultInputFormatType, 
             ShowStringCharacters -> True, NumberMarks -> True, FontFamily -> 
             "Courier", FontWeight -> "Bold"], 
            Cell[
             StyleData["InlineInputBold", "Presentation"]], 
            Cell[
             StyleData["InlineInputBold", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineOutput"], Evaluatable -> False, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> DefaultInputFormatType, 
             ShowStringCharacters -> True, NumberMarks -> True, FontFamily -> 
             "Courier"], 
            Cell[
             StyleData["InlineOutput", "Presentation"]]}, Closed]], 
         Cell[
         "InlineInputTraditionalForm is for code segments embedded within \
another cell \nfor articles that set Default Input/Output FormatType to \
TraditionalForm. \nSets FormatType->TraditionalForm.", "EditorialComment"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineInputTraditionalForm"], CellHorizontalScrolling -> 
             True, FormatType -> TraditionalForm, ShowStringCharacters -> 
             True, NumberMarks -> True, SingleLetterItalics -> True, 
             ZeroWidthTimes -> False], 
            Cell[
             StyleData["InlineInputTraditionalForm", "Presentation"]], 
            Cell[
             StyleData["InlineInputTraditionalForm", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineInputTraditionalFormBold"], 
             CellHorizontalScrolling -> True, FormatType -> TraditionalForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             SingleLetterItalics -> True, ZeroWidthTimes -> False, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["InlineInputTraditionalFormBold", "Presentation"]], 
            Cell[
             StyleData["InlineInputTraditionalFormBold", "Printout"]]}, 
           Closed]], 
         Cell[
         "The following styles are for modifying individual words or letters \
in a cell exclusive of the cell style.", "EditorialComment"], 
         Cell[
         "RM used to change selection to FontWeight->Plain, FontSlant->Plain",
           "EditorialComment"], 
         Cell[
          StyleData["RM"], FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
         "BF used to change selection to FontWeight->Bold, FontSlant->Plain", 
          "EditorialComment"], 
         Cell[
          StyleData["BF"], FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
         "IT used to change selection to FontWeight->Plain, \
FontSlant->Italic", "EditorialComment"], 
         Cell[
          StyleData["IT"], FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
         "BFI used to change selection to FontWeight->Bold, \
FontSlant->Italic", "EditorialComment"], 
         Cell[
          StyleData["BFI"], FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
         "TR used to change selection to normal text font (Janson Text), \
FontWeight->Plain, \nFontSlant->Plain", "EditorialComment"], 
         Cell[
          StyleData["TR"], FontFamily -> "Times", FontWeight -> "Plain", 
          FontSlant -> "Plain"], 
         Cell[
         "TI used to change selection to normal text font (Janson Text), \
FontWeight->Plain, \nFontSlant->Italic", "EditorialComment"], 
         Cell[
          StyleData["TI"], FontFamily -> "Times", FontWeight -> "Plain", 
          FontSlant -> "Italic"], 
         Cell[
         "TB used to change selection to normal text font, FontWeight->Bold, \
\nFontSlant->Plain", "EditorialComment"], 
         Cell[
          StyleData["TB"], FontFamily -> "Times", FontWeight -> "Bold", 
          FontSlant -> "Plain"], 
         Cell[
         "TBI used to change selection to normal text font, FontWeight->Bold, \
\nFontSlant->Italic", "EditorialComment"], 
         Cell[
          StyleData["TBI"], FontFamily -> "Times", FontWeight -> "Bold", 
          FontSlant -> "Italic"], 
         Cell[
         "MR used to change selection to monospace font with \
FontWeight->Plain, \nFontSlant->Plain.", "EditorialComment"], 
         Cell[
          StyleData["MR"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Plain", FontSlant -> "Plain"], 
         Cell[
         "MO used to change selection to monospace font with \
FontWeight->Plain, \nFontSlant->Oblique", "EditorialComment"], 
         Cell[
          StyleData["MO"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Plain", FontSlant -> "Oblique"], 
         Cell[
         "MB used to change selection to monospace font with \
FontWeight->Bold, \nFontSlant->Plain", "EditorialComment"], 
         Cell[
          StyleData["MB"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Bold", FontSlant -> "Plain"], 
         Cell[
         "MBO used to change selection to monospace font with \
FontWeight->Bold, \nFontSlant->Oblique", "EditorialComment"], 
         Cell[
          StyleData["MBO"], 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Bold", FontSlant -> "Oblique"], 
         Cell[
         "SR used to change selection to sans serif font (Futura Book)", 
          "EditorialComment"], 
         Cell[
          StyleData["SR"], FontFamily -> "Helvetica", FontWeight -> "Plain", 
          FontSlant -> "Plain"], 
         Cell[
         "SO used to change selection to oblique sans serif font (Futura Book \
Oblique)", "EditorialComment"], 
         Cell[
          StyleData["SO"], FontFamily -> "Helvetica", FontWeight -> "Plain", 
          FontSlant -> "Oblique"], 
         Cell[
         "SB used to change selection to sans serif font bold (Futura Heavy)",
           "EditorialComment"], 
         Cell[
          StyleData["SB"], FontFamily -> "Helvetica", FontWeight -> "Bold", 
          FontSlant -> "Plain"], 
         Cell[
         "SBO used to change selection to bold oblique sans serif font \
(Futura Heavy \nOblique)", "EditorialComment"], 
         Cell[
          StyleData["SBO"], FontFamily -> "Helvetica", FontWeight -> "Bold", 
          FontSlant -> "Oblique"], 
         Cell[
         "SCL used to change selection to sans serif font light (Futura \
Condensed Light)", "EditorialComment"], 
         Cell[
          StyleData["SCL"], FontFamily -> "Helvetica", FontWeight -> "Plain", 
          FontSlant -> "Plain", FontTracking -> "Plain"], 
         Cell[
         "SCLO used to change selection to sans serif font light oblique \
(Futura Condensed Light Oblique)", "EditorialComment"], 
         Cell[
          StyleData["SCLO"], FontFamily -> "Helvetica", FontWeight -> "Plain",
           FontSlant -> "Oblique", FontTracking -> "Plain"], 
         Cell[
         "SCB used to change selection to sans serif font cond bold (Futura \
Condensed Bold)", "EditorialComment"], 
         Cell[
          StyleData["SCB"], FontFamily -> "Helvetica", FontWeight -> "Bold", 
          FontSlant -> "Plain", FontTracking -> "Plain"], 
         Cell[
         "SCBO used to change selection to sans serif font cond bold oblique \
(Futura Condensed Bold Oblique)", "EditorialComment"], 
         Cell[
          StyleData["SCBO"], FontFamily -> "Helvetica", FontWeight -> "Bold", 
          FontSlant -> "Oblique", FontTracking -> "Plain"], 
         Cell[
         "SXR used to change selection to sans serif font cond extra bold \
(Futura Condensed Extra Bold)", "EditorialComment"], 
         Cell[
          StyleData["SXR"], FontFamily -> "Helvetica", FontWeight -> "Bold", 
          FontSlant -> "Plain", FontTracking -> "Plain"], 
         Cell[
         "SXO used to change selection to sans serif font cond extra bold \
oblique (Futura Condensed Extra Bold Oblique)", "EditorialComment"], 
         Cell[
          StyleData["SXO"], FontFamily -> "Helvetica", FontWeight -> "Bold", 
          FontSlant -> "Oblique", FontTracking -> "Plain"], 
         Cell[
          StyleData["AboutAuthorR"], FontFamily -> "Times", FontWeight -> 
          "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["AboutAuthorI"], FontFamily -> "Times", FontWeight -> 
          "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["AboutAuthorB"], FontFamily -> "Times", FontWeight -> 
          "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["AboutAuthorBI"], FontFamily -> "Times", FontWeight -> 
          "Bold", FontSlant -> "Italic"]}, Closed]]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "7.0 for Microsoft Windows (32-bit) (November 10, 2008)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Casella"->{
  Cell[334735, 7106, 324, 13, 23, "Reference",
   CellTags->"Casella"]},
 "Fisher"->{
  Cell[336480, 7184, 418, 16, 23, "Reference",
   CellTags->"Fisher"]},
 "Friedman"->{
  Cell[335746, 7151, 422, 16, 23, "Reference",
   CellTags->"Friedman"]},
 "Haykin"->{
  Cell[335062, 7121, 336, 13, 23, "Reference",
   CellTags->"Haykin"]},
 "Info3477658628-6996725"->{
  Cell[32822, 1325, 538, 8, 73, "Print",
   CellTags->"Info3477658628-6996725"]},
 "Keerthi"->{
  Cell[336901, 7202, 453, 16, 37, "Reference",
   CellTags->"Keerthi"]},
 "Russell"->{
  Cell[335401, 7136, 342, 13, 23, "Reference",
   CellTags->"Russell"]},
 "Vapnik"->{
  Cell[336171, 7169, 306, 13, 23, "Reference",
   CellTags->"Vapnik"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Casella", 437539, 9307},
 {"Fisher", 437625, 9310},
 {"Friedman", 437712, 9313},
 {"Haykin", 437799, 9316},
 {"Info3477658628-6996725", 437900, 9319},
 {"Keerthi", 437996, 9322},
 {"Russell", 438083, 9325},
 {"Vapnik", 438169, 9328}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 167, 7, 25, "OnlineHeader"],
Cell[CellGroupData[{
Cell[737, 31, 70, 0, 105, "Title"],
Cell[810, 33, 91, 4, 54, "Author"],
Cell[904, 39, 760, 17, 168, "Abstract"],
Cell[CellGroupData[{
Cell[1689, 60, 34, 0, 59, "SectionFirst"],
Cell[1726, 62, 1025, 34, 84, "Text"],
Cell[2754, 98, 863, 29, 100, "Text"],
Cell[3620, 129, 499, 18, 40, "DisplayFormula"],
Cell[4122, 149, 151, 6, 27, "Text"],
Cell[4276, 157, 833, 30, 44, "DisplayFormula"],
Cell[5112, 189, 855, 35, 50, "Text"],
Cell[5970, 226, 1206, 33, 150, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7213, 264, 42, 0, 59, "Section"],
Cell[7258, 266, 674, 23, 52, "Text"],
Cell[7935, 291, 224, 8, 23, "DisplayFormula"],
Cell[8162, 301, 1284, 40, 169, "Text"],
Cell[9449, 343, 416, 15, 34, "NumberedEquation"],
Cell[9868, 360, 1151, 40, 103, "Text"],
Cell[11022, 402, 17231, 767, 198, 14183, 714, "GraphicsData", "PostScript", \
"PlacedGraphics"],
Cell[28256, 1171, 606, 15, 60, "NumberedFigureCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28899, 1191, 51, 0, 59, "Section"],
Cell[CellGroupData[{
Cell[28975, 1195, 47, 0, 28, "SubsectionNoSpace"],
Cell[29025, 1197, 158, 3, 50, "Text"],
Cell[29186, 1202, 531, 17, 73, "NumberedEquation"],
Cell[29720, 1221, 729, 17, 119, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30486, 1243, 38, 0, 52, "Subsection"],
Cell[30527, 1245, 312, 8, 50, "Text"],
Cell[30842, 1255, 502, 16, 53, "NumberedEquation"],
Cell[31347, 1273, 830, 29, 76, "Text"],
Cell[32180, 1304, 564, 14, 102, "Input"],
Cell[CellGroupData[{
Cell[32769, 1322, 50, 1, 41, "Input"],
Cell[32822, 1325, 538, 8, 73, "Print",
 CellTags->"Info3477658628-6996725"]
}, Open  ]],
Cell[33375, 1336, 759, 25, 77, "Text"],
Cell[34137, 1363, 348, 10, 50, "Text"],
Cell[34488, 1375, 244, 8, 36, "NumberedEquation"],
Cell[34735, 1385, 392, 15, 48, "NumberedEquation"],
Cell[35130, 1402, 549, 21, 54, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35716, 1428, 42, 0, 52, "Subsection"],
Cell[35761, 1430, 171, 6, 27, "Text"],
Cell[35935, 1438, 1112, 37, 133, "InputOnly"],
Cell[37050, 1477, 218, 8, 50, "Text"],
Cell[CellGroupData[{
Cell[37293, 1489, 212, 5, 62, "Input"],
Cell[37508, 1496, 362, 7, 41, "Output"]
}, Open  ]],
Cell[37885, 1506, 286, 6, 73, "Text"],
Cell[38174, 1514, 1180, 37, 77, "DisplayFormula"],
Cell[39357, 1553, 212, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[39594, 1563, 105, 2, 41, "Input"],
Cell[39702, 1567, 189, 5, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39928, 1577, 97, 2, 41, "Input"],
Cell[40028, 1581, 89, 1, 41, "Output"]
}, Open  ]],
Cell[40132, 1585, 283, 6, 73, "Text"],
Cell[CellGroupData[{
Cell[40440, 1595, 100, 2, 41, "Input"],
Cell[40543, 1599, 384, 8, 56, "Message"],
Cell[40930, 1609, 45509, 756, 249, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86488, 2371, 39, 0, 52, "Subsection"],
Cell[86530, 2373, 610, 15, 100, "Text"],
Cell[87143, 2390, 868, 30, 66, "DisplayFormula"],
Cell[88014, 2422, 255, 9, 27, "Text"],
Cell[CellGroupData[{
Cell[88294, 2435, 227, 5, 62, "Input"],
Cell[88524, 2442, 371, 7, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88932, 2454, 100, 2, 41, "Input"],
Cell[89035, 2458, 45518, 755, 249, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134602, 3219, 45, 0, 52, "Subsection"],
Cell[134650, 3221, 333, 6, 73, "Text"],
Cell[134986, 3229, 114, 2, 52, "InputOnly"],
Cell[CellGroupData[{
Cell[135125, 3235, 537, 14, 62, "Input"],
Cell[135665, 3251, 2476, 75, 88, "Output"]
}, Open  ]],
Cell[138156, 3329, 137, 4, 27, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138342, 3339, 44, 0, 59, "Section"],
Cell[138389, 3341, 1167, 30, 165, "Text"],
Cell[139559, 3373, 955, 34, 73, "Text"],
Cell[140517, 3409, 658, 24, 34, "NumberedEquation"],
Cell[141178, 3435, 680, 25, 73, "Text"],
Cell[141861, 3462, 848, 23, 119, "Text"],
Cell[142712, 3487, 581, 17, 73, "Text"],
Cell[143296, 3506, 235, 7, 23, "DisplayFormula"],
Cell[143534, 3515, 970, 34, 73, "Text"],
Cell[144507, 3551, 271, 10, 25, "DisplayFormula"],
Cell[144781, 3563, 65, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[144871, 3567, 56, 0, 52, "Subsection"],
Cell[144930, 3569, 195, 5, 50, "Text"],
Cell[CellGroupData[{
Cell[145150, 3578, 102, 2, 41, "Input"],
Cell[145255, 3582, 162, 5, 41, "Output"]
}, Open  ]],
Cell[145432, 3590, 88, 2, 27, "Text"],
Cell[CellGroupData[{
Cell[145545, 3596, 1888, 56, 214, "Input"],
Cell[147436, 3654, 1528, 31, 249, "Output"]
}, Open  ]],
Cell[148979, 3688, 256, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[149260, 3698, 441, 12, 82, "Input"],
Cell[149704, 3712, 716, 12, 61, "Output"]
}, Open  ]],
Cell[150435, 3727, 162, 4, 50, "Text"],
Cell[CellGroupData[{
Cell[150622, 3735, 154, 3, 41, "Input"],
Cell[150779, 3740, 61048, 1014, 339, "Output"]
}, Open  ]],
Cell[211842, 4757, 128, 3, 52, "InputOnly"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212007, 4765, 51, 0, 52, "Subsection"],
Cell[212061, 4767, 708, 17, 119, "Text"],
Cell[212772, 4786, 1148, 38, 133, "InputOnly"],
Cell[213923, 4826, 150, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[214098, 4836, 135, 3, 41, "Input"],
Cell[214236, 4841, 117, 3, 41, "Output"]
}, Open  ]],
Cell[214368, 4847, 284, 8, 50, "Text"],
Cell[CellGroupData[{
Cell[214677, 4859, 272, 8, 62, "Input"],
Cell[214952, 4869, 755, 14, 84, "Output"]
}, Open  ]],
Cell[215722, 4886, 506, 13, 96, "Text"],
Cell[CellGroupData[{
Cell[216253, 4903, 166, 4, 41, "Input"],
Cell[216422, 4909, 609, 15, 233, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217092, 4931, 48, 0, 59, "Section"],
Cell[217143, 4933, 351, 9, 73, "Text"],
Cell[CellGroupData[{
Cell[217519, 4946, 684, 22, 85, "Input"],
Cell[218206, 4970, 561, 12, 249, "Output"]
}, Open  ]],
Cell[218782, 4985, 171, 4, 27, "Text"],
Cell[218956, 4991, 787, 25, 39, "DisplayFormula"],
Cell[219746, 5018, 581, 17, 73, "Text"],
Cell[CellGroupData[{
Cell[220352, 5039, 462, 14, 41, "Input"],
Cell[220817, 5055, 3133, 59, 264, "Output"]
}, Open  ]],
Cell[223965, 5117, 771, 23, 96, "Text"],
Cell[CellGroupData[{
Cell[224761, 5144, 583, 15, 102, "Input"],
Cell[225347, 5161, 391, 8, 41, "Output"]
}, Open  ]],
Cell[225753, 5172, 369, 9, 73, "Text"],
Cell[CellGroupData[{
Cell[226147, 5185, 183, 3, 41, "Input"],
Cell[226333, 5190, 17644, 298, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244014, 5493, 180, 3, 41, "Input"],
Cell[244197, 5498, 87, 1, 41, "Output"]
}, Open  ]],
Cell[244299, 5502, 120, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[244444, 5509, 194, 3, 41, "Input"],
Cell[244641, 5514, 431, 12, 41, "Output"]
}, Open  ]],
Cell[245087, 5529, 161, 4, 52, "InputOnly"],
Cell[CellGroupData[{
Cell[245273, 5537, 45, 0, 52, "Subsection"],
Cell[245321, 5539, 153, 3, 50, "Text"],
Cell[CellGroupData[{
Cell[245499, 5546, 1357, 43, 105, "Input"],
Cell[246859, 5591, 3722, 69, 394, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250618, 5665, 546, 14, 102, "Input"],
Cell[251167, 5681, 1866, 26, 137, "Output"]
}, Open  ]],
Cell[253048, 5710, 48, 0, 27, "Text"],
Cell[CellGroupData[{
Cell[253121, 5714, 271, 6, 41, "Input"],
Cell[253395, 5722, 636, 18, 41, "Output"]
}, Open  ]],
Cell[254046, 5743, 212, 7, 50, "Text"],
Cell[CellGroupData[{
Cell[254283, 5754, 253, 8, 41, "Input"],
Cell[254539, 5764, 78252, 1283, 287, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[332852, 7054, 29, 0, 59, "Section"],
Cell[332884, 7056, 607, 12, 119, "Text"],
Cell[333494, 7070, 648, 15, 96, "Text"],
Cell[334145, 7087, 521, 12, 96, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334703, 7104, 29, 0, 59, "Section"],
Cell[334735, 7106, 324, 13, 23, "Reference",
 CellTags->"Casella"],
Cell[335062, 7121, 336, 13, 23, "Reference",
 CellTags->"Haykin"],
Cell[335401, 7136, 342, 13, 23, "Reference",
 CellTags->"Russell"],
Cell[335746, 7151, 422, 16, 23, "Reference",
 CellTags->"Friedman"],
Cell[336171, 7169, 306, 13, 23, "Reference",
 CellTags->"Vapnik"],
Cell[336480, 7184, 418, 16, 23, "Reference",
 CellTags->"Fisher"],
Cell[336901, 7202, 453, 16, 37, "Reference",
 CellTags->"Keerthi"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337391, 7223, 38, 0, 59, "Section"],
Cell[337432, 7225, 44, 3, 50, "Text"],
Cell[337479, 7230, 237, 7, 24, "SmallText"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337753, 7242, 47, 0, 85, "SectionAboutAuthor"],
Cell[337803, 7244, 201, 4, 40, "TextAboutAuthor"],
Cell[338007, 7250, 420, 9, 40, "TextAboutAuthor"],
Cell[338430, 7261, 310, 8, 22, "TextAboutAuthor"],
Cell[338743, 7271, 363, 9, 94, "TextAboutAuthor"],
Cell[339109, 7282, 383, 9, 94, "TextAboutAuthor"],
Cell[339495, 7293, 374, 9, 94, "TextAboutAuthor"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
